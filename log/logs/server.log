2016-08-02 00:03:33  [ main:0 ] - [ INFO ]  {dataSource-1} inited
2016-08-02 00:03:33  [ main:51 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-08-02 00:03:33  [ main:60 ] - [ DEBUG ]  Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-08-02 00:03:33  [ main:63 ] - [ DEBUG ]  Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-08-02 00:03:33  [ main:66 ] - [ DEBUG ]  Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-08-02 00:03:33  [ main:161 ] - [ INFO ]  HHH000412: Hibernate Core {5.1.0.Final}
2016-08-02 00:03:33  [ main:164 ] - [ INFO ]  HHH000206: hibernate.properties not found
2016-08-02 00:03:33  [ main:165 ] - [ INFO ]  HHH000021: Bytecode provider name : javassist
2016-08-02 00:03:33  [ main:186 ] - [ DEBUG ]  Building session factory using internal StandardServiceRegistryBuilder
2016-08-02 00:03:33  [ main:194 ] - [ DEBUG ]  Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-08-02 00:03:33  [ main:195 ] - [ DEBUG ]  Building session factory using provided StandardServiceRegistry
2016-08-02 00:03:33  [ main:230 ] - [ DEBUG ]  Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-08-02 00:03:33  [ main:240 ] - [ INFO ]  HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-08-02 00:03:33  [ main:277 ] - [ DEBUG ]  Adding type registration boolean -> org.hibernate.type.BooleanType@24cc40b6
2016-08-02 00:03:33  [ main:277 ] - [ DEBUG ]  Adding type registration boolean -> org.hibernate.type.BooleanType@24cc40b6
2016-08-02 00:03:33  [ main:278 ] - [ DEBUG ]  Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@24cc40b6
2016-08-02 00:03:33  [ main:279 ] - [ DEBUG ]  Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@78f216da
2016-08-02 00:03:33  [ main:281 ] - [ DEBUG ]  Adding type registration true_false -> org.hibernate.type.TrueFalseType@7f673891
2016-08-02 00:03:33  [ main:281 ] - [ DEBUG ]  Adding type registration yes_no -> org.hibernate.type.YesNoType@3a1b1241
2016-08-02 00:03:33  [ main:284 ] - [ DEBUG ]  Adding type registration byte -> org.hibernate.type.ByteType@49e05e26
2016-08-02 00:03:33  [ main:284 ] - [ DEBUG ]  Adding type registration byte -> org.hibernate.type.ByteType@49e05e26
2016-08-02 00:03:33  [ main:284 ] - [ DEBUG ]  Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@49e05e26
2016-08-02 00:03:33  [ main:285 ] - [ DEBUG ]  Adding type registration character -> org.hibernate.type.CharacterType@267bdf95
2016-08-02 00:03:33  [ main:285 ] - [ DEBUG ]  Adding type registration char -> org.hibernate.type.CharacterType@267bdf95
2016-08-02 00:03:33  [ main:286 ] - [ DEBUG ]  Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@267bdf95
2016-08-02 00:03:33  [ main:289 ] - [ DEBUG ]  Adding type registration short -> org.hibernate.type.ShortType@79a38f0c
2016-08-02 00:03:33  [ main:289 ] - [ DEBUG ]  Adding type registration short -> org.hibernate.type.ShortType@79a38f0c
2016-08-02 00:03:33  [ main:289 ] - [ DEBUG ]  Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79a38f0c
2016-08-02 00:03:33  [ main:291 ] - [ DEBUG ]  Adding type registration integer -> org.hibernate.type.IntegerType@6bee43a2
2016-08-02 00:03:33  [ main:291 ] - [ DEBUG ]  Adding type registration int -> org.hibernate.type.IntegerType@6bee43a2
2016-08-02 00:03:33  [ main:292 ] - [ DEBUG ]  Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6bee43a2
2016-08-02 00:03:33  [ main:295 ] - [ DEBUG ]  Adding type registration long -> org.hibernate.type.LongType@6f80d790
2016-08-02 00:03:33  [ main:296 ] - [ DEBUG ]  Adding type registration long -> org.hibernate.type.LongType@6f80d790
2016-08-02 00:03:33  [ main:296 ] - [ DEBUG ]  Adding type registration java.lang.Long -> org.hibernate.type.LongType@6f80d790
2016-08-02 00:03:33  [ main:301 ] - [ DEBUG ]  Adding type registration float -> org.hibernate.type.FloatType@1ae894e0
2016-08-02 00:03:33  [ main:301 ] - [ DEBUG ]  Adding type registration float -> org.hibernate.type.FloatType@1ae894e0
2016-08-02 00:03:33  [ main:301 ] - [ DEBUG ]  Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1ae894e0
2016-08-02 00:03:33  [ main:304 ] - [ DEBUG ]  Adding type registration double -> org.hibernate.type.DoubleType@7d69eb9d
2016-08-02 00:03:33  [ main:304 ] - [ DEBUG ]  Adding type registration double -> org.hibernate.type.DoubleType@7d69eb9d
2016-08-02 00:03:33  [ main:305 ] - [ DEBUG ]  Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d69eb9d
2016-08-02 00:03:33  [ main:307 ] - [ DEBUG ]  Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61518db
2016-08-02 00:03:33  [ main:308 ] - [ DEBUG ]  Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61518db
2016-08-02 00:03:33  [ main:309 ] - [ DEBUG ]  Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a563e2b
2016-08-02 00:03:33  [ main:310 ] - [ DEBUG ]  Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a563e2b
2016-08-02 00:03:33  [ main:311 ] - [ DEBUG ]  Adding type registration string -> org.hibernate.type.StringType@f930b22
2016-08-02 00:03:33  [ main:312 ] - [ DEBUG ]  Adding type registration java.lang.String -> org.hibernate.type.StringType@f930b22
2016-08-02 00:03:33  [ main:313 ] - [ DEBUG ]  Adding type registration nstring -> org.hibernate.type.StringNVarcharType@77d92e8
2016-08-02 00:03:33  [ main:314 ] - [ DEBUG ]  Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@32b12780
2016-08-02 00:03:33  [ main:316 ] - [ DEBUG ]  Adding type registration url -> org.hibernate.type.UrlType@3b2f060a
2016-08-02 00:03:33  [ main:316 ] - [ DEBUG ]  Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b2f060a
2016-08-02 00:03:33  [ main:319 ] - [ DEBUG ]  Adding type registration date -> org.hibernate.type.DateType@35400b1
2016-08-02 00:03:33  [ main:319 ] - [ DEBUG ]  Adding type registration java.sql.Date -> org.hibernate.type.DateType@35400b1
2016-08-02 00:03:33  [ main:322 ] - [ DEBUG ]  Adding type registration time -> org.hibernate.type.TimeType@3b038bd3
2016-08-02 00:03:33  [ main:322 ] - [ DEBUG ]  Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b038bd3
2016-08-02 00:03:33  [ main:324 ] - [ DEBUG ]  Adding type registration timestamp -> org.hibernate.type.TimestampType@6cb9c607
2016-08-02 00:03:33  [ main:324 ] - [ DEBUG ]  Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6cb9c607
2016-08-02 00:03:33  [ main:324 ] - [ DEBUG ]  Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6cb9c607
2016-08-02 00:03:33  [ main:326 ] - [ DEBUG ]  Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c7a7eb5
2016-08-02 00:03:33  [ main:328 ] - [ DEBUG ]  Adding type registration calendar -> org.hibernate.type.CalendarType@38f7b4fc
2016-08-02 00:03:33  [ main:328 ] - [ DEBUG ]  Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@38f7b4fc
2016-08-02 00:03:33  [ main:328 ] - [ DEBUG ]  Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@38f7b4fc
2016-08-02 00:03:33  [ main:329 ] - [ DEBUG ]  Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1d6c530a
2016-08-02 00:03:33  [ main:331 ] - [ DEBUG ]  Adding type registration locale -> org.hibernate.type.LocaleType@5077ae9e
2016-08-02 00:03:33  [ main:331 ] - [ DEBUG ]  Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5077ae9e
2016-08-02 00:03:33  [ main:332 ] - [ DEBUG ]  Adding type registration currency -> org.hibernate.type.CurrencyType@4bd354f7
2016-08-02 00:03:33  [ main:333 ] - [ DEBUG ]  Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4bd354f7
2016-08-02 00:03:33  [ main:334 ] - [ DEBUG ]  Adding type registration timezone -> org.hibernate.type.TimeZoneType@53c8f0cd
2016-08-02 00:03:33  [ main:334 ] - [ DEBUG ]  Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@53c8f0cd
2016-08-02 00:03:33  [ main:336 ] - [ DEBUG ]  Adding type registration class -> org.hibernate.type.ClassType@100155e7
2016-08-02 00:03:33  [ main:336 ] - [ DEBUG ]  Adding type registration java.lang.Class -> org.hibernate.type.ClassType@100155e7
2016-08-02 00:03:33  [ main:340 ] - [ DEBUG ]  Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@669ec4e5
2016-08-02 00:03:33  [ main:340 ] - [ DEBUG ]  Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@669ec4e5
2016-08-02 00:03:33  [ main:342 ] - [ DEBUG ]  Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@627a0d2b
2016-08-02 00:03:33  [ main:344 ] - [ DEBUG ]  Adding type registration binary -> org.hibernate.type.BinaryType@381fd5f4
2016-08-02 00:03:33  [ main:345 ] - [ DEBUG ]  Adding type registration byte[] -> org.hibernate.type.BinaryType@381fd5f4
2016-08-02 00:03:33  [ main:345 ] - [ DEBUG ]  Adding type registration [B -> org.hibernate.type.BinaryType@381fd5f4
2016-08-02 00:03:33  [ main:347 ] - [ DEBUG ]  Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2884ca1f
2016-08-02 00:03:33  [ main:347 ] - [ DEBUG ]  Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2884ca1f
2016-08-02 00:03:33  [ main:347 ] - [ DEBUG ]  Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2884ca1f
2016-08-02 00:03:33  [ main:349 ] - [ DEBUG ]  Adding type registration image -> org.hibernate.type.ImageType@4dd4a6bb
2016-08-02 00:03:33  [ main:350 ] - [ DEBUG ]  Adding type registration characters -> org.hibernate.type.CharArrayType@3bef08aa
2016-08-02 00:03:33  [ main:351 ] - [ DEBUG ]  Adding type registration char[] -> org.hibernate.type.CharArrayType@3bef08aa
2016-08-02 00:03:33  [ main:351 ] - [ DEBUG ]  Adding type registration [C -> org.hibernate.type.CharArrayType@3bef08aa
2016-08-02 00:03:33  [ main:353 ] - [ DEBUG ]  Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6108f2d9
2016-08-02 00:03:33  [ main:353 ] - [ DEBUG ]  Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6108f2d9
2016-08-02 00:03:33  [ main:353 ] - [ DEBUG ]  Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6108f2d9
2016-08-02 00:03:33  [ main:355 ] - [ DEBUG ]  Adding type registration text -> org.hibernate.type.TextType@203317c5
2016-08-02 00:03:33  [ main:356 ] - [ DEBUG ]  Adding type registration ntext -> org.hibernate.type.NTextType@6709fce5
2016-08-02 00:03:33  [ main:365 ] - [ DEBUG ]  Adding type registration blob -> org.hibernate.type.BlobType@725651ca
2016-08-02 00:03:33  [ main:365 ] - [ DEBUG ]  Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@725651ca
2016-08-02 00:03:33  [ main:366 ] - [ DEBUG ]  Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@50e132fe
2016-08-02 00:03:33  [ main:374 ] - [ DEBUG ]  Adding type registration clob -> org.hibernate.type.ClobType@2b51c08
2016-08-02 00:03:33  [ main:374 ] - [ DEBUG ]  Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2b51c08
2016-08-02 00:03:33  [ main:382 ] - [ DEBUG ]  Adding type registration nclob -> org.hibernate.type.NClobType@21a34a66
2016-08-02 00:03:33  [ main:382 ] - [ DEBUG ]  Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@21a34a66
2016-08-02 00:03:33  [ main:383 ] - [ DEBUG ]  Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@368c820e
2016-08-02 00:03:33  [ main:384 ] - [ DEBUG ]  Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5e0fe231
2016-08-02 00:03:33  [ main:386 ] - [ DEBUG ]  Adding type registration serializable -> org.hibernate.type.SerializableType@50c52858
2016-08-02 00:03:33  [ main:392 ] - [ DEBUG ]  Adding type registration object -> org.hibernate.type.ObjectType@1fa91d58
2016-08-02 00:03:33  [ main:392 ] - [ DEBUG ]  Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1fa91d58
2016-08-02 00:03:33  [ main:393 ] - [ DEBUG ]  Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c4afe7d
2016-08-02 00:03:33  [ main:394 ] - [ DEBUG ]  Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1f8a004b
2016-08-02 00:03:33  [ main:394 ] - [ DEBUG ]  Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d194c1a
2016-08-02 00:03:33  [ main:394 ] - [ DEBUG ]  Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@67d34de2
2016-08-02 00:03:33  [ main:394 ] - [ DEBUG ]  Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@619e65ae
2016-08-02 00:03:33  [ main:394 ] - [ DEBUG ]  Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6625b493
2016-08-02 00:03:33  [ main:394 ] - [ DEBUG ]  Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@35725349
2016-08-02 00:03:33  [ main:395 ] - [ DEBUG ]  Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64b9f908
2016-08-02 00:03:34  [ main:434 ] - [ INFO ]  HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-08-02 00:03:34  [ main:458 ] - [ DEBUG ]  IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-08-02 00:03:34  [ main:464 ] - [ INFO ]  HHH000422: Disabling contextual LOB creation as connection was null
2016-08-02 00:03:34  [ main:505 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-08-02 00:03:34  [ main:506 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-08-02 00:03:34  [ main:507 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-08-02 00:03:34  [ main:507 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-08-02 00:03:34  [ main:507 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-08-02 00:03:34  [ main:509 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-08-02 00:03:34  [ main:509 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-08-02 00:03:34  [ main:511 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-08-02 00:03:34  [ main:512 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-08-02 00:03:34  [ main:512 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-08-02 00:03:34  [ main:513 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-08-02 00:03:34  [ main:513 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-08-02 00:03:34  [ main:514 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-08-02 00:03:34  [ main:515 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-08-02 00:03:34  [ main:549 ] - [ DEBUG ]  Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-08-02 00:03:34  [ main:576 ] - [ DEBUG ]  Binding entity from annotated class: com.qjk.data.User
2016-08-02 00:03:34  [ main:597 ] - [ DEBUG ]  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-08-02 00:03:34  [ main:603 ] - [ DEBUG ]  Import with entity name User
2016-08-02 00:03:34  [ main:610 ] - [ DEBUG ]  Bind entity com.qjk.data.User on table User
2016-08-02 00:03:34  [ main:646 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=uid, insertable=true, updatable=true, unique=false}
2016-08-02 00:03:34  [ main:648 ] - [ DEBUG ]  MetadataSourceProcessor property uid with lazy=false
2016-08-02 00:03:34  [ main:650 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:uid]
2016-08-02 00:03:34  [ main:652 ] - [ DEBUG ]  building SimpleValue for uid
2016-08-02 00:03:34  [ main:654 ] - [ DEBUG ]  Building property uid
2016-08-02 00:03:34  [ main:660 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=email, insertable=true, updatable=true, unique=false}
2016-08-02 00:03:34  [ main:660 ] - [ DEBUG ]  MetadataSourceProcessor property email with lazy=false
2016-08-02 00:03:34  [ main:661 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:email]
2016-08-02 00:03:34  [ main:661 ] - [ DEBUG ]  building SimpleValue for email
2016-08-02 00:03:34  [ main:661 ] - [ DEBUG ]  Building property email
2016-08-02 00:03:34  [ main:662 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=logo, insertable=true, updatable=true, unique=false}
2016-08-02 00:03:34  [ main:662 ] - [ DEBUG ]  MetadataSourceProcessor property logo with lazy=false
2016-08-02 00:03:34  [ main:662 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:logo]
2016-08-02 00:03:34  [ main:662 ] - [ DEBUG ]  building SimpleValue for logo
2016-08-02 00:03:34  [ main:663 ] - [ DEBUG ]  Building property logo
2016-08-02 00:03:34  [ main:663 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=nick, insertable=true, updatable=true, unique=false}
2016-08-02 00:03:34  [ main:663 ] - [ DEBUG ]  MetadataSourceProcessor property nick with lazy=false
2016-08-02 00:03:34  [ main:663 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:nick]
2016-08-02 00:03:34  [ main:663 ] - [ DEBUG ]  building SimpleValue for nick
2016-08-02 00:03:34  [ main:663 ] - [ DEBUG ]  Building property nick
2016-08-02 00:03:34  [ main:664 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=password, insertable=true, updatable=true, unique=false}
2016-08-02 00:03:34  [ main:664 ] - [ DEBUG ]  MetadataSourceProcessor property password with lazy=false
2016-08-02 00:03:34  [ main:664 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:password]
2016-08-02 00:03:34  [ main:664 ] - [ DEBUG ]  building SimpleValue for password
2016-08-02 00:03:34  [ main:665 ] - [ DEBUG ]  Building property password
2016-08-02 00:03:34  [ main:665 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2016-08-02 00:03:34  [ main:665 ] - [ DEBUG ]  MetadataSourceProcessor property phone with lazy=false
2016-08-02 00:03:34  [ main:665 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:phone]
2016-08-02 00:03:34  [ main:665 ] - [ DEBUG ]  building SimpleValue for phone
2016-08-02 00:03:34  [ main:666 ] - [ DEBUG ]  Building property phone
2016-08-02 00:03:34  [ main:668 ] - [ DEBUG ]  Starting fillSimpleValue for uid
2016-08-02 00:03:34  [ main:668 ] - [ DEBUG ]  Starting fillSimpleValue for email
2016-08-02 00:03:34  [ main:668 ] - [ DEBUG ]  Starting fillSimpleValue for logo
2016-08-02 00:03:34  [ main:668 ] - [ DEBUG ]  Starting fillSimpleValue for nick
2016-08-02 00:03:34  [ main:669 ] - [ DEBUG ]  Starting fillSimpleValue for password
2016-08-02 00:03:34  [ main:669 ] - [ DEBUG ]  Starting fillSimpleValue for phone
2016-08-02 00:03:34  [ main:670 ] - [ DEBUG ]  Forcing column [uid] to be non-null as it is part of the primary key for table [user]
2016-08-02 00:03:34  [ main:723 ] - [ DEBUG ]  Building session factory
2016-08-02 00:03:34  [ main:724 ] - [ DEBUG ]  SessionFactory name : null
2016-08-02 00:03:34  [ main:725 ] - [ DEBUG ]  Automatic flush during beforeCompletion(): disabled
2016-08-02 00:03:34  [ main:725 ] - [ DEBUG ]  Automatic session close at end of transaction: disabled
2016-08-02 00:03:34  [ main:725 ] - [ DEBUG ]  Statistics: disabled
2016-08-02 00:03:34  [ main:725 ] - [ DEBUG ]  Deleted entity synthetic identifier rollback: disabled
2016-08-02 00:03:34  [ main:725 ] - [ DEBUG ]  Default entity-mode: pojo
2016-08-02 00:03:34  [ main:725 ] - [ DEBUG ]  Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-08-02 00:03:34  [ main:725 ] - [ DEBUG ]  Allow initialization of lazy state outside session : disabled
2016-08-02 00:03:34  [ main:725 ] - [ DEBUG ]  Using BatchFetchStyle : LEGACY
2016-08-02 00:03:34  [ main:725 ] - [ DEBUG ]  Default batch fetch size: -1
2016-08-02 00:03:34  [ main:725 ] - [ DEBUG ]  Maximum outer join fetch depth: 2
2016-08-02 00:03:34  [ main:726 ] - [ DEBUG ]  Default null ordering: NONE
2016-08-02 00:03:34  [ main:726 ] - [ DEBUG ]  Order SQL updates by primary key: disabled
2016-08-02 00:03:34  [ main:726 ] - [ DEBUG ]  Order SQL inserts for batching: disabled
2016-08-02 00:03:34  [ main:726 ] - [ DEBUG ]  multi-tenancy strategy : NONE
2016-08-02 00:03:34  [ main:726 ] - [ DEBUG ]  JTA Track by Thread: enabled
2016-08-02 00:03:34  [ main:726 ] - [ DEBUG ]  Query language substitutions: {}
2016-08-02 00:03:34  [ main:726 ] - [ DEBUG ]  JPA query language strict compliance: disabled
2016-08-02 00:03:34  [ main:726 ] - [ DEBUG ]  Named query checking : enabled
2016-08-02 00:03:34  [ main:726 ] - [ DEBUG ]  Second-level cache: enabled
2016-08-02 00:03:34  [ main:726 ] - [ DEBUG ]  Second-level query cache: disabled
2016-08-02 00:03:34  [ main:726 ] - [ DEBUG ]  Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@46c40b19
2016-08-02 00:03:34  [ main:726 ] - [ DEBUG ]  Second-level cache region prefix: null
2016-08-02 00:03:34  [ main:727 ] - [ DEBUG ]  Optimize second-level cache for minimal puts: disabled
2016-08-02 00:03:34  [ main:727 ] - [ DEBUG ]  Structured second-level cache entries: disabled
2016-08-02 00:03:34  [ main:727 ] - [ DEBUG ]  Second-level cache direct-reference entries: disabled
2016-08-02 00:03:34  [ main:727 ] - [ DEBUG ]  Automatic eviction of collection cache: disabled
2016-08-02 00:03:34  [ main:727 ] - [ DEBUG ]  JDBC batch size: 0
2016-08-02 00:03:34  [ main:727 ] - [ DEBUG ]  JDBC batch updates for versioned data: enabled
2016-08-02 00:03:34  [ main:727 ] - [ DEBUG ]  Scrollable result sets: disabled
2016-08-02 00:03:34  [ main:727 ] - [ DEBUG ]  Wrap result sets: disabled
2016-08-02 00:03:34  [ main:727 ] - [ DEBUG ]  JDBC3 getGeneratedKeys(): disabled
2016-08-02 00:03:34  [ main:727 ] - [ DEBUG ]  JDBC result set fetch size: null
2016-08-02 00:03:34  [ main:727 ] - [ DEBUG ]  Connection release mode: ON_CLOSE
2016-08-02 00:03:34  [ main:728 ] - [ DEBUG ]  Generate SQL with comments: disabled
2016-08-02 00:03:34  [ main:783 ] - [ DEBUG ]  Session factory constructed with filter configurations : {}
2016-08-02 00:03:34  [ main:787 ] - [ DEBUG ]  Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib, java.vm.version=24.79-b02, gopherProxySet=false, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5791a58f, hibernate.temp.use_jdbc_metadata_defaults=false, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@36c51089], user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/Applications/ide/workspace/product, java.runtime.version=1.7.0_79-b15, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/endorsed, os.arch=x86_64, java.io.tmpdir=/var/folders/hm/gtyh2n810gb6wd9xk127pzt00000gn/T/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Mac OS X, sun.jnu.encoding=UTF-8, java.library.path=/Users/qiejinkai/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., hibernate.connection.datasource={
	CreateTime:"2016-08-02 00:03:33",
	ActiveCount:0,
	PoolingCount:10,
	CreateCount:10,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
		{ID:453803059, ConnectTime:"2016-08-02 00:03:33", UseCount:0, LastActiveTime:"2016-08-02 00:03:33"},
		{ID:1353582116, ConnectTime:"2016-08-02 00:03:33", UseCount:0, LastActiveTime:"2016-08-02 00:03:33"},
		{ID:1360350941, ConnectTime:"2016-08-02 00:03:33", UseCount:0, LastActiveTime:"2016-08-02 00:03:33"},
		{ID:1307359425, ConnectTime:"2016-08-02 00:03:33", UseCount:0, LastActiveTime:"2016-08-02 00:03:33"},
		{ID:1884663518, ConnectTime:"2016-08-02 00:03:33", UseCount:0, LastActiveTime:"2016-08-02 00:03:33"},
		{ID:155953776, ConnectTime:"2016-08-02 00:03:33", UseCount:0, LastActiveTime:"2016-08-02 00:03:33"},
		{ID:1185063892, ConnectTime:"2016-08-02 00:03:33", UseCount:0, LastActiveTime:"2016-08-02 00:03:33"},
		{ID:1605490566, ConnectTime:"2016-08-02 00:03:33", UseCount:0, LastActiveTime:"2016-08-02 00:03:33"},
		{ID:347918207, ConnectTime:"2016-08-02 00:03:33", UseCount:0, LastActiveTime:"2016-08-02 00:03:33"},
		{ID:2010817915, ConnectTime:"2016-08-02 00:03:33", UseCount:0, LastActiveTime:"2016-08-02 00:03:33"}
	]
}

[
	{
	ID:453803059, 
	poolStatements:[
		]
	},
	{
	ID:1353582116, 
	poolStatements:[
		]
	},
	{
	ID:1360350941, 
	poolStatements:[
		]
	},
	{
	ID:1307359425, 
	poolStatements:[
		]
	},
	{
	ID:1884663518, 
	poolStatements:[
		]
	},
	{
	ID:155953776, 
	poolStatements:[
		]
	},
	{
	ID:1185063892, 
	poolStatements:[
		]
	},
	{
	ID:1605490566, 
	poolStatements:[
		]
	},
	{
	ID:347918207, 
	poolStatements:[
		]
	},
	{
	ID:2010817915, 
	poolStatements:[
		]
	}
], java.class.version=51.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.10.5, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, user.home=/Users/qiejinkai, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=false, user.name=qiejinkai, java.class.path=/Applications/ide/workspace/product/target/test-classes:/Applications/ide/workspace/product/target/classes:/Applications/ide/apache-tomcat-7.0.61/lib/annotations-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina-ant.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina-ha.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina-tribes.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina.jar:/Applications/ide/apache-tomcat-7.0.61/lib/ecj-4.4.2.jar:/Applications/ide/apache-tomcat-7.0.61/lib/el-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/jasper-el.jar:/Applications/ide/apache-tomcat-7.0.61/lib/jasper.jar:/Applications/ide/apache-tomcat-7.0.61/lib/jsp-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/servlet-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-coyote.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-dbcp.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-i18n-es.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-i18n-fr.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-i18n-ja.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-jdbc.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-util.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat7-websocket.jar:/Applications/ide/apache-tomcat-7.0.61/lib/websocket-api.jar:/Applications/ide/eclipse/plugins/org.junit_4.11.0.v201303080030/junit.jar:/Applications/ide/eclipse/plugins/org.hamcrest.core_1.3.0.v201303031735.jar:/Users/qiejinkai/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-context/4.2.3.RELEASE/spring-context-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-aop/4.2.3.RELEASE/spring-aop-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-beans/4.2.3.RELEASE/spring-beans-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-core/4.2.3.RELEASE/spring-core-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-expression/4.2.3.RELEASE/spring-expression-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-web/4.2.3.RELEASE/spring-web-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-webmvc/4.2.3.RELEASE/spring-webmvc-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-jdbc/4.2.3.RELEASE/spring-jdbc-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-test/4.2.3.RELEASE/spring-test-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-tx/4.2.3.RELEASE/spring-tx-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-orm/4.2.3.RELEASE/spring-orm-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/aspectj/aspectjweaver/1.8.4/aspectjweaver-1.8.4.jar:/Users/qiejinkai/.m2/repository/org/springframework/data/spring-data-redis/1.4.1.RELEASE/spring-data-redis-1.4.1.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-context-support/4.0.7.RELEASE/spring-context-support-4.0.7.RELEASE.jar:/Users/qiejinkai/.m2/repository/redis/clients/jedis/2.6.1/jedis-2.6.1.jar:/Users/qiejinkai/.m2/repository/org/springframework/session/spring-session/1.2.1.RELEASE/spring-session-1.2.1.RELEASE.jar:/Users/qiejinkai/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/qiejinkai/.m2/repository/org/apache/commons/commons-pool2/2.4.2/commons-pool2-2.4.2.jar:/Users/qiejinkai/.m2/repository/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/Users/qiejinkai/.m2/repository/org/mybatis/mybatis/3.2.8/mybatis-3.2.8.jar:/Users/qiejinkai/.m2/repository/com/google/code/gson/gson/2.3.1/gson-2.3.1.jar:/Users/qiejinkai/.m2/repository/mysql/mysql-connector-java/5.1.34/mysql-connector-java-5.1.34.jar:/Users/qiejinkai/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/Users/qiejinkai/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/Users/qiejinkai/.m2/repository/com/alibaba/druid/1.0.11/druid-1.0.11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/lib/tools.jar:/Users/qiejinkai/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/qiejinkai/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/qiejinkai/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-validator/5.2.0.Alpha1/hibernate-validator-5.2.0.Alpha1.jar:/Users/qiejinkai/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar:/Users/qiejinkai/.m2/repository/com/sun/mail/mailapi/1.5.2/mailapi-1.5.2.jar:/Users/qiejinkai/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/qiejinkai/.m2/repository/com/sun/mail/smtp/1.5.2/smtp-1.5.2.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-core/5.1.0.Final/hibernate-core-5.1.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/qiejinkai/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/qiejinkai/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-entitymanager/5.1.0.Final/hibernate-entitymanager-5.1.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-annotations/3.5.6-Final/hibernate-annotations-3.5.6-Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-ehcache/5.1.0.Final/hibernate-ehcache-5.1.0.Final.jar:/Users/qiejinkai/.m2/repository/net/sf/ehcache/ehcache/2.10.1/ehcache-2.10.1.jar:/Users/qiejinkai/.m2/repository/org/slf4j/slf4j-api/1.7.21/slf4j-api-1.7.21.jar:/Users/qiejinkai/.m2/repository/org/slf4j/slf4j-log4j12/1.7.21/slf4j-log4j12-1.7.21.jar:/Users/qiejinkai/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/qiejinkai/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/qiejinkai/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/qiejinkai/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/Users/qiejinkai/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Applications/ide/eclipse/configuration/org.eclipse.osgi/360/0/.cp/:/Applications/ide/eclipse/configuration/org.eclipse.osgi/359/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 57839 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test dao.hibernate.TestHibernateDao:testAdd, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.vm.info=mixed mode, java.version=1.7.0_79, java.ext.dirs=/Users/qiejinkai/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/classes, java.vendor=Oracle Corporation, file.separator=/, hibernate.hbm2ddl.auto=update, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeBig, sun.cpu.endian=little, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, sun.cpu.isalist=}
2016-08-02 00:03:34  [ main:819 ] - [ INFO ]  HV000001: Hibernate Validator 5.2.0.Alpha1
2016-08-02 00:03:34  [ main:830 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2016-08-02 00:03:34  [ main:832 ] - [ DEBUG ]  Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2016-08-02 00:03:34  [ main:848 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2016-08-02 00:03:34  [ main:850 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2016-08-02 00:03:34  [ main:896 ] - [ DEBUG ]  Not known whether passed class name [com.qjk.data.User] is safe
2016-08-02 00:03:34  [ main:896 ] - [ DEBUG ]  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.qjk.data.User
2016-08-02 00:03:34  [ main:958 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@2fb0dc0d, groups=[Ljava.lang.Class;@43ef1f1}, constraintType=GENERIC}.
2016-08-02 00:03:34  [ main:959 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@407e0764, max=2147483647, groups=[Ljava.lang.Class;@12175750}, constraintType=GENERIC}.
2016-08-02 00:03:34  [ main:962 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@1ff87f5d, groups=[Ljava.lang.Class;@7371c310}, constraintType=GENERIC}.
2016-08-02 00:03:34  [ main:963 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@31bd8aa6, max=2147483647, groups=[Ljava.lang.Class;@12d9b1cd}, constraintType=GENERIC}.
2016-08-02 00:03:34  [ main:965 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Pattern, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Pattern.message}, payload=[Ljava.lang.Class;@36edcdeb, flags=[Ljavax.validation.constraints.Pattern$Flag;@366a1b79, regexp=.*, groups=[Ljava.lang.Class;@7031c0d7}, constraintType=GENERIC}.
2016-08-02 00:03:34  [ main:966 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@526b9ccc, groups=[Ljava.lang.Class;@17033f5a}, constraintType=GENERIC}.
2016-08-02 00:03:34  [ main:966 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@56343983, max=2147483647, groups=[Ljava.lang.Class;@7eabf3ab}, constraintType=GENERIC}.
2016-08-02 00:03:34  [ main:1001 ] - [ DEBUG ]  Skipping JACC integration as it was not enabled
2016-08-02 00:03:34  [ main:1034 ] - [ DEBUG ]  Not known whether passed class name [com.qjk.data.User] is safe
2016-08-02 00:03:34  [ main:1034 ] - [ DEBUG ]  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.qjk.data.User
2016-08-02 00:03:34  [ main:1063 ] - [ DEBUG ]  Not known whether passed class name [com.qjk.data.User] is safe
2016-08-02 00:03:34  [ main:1064 ] - [ DEBUG ]  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.qjk.data.User
2016-08-02 00:03:34  [ main:1139 ] - [ DEBUG ]  Static SQL for entity: com.qjk.data.User
2016-08-02 00:03:34  [ main:1139 ] - [ DEBUG ]   Version select: select uid from User where uid =?
2016-08-02 00:03:34  [ main:1139 ] - [ DEBUG ]   Snapshot select: select user_.uid, user_.email as email2_0_, user_.logo as logo3_0_, user_.nick as nick4_0_, user_.password as password5_0_, user_.phone as phone6_0_ from User user_ where user_.uid=?
2016-08-02 00:03:34  [ main:1139 ] - [ DEBUG ]   Insert 0: insert into User (email, logo, nick, password, phone, uid) values (?, ?, ?, ?, ?, ?)
2016-08-02 00:03:34  [ main:1140 ] - [ DEBUG ]   Update 0: update User set email=?, logo=?, nick=?, password=?, phone=? where uid=?
2016-08-02 00:03:34  [ main:1140 ] - [ DEBUG ]   Delete 0: delete from User where uid=?
2016-08-02 00:03:34  [ main:1169 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5794137f]
2016-08-02 00:03:34  [ main:1170 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:03:34  [ main:1170 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:03:34  [ main:1170 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:03:34  [ main:1170 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:03:34  [ main:1170 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:03:34  [ main:1170 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:03:34  [ main:1185 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:03:34  [ main:1189 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:03:34  [ main:1191 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [NONE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:03:34  [ main:1192 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@226e8d7e]
2016-08-02 00:03:34  [ main:1192 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:03:34  [ main:1192 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:03:34  [ main:1192 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:03:34  [ main:1192 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:03:34  [ main:1192 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:03:34  [ main:1192 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:03:34  [ main:1192 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:03:34  [ main:1193 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:03:34  [ main:1193 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [READ]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:03:34  [ main:1193 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21fd31fd]
2016-08-02 00:03:34  [ main:1193 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:03:34  [ main:1193 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:03:34  [ main:1193 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:03:34  [ main:1193 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:03:34  [ main:1193 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:03:34  [ main:1193 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:03:34  [ main:1194 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:03:34  [ main:1194 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:03:34  [ main:1194 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [UPGRADE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:03:34  [ main:1194 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aa5ea62]
2016-08-02 00:03:34  [ main:1194 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:03:34  [ main:1194 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:03:34  [ main:1194 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:03:34  [ main:1195 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:03:34  [ main:1195 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:03:34  [ main:1195 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:03:34  [ main:1195 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:03:34  [ main:1195 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:03:34  [ main:1195 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [UPGRADE_NOWAIT]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:03:34  [ main:1195 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b59dd6c]
2016-08-02 00:03:34  [ main:1196 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:03:34  [ main:1196 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:03:34  [ main:1196 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:03:34  [ main:1196 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:03:34  [ main:1196 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:03:34  [ main:1196 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:03:34  [ main:1196 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:03:34  [ main:1196 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:03:34  [ main:1196 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [UPGRADE_SKIPLOCKED]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:03:34  [ main:1197 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9bfb48e]
2016-08-02 00:03:34  [ main:1197 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:03:34  [ main:1197 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:03:34  [ main:1197 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:03:34  [ main:1197 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:03:34  [ main:1197 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:03:34  [ main:1197 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:03:34  [ main:1197 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:03:34  [ main:1197 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:03:34  [ main:1198 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [FORCE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:03:34  [ main:1198 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c5d6d3e]
2016-08-02 00:03:34  [ main:1198 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:03:34  [ main:1198 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:03:34  [ main:1198 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:03:34  [ main:1198 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:03:34  [ main:1198 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:03:34  [ main:1198 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:03:34  [ main:1198 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:03:34  [ main:1199 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:03:34  [ main:1199 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [PESSIMISTIC_READ]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? lock in share mode
2016-08-02 00:03:34  [ main:1199 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ec8ef1e]
2016-08-02 00:03:34  [ main:1199 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:03:34  [ main:1199 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:03:34  [ main:1199 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:03:34  [ main:1199 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:03:34  [ main:1199 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:03:34  [ main:1199 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:03:34  [ main:1199 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:03:34  [ main:1200 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:03:34  [ main:1200 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [PESSIMISTIC_WRITE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:03:34  [ main:1200 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22fc7015]
2016-08-02 00:03:34  [ main:1200 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:03:34  [ main:1200 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:03:34  [ main:1200 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:03:34  [ main:1200 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:03:34  [ main:1200 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:03:34  [ main:1200 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:03:34  [ main:1200 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:03:34  [ main:1201 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:03:34  [ main:1201 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:03:34  [ main:1201 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@273261ef]
2016-08-02 00:03:34  [ main:1201 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:03:34  [ main:1201 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:03:34  [ main:1201 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:03:34  [ main:1201 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:03:34  [ main:1201 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:03:34  [ main:1201 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:03:34  [ main:1202 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:03:34  [ main:1202 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:03:34  [ main:1202 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [OPTIMISTIC]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:03:34  [ main:1202 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23903e85]
2016-08-02 00:03:34  [ main:1202 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:03:34  [ main:1203 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:03:34  [ main:1203 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:03:34  [ main:1203 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:03:34  [ main:1203 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:03:34  [ main:1203 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:03:34  [ main:1203 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:03:34  [ main:1204 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:03:34  [ main:1204 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:03:34  [ main:1220 ] - [ DEBUG ]  Static select for action ACTION_MERGE on entity com.qjk.data.User: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:03:34  [ main:1220 ] - [ DEBUG ]  Static select for action ACTION_REFRESH on entity com.qjk.data.User: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:03:34  [ main:1221 ] - [ DEBUG ]  Instantiated session factory
2016-08-02 00:03:34  [ main:1268 ] - [ DEBUG ]  No alter strings for table : hibernate_sequence
2016-08-02 00:03:34  [ main:1291 ] - [ DEBUG ]  No alter strings for table : User
2016-08-02 00:03:34  [ main:1298 ] - [ DEBUG ]  No JtaPlatform was specified, checking resolver
2016-08-02 00:03:34  [ main:1298 ] - [ DEBUG ]  No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-08-02 00:03:34  [ main:1302 ] - [ DEBUG ]  Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-08-02 00:03:34  [ main:1303 ] - [ DEBUG ]  Checking 0 named HQL queries
2016-08-02 00:03:34  [ main:1304 ] - [ DEBUG ]  Checking 0 named SQL queries
2016-08-02 00:03:34  [ main:1306 ] - [ DEBUG ]  Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@586cc05e
2016-08-02 00:03:34  [ main:1306 ] - [ DEBUG ]  Registering SessionFactory: a9320018-f010-4b86-89a5-506caa69caae (<unnamed>)
2016-08-02 00:03:34  [ main:1306 ] - [ DEBUG ]  Not binding SessionFactory to JNDI, no JNDI name configured
2016-08-02 00:03:35  [ main:1751 ] - [ DEBUG ]  Statistics initialized [enabled=false]
2016-08-02 00:03:35  [ main:1755 ] - [ DEBUG ]  begin
2016-08-02 00:03:35  [ main:1765 ] - [ DEBUG ]  select next_val as id_val from hibernate_sequence for update
2016-08-02 00:03:35  [ main:1800 ] - [ DEBUG ]  {conn-10009, pstmt-20000} enter cache
2016-08-02 00:03:35  [ main:1800 ] - [ DEBUG ]  update hibernate_sequence set next_val= ? where next_val=?
2016-08-02 00:03:35  [ main:1803 ] - [ DEBUG ]  {conn-10009, pstmt-20001} enter cache
2016-08-02 00:03:35  [ main:1806 ] - [ DEBUG ]  Generated identifier: 24, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2016-08-02 00:03:35  [ main:1842 ] - [ DEBUG ]  select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:03:35  [ main:1849 ] - [ DEBUG ]  HHH000387: ResultSet's statement was not registered
2016-08-02 00:03:35  [ main:1849 ] - [ DEBUG ]  {conn-10010, pstmt-20002} enter cache
2016-08-02 00:03:35  [ main:1850 ] - [ DEBUG ]  Done entity load : com.qjk.data.User#16
2016-08-02 00:03:35  [ main:1850 ] - [ DEBUG ]  rolling back
2016-08-02 00:03:35  [ Thread-3:1877 ] - [ DEBUG ]  HHH000031: Closing
2016-08-02 00:03:35  [ Thread-3:1877 ] - [ DEBUG ]  Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2016-08-02 00:03:35  [ Thread-3:1877 ] - [ DEBUG ]  Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2016-08-02 00:03:35  [ Thread-3:1880 ] - [ DEBUG ]  {conn-10009, pstmt-20000} exit cache
2016-08-02 00:03:35  [ Thread-3:1880 ] - [ DEBUG ]  {conn-10009, pstmt-20001} exit cache
2016-08-02 00:03:35  [ Thread-3:1880 ] - [ DEBUG ]  {conn-10010, pstmt-20002} exit cache
2016-08-02 00:03:35  [ Thread-3:1881 ] - [ INFO ]  {dataSource-1} closed
2016-08-02 00:04:07  [ main:0 ] - [ INFO ]  {dataSource-1} inited
2016-08-02 00:04:07  [ main:52 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-08-02 00:04:07  [ main:63 ] - [ DEBUG ]  Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-08-02 00:04:07  [ main:65 ] - [ DEBUG ]  Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-08-02 00:04:07  [ main:69 ] - [ DEBUG ]  Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-08-02 00:04:07  [ main:166 ] - [ INFO ]  HHH000412: Hibernate Core {5.1.0.Final}
2016-08-02 00:04:07  [ main:168 ] - [ INFO ]  HHH000206: hibernate.properties not found
2016-08-02 00:04:07  [ main:170 ] - [ INFO ]  HHH000021: Bytecode provider name : javassist
2016-08-02 00:04:07  [ main:189 ] - [ DEBUG ]  Building session factory using internal StandardServiceRegistryBuilder
2016-08-02 00:04:07  [ main:214 ] - [ DEBUG ]  Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-08-02 00:04:07  [ main:214 ] - [ DEBUG ]  Building session factory using provided StandardServiceRegistry
2016-08-02 00:04:07  [ main:243 ] - [ DEBUG ]  Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-08-02 00:04:07  [ main:255 ] - [ INFO ]  HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-08-02 00:04:07  [ main:279 ] - [ DEBUG ]  Adding type registration boolean -> org.hibernate.type.BooleanType@4c9c3a9d
2016-08-02 00:04:07  [ main:279 ] - [ DEBUG ]  Adding type registration boolean -> org.hibernate.type.BooleanType@4c9c3a9d
2016-08-02 00:04:07  [ main:279 ] - [ DEBUG ]  Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4c9c3a9d
2016-08-02 00:04:07  [ main:281 ] - [ DEBUG ]  Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6e412d02
2016-08-02 00:04:07  [ main:284 ] - [ DEBUG ]  Adding type registration true_false -> org.hibernate.type.TrueFalseType@2d92c77e
2016-08-02 00:04:07  [ main:286 ] - [ DEBUG ]  Adding type registration yes_no -> org.hibernate.type.YesNoType@177bb2da
2016-08-02 00:04:07  [ main:289 ] - [ DEBUG ]  Adding type registration byte -> org.hibernate.type.ByteType@27be789c
2016-08-02 00:04:07  [ main:289 ] - [ DEBUG ]  Adding type registration byte -> org.hibernate.type.ByteType@27be789c
2016-08-02 00:04:07  [ main:289 ] - [ DEBUG ]  Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@27be789c
2016-08-02 00:04:07  [ main:291 ] - [ DEBUG ]  Adding type registration character -> org.hibernate.type.CharacterType@241424cc
2016-08-02 00:04:07  [ main:291 ] - [ DEBUG ]  Adding type registration char -> org.hibernate.type.CharacterType@241424cc
2016-08-02 00:04:07  [ main:291 ] - [ DEBUG ]  Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@241424cc
2016-08-02 00:04:07  [ main:293 ] - [ DEBUG ]  Adding type registration short -> org.hibernate.type.ShortType@534393e8
2016-08-02 00:04:07  [ main:294 ] - [ DEBUG ]  Adding type registration short -> org.hibernate.type.ShortType@534393e8
2016-08-02 00:04:07  [ main:294 ] - [ DEBUG ]  Adding type registration java.lang.Short -> org.hibernate.type.ShortType@534393e8
2016-08-02 00:04:07  [ main:296 ] - [ DEBUG ]  Adding type registration integer -> org.hibernate.type.IntegerType@490ed1c6
2016-08-02 00:04:07  [ main:296 ] - [ DEBUG ]  Adding type registration int -> org.hibernate.type.IntegerType@490ed1c6
2016-08-02 00:04:07  [ main:297 ] - [ DEBUG ]  Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@490ed1c6
2016-08-02 00:04:07  [ main:299 ] - [ DEBUG ]  Adding type registration long -> org.hibernate.type.LongType@3841ea5a
2016-08-02 00:04:07  [ main:299 ] - [ DEBUG ]  Adding type registration long -> org.hibernate.type.LongType@3841ea5a
2016-08-02 00:04:07  [ main:299 ] - [ DEBUG ]  Adding type registration java.lang.Long -> org.hibernate.type.LongType@3841ea5a
2016-08-02 00:04:07  [ main:301 ] - [ DEBUG ]  Adding type registration float -> org.hibernate.type.FloatType@2b79174c
2016-08-02 00:04:07  [ main:301 ] - [ DEBUG ]  Adding type registration float -> org.hibernate.type.FloatType@2b79174c
2016-08-02 00:04:07  [ main:301 ] - [ DEBUG ]  Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2b79174c
2016-08-02 00:04:07  [ main:304 ] - [ DEBUG ]  Adding type registration double -> org.hibernate.type.DoubleType@4496a210
2016-08-02 00:04:07  [ main:304 ] - [ DEBUG ]  Adding type registration double -> org.hibernate.type.DoubleType@4496a210
2016-08-02 00:04:07  [ main:304 ] - [ DEBUG ]  Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4496a210
2016-08-02 00:04:07  [ main:305 ] - [ DEBUG ]  Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d9a3137
2016-08-02 00:04:07  [ main:305 ] - [ DEBUG ]  Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d9a3137
2016-08-02 00:04:07  [ main:306 ] - [ DEBUG ]  Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7ffb0a21
2016-08-02 00:04:07  [ main:307 ] - [ DEBUG ]  Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7ffb0a21
2016-08-02 00:04:07  [ main:307 ] - [ DEBUG ]  Adding type registration string -> org.hibernate.type.StringType@7833c80d
2016-08-02 00:04:07  [ main:308 ] - [ DEBUG ]  Adding type registration java.lang.String -> org.hibernate.type.StringType@7833c80d
2016-08-02 00:04:07  [ main:308 ] - [ DEBUG ]  Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52fd99d1
2016-08-02 00:04:07  [ main:309 ] - [ DEBUG ]  Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6b24a494
2016-08-02 00:04:07  [ main:310 ] - [ DEBUG ]  Adding type registration url -> org.hibernate.type.UrlType@6dbba86e
2016-08-02 00:04:07  [ main:310 ] - [ DEBUG ]  Adding type registration java.net.URL -> org.hibernate.type.UrlType@6dbba86e
2016-08-02 00:04:07  [ main:311 ] - [ DEBUG ]  Adding type registration date -> org.hibernate.type.DateType@5cd480cc
2016-08-02 00:04:07  [ main:312 ] - [ DEBUG ]  Adding type registration java.sql.Date -> org.hibernate.type.DateType@5cd480cc
2016-08-02 00:04:07  [ main:314 ] - [ DEBUG ]  Adding type registration time -> org.hibernate.type.TimeType@68574b19
2016-08-02 00:04:07  [ main:315 ] - [ DEBUG ]  Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68574b19
2016-08-02 00:04:07  [ main:317 ] - [ DEBUG ]  Adding type registration timestamp -> org.hibernate.type.TimestampType@b04deb7
2016-08-02 00:04:07  [ main:317 ] - [ DEBUG ]  Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@b04deb7
2016-08-02 00:04:07  [ main:317 ] - [ DEBUG ]  Adding type registration java.util.Date -> org.hibernate.type.TimestampType@b04deb7
2016-08-02 00:04:07  [ main:319 ] - [ DEBUG ]  Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@305b17d8
2016-08-02 00:04:07  [ main:321 ] - [ DEBUG ]  Adding type registration calendar -> org.hibernate.type.CalendarType@7cfec020
2016-08-02 00:04:07  [ main:321 ] - [ DEBUG ]  Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7cfec020
2016-08-02 00:04:07  [ main:321 ] - [ DEBUG ]  Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7cfec020
2016-08-02 00:04:07  [ main:322 ] - [ DEBUG ]  Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@42c1406b
2016-08-02 00:04:07  [ main:324 ] - [ DEBUG ]  Adding type registration locale -> org.hibernate.type.LocaleType@6cbc937f
2016-08-02 00:04:07  [ main:324 ] - [ DEBUG ]  Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6cbc937f
2016-08-02 00:04:07  [ main:326 ] - [ DEBUG ]  Adding type registration currency -> org.hibernate.type.CurrencyType@60db07a6
2016-08-02 00:04:07  [ main:326 ] - [ DEBUG ]  Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@60db07a6
2016-08-02 00:04:07  [ main:327 ] - [ DEBUG ]  Adding type registration timezone -> org.hibernate.type.TimeZoneType@2a5cf3e
2016-08-02 00:04:07  [ main:327 ] - [ DEBUG ]  Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2a5cf3e
2016-08-02 00:04:07  [ main:328 ] - [ DEBUG ]  Adding type registration class -> org.hibernate.type.ClassType@b8fd55f
2016-08-02 00:04:07  [ main:328 ] - [ DEBUG ]  Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b8fd55f
2016-08-02 00:04:07  [ main:329 ] - [ DEBUG ]  Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3d3cdc3b
2016-08-02 00:04:07  [ main:330 ] - [ DEBUG ]  Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3d3cdc3b
2016-08-02 00:04:07  [ main:330 ] - [ DEBUG ]  Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f8b0ed2
2016-08-02 00:04:07  [ main:332 ] - [ DEBUG ]  Adding type registration binary -> org.hibernate.type.BinaryType@4630f4ec
2016-08-02 00:04:07  [ main:332 ] - [ DEBUG ]  Adding type registration byte[] -> org.hibernate.type.BinaryType@4630f4ec
2016-08-02 00:04:07  [ main:333 ] - [ DEBUG ]  Adding type registration [B -> org.hibernate.type.BinaryType@4630f4ec
2016-08-02 00:04:07  [ main:334 ] - [ DEBUG ]  Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10e3059a
2016-08-02 00:04:07  [ main:335 ] - [ DEBUG ]  Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10e3059a
2016-08-02 00:04:07  [ main:335 ] - [ DEBUG ]  Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10e3059a
2016-08-02 00:04:07  [ main:336 ] - [ DEBUG ]  Adding type registration image -> org.hibernate.type.ImageType@5ccfc9f7
2016-08-02 00:04:07  [ main:338 ] - [ DEBUG ]  Adding type registration characters -> org.hibernate.type.CharArrayType@63c58252
2016-08-02 00:04:07  [ main:339 ] - [ DEBUG ]  Adding type registration char[] -> org.hibernate.type.CharArrayType@63c58252
2016-08-02 00:04:07  [ main:339 ] - [ DEBUG ]  Adding type registration [C -> org.hibernate.type.CharArrayType@63c58252
2016-08-02 00:04:07  [ main:341 ] - [ DEBUG ]  Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@313314a
2016-08-02 00:04:07  [ main:341 ] - [ DEBUG ]  Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@313314a
2016-08-02 00:04:07  [ main:341 ] - [ DEBUG ]  Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@313314a
2016-08-02 00:04:07  [ main:342 ] - [ DEBUG ]  Adding type registration text -> org.hibernate.type.TextType@35d2c3c6
2016-08-02 00:04:07  [ main:345 ] - [ DEBUG ]  Adding type registration ntext -> org.hibernate.type.NTextType@229ae46a
2016-08-02 00:04:07  [ main:357 ] - [ DEBUG ]  Adding type registration blob -> org.hibernate.type.BlobType@2eebabb6
2016-08-02 00:04:07  [ main:358 ] - [ DEBUG ]  Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2eebabb6
2016-08-02 00:04:07  [ main:359 ] - [ DEBUG ]  Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1a41b921
2016-08-02 00:04:07  [ main:365 ] - [ DEBUG ]  Adding type registration clob -> org.hibernate.type.ClobType@4e69c7b0
2016-08-02 00:04:07  [ main:365 ] - [ DEBUG ]  Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4e69c7b0
2016-08-02 00:04:07  [ main:368 ] - [ DEBUG ]  Adding type registration nclob -> org.hibernate.type.NClobType@77250da6
2016-08-02 00:04:07  [ main:369 ] - [ DEBUG ]  Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77250da6
2016-08-02 00:04:07  [ main:369 ] - [ DEBUG ]  Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71d28e8b
2016-08-02 00:04:07  [ main:371 ] - [ DEBUG ]  Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4210d119
2016-08-02 00:04:07  [ main:373 ] - [ DEBUG ]  Adding type registration serializable -> org.hibernate.type.SerializableType@27c46cd5
2016-08-02 00:04:07  [ main:376 ] - [ DEBUG ]  Adding type registration object -> org.hibernate.type.ObjectType@4dca593e
2016-08-02 00:04:07  [ main:377 ] - [ DEBUG ]  Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4dca593e
2016-08-02 00:04:07  [ main:377 ] - [ DEBUG ]  Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@55af9c7d
2016-08-02 00:04:07  [ main:377 ] - [ DEBUG ]  Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7c4afe7d
2016-08-02 00:04:07  [ main:377 ] - [ DEBUG ]  Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1f8a004b
2016-08-02 00:04:07  [ main:377 ] - [ DEBUG ]  Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d194c1a
2016-08-02 00:04:07  [ main:378 ] - [ DEBUG ]  Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@67d34de2
2016-08-02 00:04:07  [ main:378 ] - [ DEBUG ]  Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@619e65ae
2016-08-02 00:04:07  [ main:378 ] - [ DEBUG ]  Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6625b493
2016-08-02 00:04:07  [ main:378 ] - [ DEBUG ]  Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@35725349
2016-08-02 00:04:07  [ main:413 ] - [ INFO ]  HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-08-02 00:04:07  [ main:440 ] - [ DEBUG ]  IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-08-02 00:04:07  [ main:451 ] - [ INFO ]  HHH000422: Disabling contextual LOB creation as connection was null
2016-08-02 00:04:07  [ main:490 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-08-02 00:04:07  [ main:490 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-08-02 00:04:07  [ main:491 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-08-02 00:04:07  [ main:491 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-08-02 00:04:07  [ main:491 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-08-02 00:04:07  [ main:492 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-08-02 00:04:07  [ main:493 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-08-02 00:04:07  [ main:494 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-08-02 00:04:07  [ main:494 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-08-02 00:04:07  [ main:495 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-08-02 00:04:07  [ main:495 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-08-02 00:04:07  [ main:496 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-08-02 00:04:07  [ main:496 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-08-02 00:04:07  [ main:497 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-08-02 00:04:07  [ main:529 ] - [ DEBUG ]  Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-08-02 00:04:07  [ main:552 ] - [ DEBUG ]  Binding entity from annotated class: com.qjk.data.User
2016-08-02 00:04:07  [ main:573 ] - [ DEBUG ]  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-08-02 00:04:07  [ main:579 ] - [ DEBUG ]  Import with entity name User
2016-08-02 00:04:07  [ main:589 ] - [ DEBUG ]  Bind entity com.qjk.data.User on table User
2016-08-02 00:04:07  [ main:624 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=uid, insertable=true, updatable=true, unique=false}
2016-08-02 00:04:07  [ main:626 ] - [ DEBUG ]  MetadataSourceProcessor property uid with lazy=false
2016-08-02 00:04:07  [ main:628 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:uid]
2016-08-02 00:04:07  [ main:630 ] - [ DEBUG ]  building SimpleValue for uid
2016-08-02 00:04:07  [ main:634 ] - [ DEBUG ]  Building property uid
2016-08-02 00:04:07  [ main:637 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=email, insertable=true, updatable=true, unique=false}
2016-08-02 00:04:07  [ main:638 ] - [ DEBUG ]  MetadataSourceProcessor property email with lazy=false
2016-08-02 00:04:07  [ main:638 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:email]
2016-08-02 00:04:07  [ main:638 ] - [ DEBUG ]  building SimpleValue for email
2016-08-02 00:04:07  [ main:638 ] - [ DEBUG ]  Building property email
2016-08-02 00:04:07  [ main:638 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=logo, insertable=true, updatable=true, unique=false}
2016-08-02 00:04:07  [ main:638 ] - [ DEBUG ]  MetadataSourceProcessor property logo with lazy=false
2016-08-02 00:04:07  [ main:639 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:logo]
2016-08-02 00:04:07  [ main:639 ] - [ DEBUG ]  building SimpleValue for logo
2016-08-02 00:04:07  [ main:639 ] - [ DEBUG ]  Building property logo
2016-08-02 00:04:07  [ main:639 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=nick, insertable=true, updatable=true, unique=false}
2016-08-02 00:04:07  [ main:639 ] - [ DEBUG ]  MetadataSourceProcessor property nick with lazy=false
2016-08-02 00:04:07  [ main:639 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:nick]
2016-08-02 00:04:07  [ main:639 ] - [ DEBUG ]  building SimpleValue for nick
2016-08-02 00:04:07  [ main:640 ] - [ DEBUG ]  Building property nick
2016-08-02 00:04:07  [ main:640 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=password, insertable=true, updatable=true, unique=false}
2016-08-02 00:04:07  [ main:640 ] - [ DEBUG ]  MetadataSourceProcessor property password with lazy=false
2016-08-02 00:04:07  [ main:640 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:password]
2016-08-02 00:04:07  [ main:640 ] - [ DEBUG ]  building SimpleValue for password
2016-08-02 00:04:07  [ main:640 ] - [ DEBUG ]  Building property password
2016-08-02 00:04:07  [ main:640 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2016-08-02 00:04:07  [ main:641 ] - [ DEBUG ]  MetadataSourceProcessor property phone with lazy=false
2016-08-02 00:04:07  [ main:641 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:phone]
2016-08-02 00:04:07  [ main:641 ] - [ DEBUG ]  building SimpleValue for phone
2016-08-02 00:04:07  [ main:641 ] - [ DEBUG ]  Building property phone
2016-08-02 00:04:07  [ main:642 ] - [ DEBUG ]  Starting fillSimpleValue for uid
2016-08-02 00:04:07  [ main:642 ] - [ DEBUG ]  Starting fillSimpleValue for email
2016-08-02 00:04:07  [ main:642 ] - [ DEBUG ]  Starting fillSimpleValue for logo
2016-08-02 00:04:07  [ main:642 ] - [ DEBUG ]  Starting fillSimpleValue for nick
2016-08-02 00:04:07  [ main:643 ] - [ DEBUG ]  Starting fillSimpleValue for password
2016-08-02 00:04:07  [ main:643 ] - [ DEBUG ]  Starting fillSimpleValue for phone
2016-08-02 00:04:07  [ main:644 ] - [ DEBUG ]  Forcing column [uid] to be non-null as it is part of the primary key for table [user]
2016-08-02 00:04:07  [ main:679 ] - [ DEBUG ]  Building session factory
2016-08-02 00:04:07  [ main:680 ] - [ DEBUG ]  SessionFactory name : null
2016-08-02 00:04:07  [ main:680 ] - [ DEBUG ]  Automatic flush during beforeCompletion(): disabled
2016-08-02 00:04:07  [ main:680 ] - [ DEBUG ]  Automatic session close at end of transaction: disabled
2016-08-02 00:04:07  [ main:680 ] - [ DEBUG ]  Statistics: disabled
2016-08-02 00:04:07  [ main:680 ] - [ DEBUG ]  Deleted entity synthetic identifier rollback: disabled
2016-08-02 00:04:07  [ main:680 ] - [ DEBUG ]  Default entity-mode: pojo
2016-08-02 00:04:07  [ main:680 ] - [ DEBUG ]  Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-08-02 00:04:07  [ main:680 ] - [ DEBUG ]  Allow initialization of lazy state outside session : disabled
2016-08-02 00:04:07  [ main:680 ] - [ DEBUG ]  Using BatchFetchStyle : LEGACY
2016-08-02 00:04:07  [ main:681 ] - [ DEBUG ]  Default batch fetch size: -1
2016-08-02 00:04:07  [ main:681 ] - [ DEBUG ]  Maximum outer join fetch depth: 2
2016-08-02 00:04:07  [ main:681 ] - [ DEBUG ]  Default null ordering: NONE
2016-08-02 00:04:07  [ main:681 ] - [ DEBUG ]  Order SQL updates by primary key: disabled
2016-08-02 00:04:07  [ main:681 ] - [ DEBUG ]  Order SQL inserts for batching: disabled
2016-08-02 00:04:07  [ main:681 ] - [ DEBUG ]  multi-tenancy strategy : NONE
2016-08-02 00:04:07  [ main:681 ] - [ DEBUG ]  JTA Track by Thread: enabled
2016-08-02 00:04:07  [ main:681 ] - [ DEBUG ]  Query language substitutions: {}
2016-08-02 00:04:07  [ main:681 ] - [ DEBUG ]  JPA query language strict compliance: disabled
2016-08-02 00:04:07  [ main:681 ] - [ DEBUG ]  Named query checking : enabled
2016-08-02 00:04:07  [ main:681 ] - [ DEBUG ]  Second-level cache: enabled
2016-08-02 00:04:07  [ main:682 ] - [ DEBUG ]  Second-level query cache: disabled
2016-08-02 00:04:07  [ main:682 ] - [ DEBUG ]  Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1065535
2016-08-02 00:04:07  [ main:682 ] - [ DEBUG ]  Second-level cache region prefix: null
2016-08-02 00:04:07  [ main:682 ] - [ DEBUG ]  Optimize second-level cache for minimal puts: disabled
2016-08-02 00:04:07  [ main:682 ] - [ DEBUG ]  Structured second-level cache entries: disabled
2016-08-02 00:04:07  [ main:682 ] - [ DEBUG ]  Second-level cache direct-reference entries: disabled
2016-08-02 00:04:07  [ main:682 ] - [ DEBUG ]  Automatic eviction of collection cache: disabled
2016-08-02 00:04:07  [ main:682 ] - [ DEBUG ]  JDBC batch size: 0
2016-08-02 00:04:07  [ main:682 ] - [ DEBUG ]  JDBC batch updates for versioned data: enabled
2016-08-02 00:04:07  [ main:682 ] - [ DEBUG ]  Scrollable result sets: disabled
2016-08-02 00:04:07  [ main:682 ] - [ DEBUG ]  Wrap result sets: disabled
2016-08-02 00:04:07  [ main:682 ] - [ DEBUG ]  JDBC3 getGeneratedKeys(): disabled
2016-08-02 00:04:07  [ main:683 ] - [ DEBUG ]  JDBC result set fetch size: null
2016-08-02 00:04:07  [ main:683 ] - [ DEBUG ]  Connection release mode: ON_CLOSE
2016-08-02 00:04:07  [ main:683 ] - [ DEBUG ]  Generate SQL with comments: disabled
2016-08-02 00:04:08  [ main:729 ] - [ DEBUG ]  Session factory constructed with filter configurations : {}
2016-08-02 00:04:08  [ main:732 ] - [ DEBUG ]  Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib, java.vm.version=24.79-b02, gopherProxySet=false, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7720069a, hibernate.temp.use_jdbc_metadata_defaults=false, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@234f79cb], user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/Applications/ide/workspace/product, java.runtime.version=1.7.0_79-b15, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/endorsed, os.arch=x86_64, java.io.tmpdir=/var/folders/hm/gtyh2n810gb6wd9xk127pzt00000gn/T/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Mac OS X, sun.jnu.encoding=UTF-8, java.library.path=/Users/qiejinkai/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., hibernate.connection.datasource={
	CreateTime:"2016-08-02 00:04:06",
	ActiveCount:0,
	PoolingCount:10,
	CreateCount:10,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
		{ID:1469162895, ConnectTime:"2016-08-02 00:04:07", UseCount:0, LastActiveTime:"2016-08-02 00:04:07"},
		{ID:453803059, ConnectTime:"2016-08-02 00:04:07", UseCount:0, LastActiveTime:"2016-08-02 00:04:07"},
		{ID:1353582116, ConnectTime:"2016-08-02 00:04:07", UseCount:0, LastActiveTime:"2016-08-02 00:04:07"},
		{ID:1360350941, ConnectTime:"2016-08-02 00:04:07", UseCount:0, LastActiveTime:"2016-08-02 00:04:07"},
		{ID:1307359425, ConnectTime:"2016-08-02 00:04:07", UseCount:0, LastActiveTime:"2016-08-02 00:04:07"},
		{ID:1884663518, ConnectTime:"2016-08-02 00:04:07", UseCount:0, LastActiveTime:"2016-08-02 00:04:07"},
		{ID:155953776, ConnectTime:"2016-08-02 00:04:07", UseCount:0, LastActiveTime:"2016-08-02 00:04:07"},
		{ID:1185063892, ConnectTime:"2016-08-02 00:04:07", UseCount:0, LastActiveTime:"2016-08-02 00:04:07"},
		{ID:1605490566, ConnectTime:"2016-08-02 00:04:07", UseCount:0, LastActiveTime:"2016-08-02 00:04:07"},
		{ID:347918207, ConnectTime:"2016-08-02 00:04:07", UseCount:0, LastActiveTime:"2016-08-02 00:04:07"}
	]
}

[
	{
	ID:1469162895, 
	poolStatements:[
		]
	},
	{
	ID:453803059, 
	poolStatements:[
		]
	},
	{
	ID:1353582116, 
	poolStatements:[
		]
	},
	{
	ID:1360350941, 
	poolStatements:[
		]
	},
	{
	ID:1307359425, 
	poolStatements:[
		]
	},
	{
	ID:1884663518, 
	poolStatements:[
		]
	},
	{
	ID:155953776, 
	poolStatements:[
		]
	},
	{
	ID:1185063892, 
	poolStatements:[
		]
	},
	{
	ID:1605490566, 
	poolStatements:[
		]
	},
	{
	ID:347918207, 
	poolStatements:[
		]
	}
], java.class.version=51.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.10.5, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, user.home=/Users/qiejinkai, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=false, user.name=qiejinkai, java.class.path=/Applications/ide/workspace/product/target/test-classes:/Applications/ide/workspace/product/target/classes:/Applications/ide/apache-tomcat-7.0.61/lib/annotations-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina-ant.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina-ha.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina-tribes.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina.jar:/Applications/ide/apache-tomcat-7.0.61/lib/ecj-4.4.2.jar:/Applications/ide/apache-tomcat-7.0.61/lib/el-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/jasper-el.jar:/Applications/ide/apache-tomcat-7.0.61/lib/jasper.jar:/Applications/ide/apache-tomcat-7.0.61/lib/jsp-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/servlet-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-coyote.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-dbcp.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-i18n-es.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-i18n-fr.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-i18n-ja.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-jdbc.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-util.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat7-websocket.jar:/Applications/ide/apache-tomcat-7.0.61/lib/websocket-api.jar:/Applications/ide/eclipse/plugins/org.junit_4.11.0.v201303080030/junit.jar:/Applications/ide/eclipse/plugins/org.hamcrest.core_1.3.0.v201303031735.jar:/Users/qiejinkai/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-context/4.2.3.RELEASE/spring-context-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-aop/4.2.3.RELEASE/spring-aop-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-beans/4.2.3.RELEASE/spring-beans-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-core/4.2.3.RELEASE/spring-core-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-expression/4.2.3.RELEASE/spring-expression-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-web/4.2.3.RELEASE/spring-web-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-webmvc/4.2.3.RELEASE/spring-webmvc-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-jdbc/4.2.3.RELEASE/spring-jdbc-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-test/4.2.3.RELEASE/spring-test-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-tx/4.2.3.RELEASE/spring-tx-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-orm/4.2.3.RELEASE/spring-orm-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/aspectj/aspectjweaver/1.8.4/aspectjweaver-1.8.4.jar:/Users/qiejinkai/.m2/repository/org/springframework/data/spring-data-redis/1.4.1.RELEASE/spring-data-redis-1.4.1.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-context-support/4.0.7.RELEASE/spring-context-support-4.0.7.RELEASE.jar:/Users/qiejinkai/.m2/repository/redis/clients/jedis/2.6.1/jedis-2.6.1.jar:/Users/qiejinkai/.m2/repository/org/springframework/session/spring-session/1.2.1.RELEASE/spring-session-1.2.1.RELEASE.jar:/Users/qiejinkai/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/qiejinkai/.m2/repository/org/apache/commons/commons-pool2/2.4.2/commons-pool2-2.4.2.jar:/Users/qiejinkai/.m2/repository/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/Users/qiejinkai/.m2/repository/org/mybatis/mybatis/3.2.8/mybatis-3.2.8.jar:/Users/qiejinkai/.m2/repository/com/google/code/gson/gson/2.3.1/gson-2.3.1.jar:/Users/qiejinkai/.m2/repository/mysql/mysql-connector-java/5.1.34/mysql-connector-java-5.1.34.jar:/Users/qiejinkai/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/Users/qiejinkai/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/Users/qiejinkai/.m2/repository/com/alibaba/druid/1.0.11/druid-1.0.11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/lib/tools.jar:/Users/qiejinkai/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/qiejinkai/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/qiejinkai/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-validator/5.2.0.Alpha1/hibernate-validator-5.2.0.Alpha1.jar:/Users/qiejinkai/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar:/Users/qiejinkai/.m2/repository/com/sun/mail/mailapi/1.5.2/mailapi-1.5.2.jar:/Users/qiejinkai/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/qiejinkai/.m2/repository/com/sun/mail/smtp/1.5.2/smtp-1.5.2.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-core/5.1.0.Final/hibernate-core-5.1.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/qiejinkai/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/qiejinkai/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-entitymanager/5.1.0.Final/hibernate-entitymanager-5.1.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-annotations/3.5.6-Final/hibernate-annotations-3.5.6-Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-ehcache/5.1.0.Final/hibernate-ehcache-5.1.0.Final.jar:/Users/qiejinkai/.m2/repository/net/sf/ehcache/ehcache/2.10.1/ehcache-2.10.1.jar:/Users/qiejinkai/.m2/repository/org/slf4j/slf4j-api/1.7.21/slf4j-api-1.7.21.jar:/Users/qiejinkai/.m2/repository/org/slf4j/slf4j-log4j12/1.7.21/slf4j-log4j12-1.7.21.jar:/Users/qiejinkai/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/qiejinkai/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/qiejinkai/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/qiejinkai/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/Users/qiejinkai/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Applications/ide/eclipse/configuration/org.eclipse.osgi/360/0/.cp/:/Applications/ide/eclipse/configuration/org.eclipse.osgi/359/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 57856 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test dao.hibernate.TestHibernateDao:testAdd, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.vm.info=mixed mode, java.version=1.7.0_79, java.ext.dirs=/Users/qiejinkai/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/classes, java.vendor=Oracle Corporation, file.separator=/, hibernate.hbm2ddl.auto=update, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeBig, sun.cpu.endian=little, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, sun.cpu.isalist=}
2016-08-02 00:04:08  [ main:762 ] - [ INFO ]  HV000001: Hibernate Validator 5.2.0.Alpha1
2016-08-02 00:04:08  [ main:774 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2016-08-02 00:04:08  [ main:775 ] - [ DEBUG ]  Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2016-08-02 00:04:08  [ main:788 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2016-08-02 00:04:08  [ main:790 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2016-08-02 00:04:08  [ main:828 ] - [ DEBUG ]  Not known whether passed class name [com.qjk.data.User] is safe
2016-08-02 00:04:08  [ main:828 ] - [ DEBUG ]  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.qjk.data.User
2016-08-02 00:04:08  [ main:886 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@2fb0dc0d, groups=[Ljava.lang.Class;@43ef1f1}, constraintType=GENERIC}.
2016-08-02 00:04:08  [ main:887 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@407e0764, max=2147483647, groups=[Ljava.lang.Class;@12175750}, constraintType=GENERIC}.
2016-08-02 00:04:08  [ main:890 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@1ff87f5d, groups=[Ljava.lang.Class;@7371c310}, constraintType=GENERIC}.
2016-08-02 00:04:08  [ main:890 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@31bd8aa6, max=2147483647, groups=[Ljava.lang.Class;@12d9b1cd}, constraintType=GENERIC}.
2016-08-02 00:04:08  [ main:893 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Pattern, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Pattern.message}, payload=[Ljava.lang.Class;@36edcdeb, flags=[Ljavax.validation.constraints.Pattern$Flag;@366a1b79, regexp=.*, groups=[Ljava.lang.Class;@7031c0d7}, constraintType=GENERIC}.
2016-08-02 00:04:08  [ main:893 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@526b9ccc, groups=[Ljava.lang.Class;@17033f5a}, constraintType=GENERIC}.
2016-08-02 00:04:08  [ main:894 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@56343983, max=2147483647, groups=[Ljava.lang.Class;@7eabf3ab}, constraintType=GENERIC}.
2016-08-02 00:04:08  [ main:928 ] - [ DEBUG ]  Skipping JACC integration as it was not enabled
2016-08-02 00:04:08  [ main:958 ] - [ DEBUG ]  Not known whether passed class name [com.qjk.data.User] is safe
2016-08-02 00:04:08  [ main:959 ] - [ DEBUG ]  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.qjk.data.User
2016-08-02 00:04:08  [ main:983 ] - [ DEBUG ]  Not known whether passed class name [com.qjk.data.User] is safe
2016-08-02 00:04:08  [ main:984 ] - [ DEBUG ]  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.qjk.data.User
2016-08-02 00:04:08  [ main:1047 ] - [ DEBUG ]  Static SQL for entity: com.qjk.data.User
2016-08-02 00:04:08  [ main:1048 ] - [ DEBUG ]   Version select: select uid from User where uid =?
2016-08-02 00:04:08  [ main:1048 ] - [ DEBUG ]   Snapshot select: select user_.uid, user_.email as email2_0_, user_.logo as logo3_0_, user_.nick as nick4_0_, user_.password as password5_0_, user_.phone as phone6_0_ from User user_ where user_.uid=?
2016-08-02 00:04:08  [ main:1048 ] - [ DEBUG ]   Insert 0: insert into User (email, logo, nick, password, phone, uid) values (?, ?, ?, ?, ?, ?)
2016-08-02 00:04:08  [ main:1048 ] - [ DEBUG ]   Update 0: update User set email=?, logo=?, nick=?, password=?, phone=? where uid=?
2016-08-02 00:04:08  [ main:1048 ] - [ DEBUG ]   Delete 0: delete from User where uid=?
2016-08-02 00:04:08  [ main:1074 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5794137f]
2016-08-02 00:04:08  [ main:1075 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:04:08  [ main:1075 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:04:08  [ main:1075 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:04:08  [ main:1075 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:04:08  [ main:1075 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:04:08  [ main:1075 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:04:08  [ main:1090 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:04:08  [ main:1094 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:04:08  [ main:1097 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [NONE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:04:08  [ main:1097 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@226e8d7e]
2016-08-02 00:04:08  [ main:1097 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:04:08  [ main:1097 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:04:08  [ main:1097 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:04:08  [ main:1097 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:04:08  [ main:1097 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:04:08  [ main:1097 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:04:08  [ main:1097 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:04:08  [ main:1098 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:04:08  [ main:1098 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [READ]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:04:08  [ main:1098 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21fd31fd]
2016-08-02 00:04:08  [ main:1098 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:04:08  [ main:1098 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:04:08  [ main:1098 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:04:08  [ main:1098 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:04:08  [ main:1098 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:04:08  [ main:1099 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:04:08  [ main:1099 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:04:08  [ main:1099 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:04:08  [ main:1099 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [UPGRADE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:04:08  [ main:1099 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aa5ea62]
2016-08-02 00:04:08  [ main:1099 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:04:08  [ main:1100 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:04:08  [ main:1100 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:04:08  [ main:1100 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:04:08  [ main:1100 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:04:08  [ main:1100 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:04:08  [ main:1100 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:04:08  [ main:1100 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:04:08  [ main:1100 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [UPGRADE_NOWAIT]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:04:08  [ main:1101 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b59dd6c]
2016-08-02 00:04:08  [ main:1101 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:04:08  [ main:1101 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:04:08  [ main:1101 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:04:08  [ main:1101 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:04:08  [ main:1101 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:04:08  [ main:1101 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:04:08  [ main:1101 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:04:08  [ main:1101 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:04:08  [ main:1102 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [UPGRADE_SKIPLOCKED]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:04:08  [ main:1102 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9bfb48e]
2016-08-02 00:04:08  [ main:1102 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:04:08  [ main:1102 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:04:08  [ main:1102 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:04:08  [ main:1102 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:04:08  [ main:1102 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:04:08  [ main:1102 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:04:08  [ main:1103 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:04:08  [ main:1103 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:04:08  [ main:1103 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [FORCE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:04:08  [ main:1103 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c5d6d3e]
2016-08-02 00:04:08  [ main:1103 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:04:08  [ main:1103 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:04:08  [ main:1103 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:04:08  [ main:1104 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:04:08  [ main:1104 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:04:08  [ main:1104 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:04:08  [ main:1104 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:04:08  [ main:1104 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:04:08  [ main:1104 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [PESSIMISTIC_READ]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? lock in share mode
2016-08-02 00:04:08  [ main:1104 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ec8ef1e]
2016-08-02 00:04:08  [ main:1105 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:04:08  [ main:1105 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:04:08  [ main:1105 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:04:08  [ main:1105 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:04:08  [ main:1105 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:04:08  [ main:1105 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:04:08  [ main:1105 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:04:08  [ main:1105 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:04:08  [ main:1105 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [PESSIMISTIC_WRITE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:04:08  [ main:1105 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22fc7015]
2016-08-02 00:04:08  [ main:1106 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:04:08  [ main:1106 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:04:08  [ main:1106 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:04:08  [ main:1106 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:04:08  [ main:1106 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:04:08  [ main:1106 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:04:08  [ main:1106 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:04:08  [ main:1106 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:04:08  [ main:1106 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:04:08  [ main:1106 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@273261ef]
2016-08-02 00:04:08  [ main:1107 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:04:08  [ main:1107 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:04:08  [ main:1107 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:04:08  [ main:1107 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:04:08  [ main:1107 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:04:08  [ main:1107 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:04:08  [ main:1107 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:04:08  [ main:1107 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:04:08  [ main:1108 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [OPTIMISTIC]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:04:08  [ main:1108 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23903e85]
2016-08-02 00:04:08  [ main:1108 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:04:08  [ main:1108 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:04:08  [ main:1108 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:04:08  [ main:1108 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:04:08  [ main:1108 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:04:08  [ main:1108 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:04:08  [ main:1109 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:04:08  [ main:1109 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:04:08  [ main:1109 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:04:08  [ main:1128 ] - [ DEBUG ]  Static select for action ACTION_MERGE on entity com.qjk.data.User: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:04:08  [ main:1128 ] - [ DEBUG ]  Static select for action ACTION_REFRESH on entity com.qjk.data.User: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:04:08  [ main:1128 ] - [ DEBUG ]  Instantiated session factory
2016-08-02 00:04:08  [ main:1176 ] - [ DEBUG ]  No alter strings for table : hibernate_sequence
2016-08-02 00:04:08  [ main:1195 ] - [ DEBUG ]  No alter strings for table : User
2016-08-02 00:04:08  [ main:1200 ] - [ DEBUG ]  No JtaPlatform was specified, checking resolver
2016-08-02 00:04:08  [ main:1200 ] - [ DEBUG ]  No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-08-02 00:04:08  [ main:1202 ] - [ DEBUG ]  Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-08-02 00:04:08  [ main:1205 ] - [ DEBUG ]  Checking 0 named HQL queries
2016-08-02 00:04:08  [ main:1205 ] - [ DEBUG ]  Checking 0 named SQL queries
2016-08-02 00:04:08  [ main:1207 ] - [ DEBUG ]  Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@586cc05e
2016-08-02 00:04:08  [ main:1207 ] - [ DEBUG ]  Registering SessionFactory: 222903d9-22f7-48a9-ba14-2c0645fddd1e (<unnamed>)
2016-08-02 00:04:08  [ main:1208 ] - [ DEBUG ]  Not binding SessionFactory to JNDI, no JNDI name configured
2016-08-02 00:04:08  [ main:1612 ] - [ DEBUG ]  Statistics initialized [enabled=false]
2016-08-02 00:04:08  [ main:1617 ] - [ DEBUG ]  begin
2016-08-02 00:04:08  [ main:1632 ] - [ DEBUG ]  select next_val as id_val from hibernate_sequence for update
2016-08-02 00:04:08  [ main:1664 ] - [ DEBUG ]  {conn-10009, pstmt-20000} enter cache
2016-08-02 00:04:08  [ main:1665 ] - [ DEBUG ]  update hibernate_sequence set next_val= ? where next_val=?
2016-08-02 00:04:08  [ main:1667 ] - [ DEBUG ]  {conn-10009, pstmt-20001} enter cache
2016-08-02 00:04:08  [ main:1669 ] - [ DEBUG ]  Generated identifier: 25, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2016-08-02 00:04:08  [ main:1694 ] - [ DEBUG ]  select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:04:08  [ main:1700 ] - [ DEBUG ]  Starting ResultSet row #0
2016-08-02 00:04:08  [ main:1701 ] - [ DEBUG ]  On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2016-08-02 00:04:08  [ main:1707 ] - [ DEBUG ]  Resolving associations for [com.qjk.data.User#17]
2016-08-02 00:04:08  [ main:1708 ] - [ DEBUG ]  Done materializing entity [com.qjk.data.User#17]
2016-08-02 00:04:08  [ main:1708 ] - [ DEBUG ]  HHH000387: ResultSet's statement was not registered
2016-08-02 00:04:08  [ main:1708 ] - [ DEBUG ]  {conn-10010, pstmt-20002} enter cache
2016-08-02 00:04:08  [ main:1708 ] - [ DEBUG ]  Done entity load : com.qjk.data.User#17
2016-08-02 00:04:08  [ main:1708 ] - [ DEBUG ]  committing
2016-08-02 00:04:08  [ main:1709 ] - [ DEBUG ]  Processing flush-time cascades
2016-08-02 00:04:08  [ main:1710 ] - [ DEBUG ]  Dirty checking collections
2016-08-02 00:04:08  [ main:1711 ] - [ DEBUG ]  Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2016-08-02 00:04:08  [ main:1711 ] - [ DEBUG ]  Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2016-08-02 00:04:08  [ main:1712 ] - [ DEBUG ]  Listing entities:
2016-08-02 00:04:08  [ main:1712 ] - [ DEBUG ]  com.qjk.data.User{uid=17, logo=null, phone=null, nick=wangzhe, email=wangzhehaose@sina.com, password=f24f2258b9bd04e405b347a1c3064206}
2016-08-02 00:04:08  [ main:1712 ] - [ DEBUG ]  com.qjk.data.User{uid=25, logo=null, phone=null, nick=wangzhe, email=wangzhehaose@sina.com, password=f24f2258b9bd04e405b347a1c3064206}
2016-08-02 00:04:09  [ main:1738 ] - [ DEBUG ]  insert into User (email, logo, nick, password, phone, uid) values (?, ?, ?, ?, ?, ?)
2016-08-02 00:04:09  [ main:1741 ] - [ DEBUG ]  {conn-10010, pstmt-20003} enter cache
2016-08-02 00:04:09  [ main:1745 ] - [ DEBUG ]  HHH000420: Closing un-released batch
2016-08-02 00:04:09  [ Thread-3:1762 ] - [ DEBUG ]  HHH000031: Closing
2016-08-02 00:04:09  [ Thread-3:1763 ] - [ DEBUG ]  Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2016-08-02 00:04:09  [ Thread-3:1763 ] - [ DEBUG ]  Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2016-08-02 00:04:09  [ Thread-3:1765 ] - [ DEBUG ]  {conn-10009, pstmt-20000} exit cache
2016-08-02 00:04:09  [ Thread-3:1765 ] - [ DEBUG ]  {conn-10009, pstmt-20001} exit cache
2016-08-02 00:04:09  [ Thread-3:1765 ] - [ DEBUG ]  {conn-10010, pstmt-20002} exit cache
2016-08-02 00:04:09  [ Thread-3:1765 ] - [ DEBUG ]  {conn-10010, pstmt-20003} exit cache
2016-08-02 00:04:09  [ Thread-3:1766 ] - [ INFO ]  {dataSource-1} closed
2016-08-02 00:05:02  [ main:0 ] - [ INFO ]  {dataSource-1} inited
2016-08-02 00:05:02  [ main:49 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-08-02 00:05:02  [ main:60 ] - [ DEBUG ]  Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-08-02 00:05:02  [ main:63 ] - [ DEBUG ]  Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-08-02 00:05:02  [ main:66 ] - [ DEBUG ]  Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-08-02 00:05:02  [ main:155 ] - [ INFO ]  HHH000412: Hibernate Core {5.1.0.Final}
2016-08-02 00:05:02  [ main:157 ] - [ INFO ]  HHH000206: hibernate.properties not found
2016-08-02 00:05:02  [ main:159 ] - [ INFO ]  HHH000021: Bytecode provider name : javassist
2016-08-02 00:05:02  [ main:192 ] - [ DEBUG ]  Building session factory using internal StandardServiceRegistryBuilder
2016-08-02 00:05:02  [ main:200 ] - [ DEBUG ]  Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-08-02 00:05:02  [ main:201 ] - [ DEBUG ]  Building session factory using provided StandardServiceRegistry
2016-08-02 00:05:02  [ main:234 ] - [ DEBUG ]  Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-08-02 00:05:02  [ main:244 ] - [ INFO ]  HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-08-02 00:05:02  [ main:279 ] - [ DEBUG ]  Adding type registration boolean -> org.hibernate.type.BooleanType@5dac7f99
2016-08-02 00:05:02  [ main:279 ] - [ DEBUG ]  Adding type registration boolean -> org.hibernate.type.BooleanType@5dac7f99
2016-08-02 00:05:02  [ main:279 ] - [ DEBUG ]  Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5dac7f99
2016-08-02 00:05:02  [ main:281 ] - [ DEBUG ]  Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5dba803e
2016-08-02 00:05:02  [ main:282 ] - [ DEBUG ]  Adding type registration true_false -> org.hibernate.type.TrueFalseType@51b2f8ef
2016-08-02 00:05:02  [ main:283 ] - [ DEBUG ]  Adding type registration yes_no -> org.hibernate.type.YesNoType@474b8734
2016-08-02 00:05:02  [ main:286 ] - [ DEBUG ]  Adding type registration byte -> org.hibernate.type.ByteType@294536ae
2016-08-02 00:05:02  [ main:286 ] - [ DEBUG ]  Adding type registration byte -> org.hibernate.type.ByteType@294536ae
2016-08-02 00:05:02  [ main:286 ] - [ DEBUG ]  Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@294536ae
2016-08-02 00:05:02  [ main:287 ] - [ DEBUG ]  Adding type registration character -> org.hibernate.type.CharacterType@e93c2f0
2016-08-02 00:05:02  [ main:288 ] - [ DEBUG ]  Adding type registration char -> org.hibernate.type.CharacterType@e93c2f0
2016-08-02 00:05:02  [ main:288 ] - [ DEBUG ]  Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@e93c2f0
2016-08-02 00:05:02  [ main:291 ] - [ DEBUG ]  Adding type registration short -> org.hibernate.type.ShortType@61049b37
2016-08-02 00:05:02  [ main:292 ] - [ DEBUG ]  Adding type registration short -> org.hibernate.type.ShortType@61049b37
2016-08-02 00:05:02  [ main:292 ] - [ DEBUG ]  Adding type registration java.lang.Short -> org.hibernate.type.ShortType@61049b37
2016-08-02 00:05:02  [ main:294 ] - [ DEBUG ]  Adding type registration integer -> org.hibernate.type.IntegerType@679a7809
2016-08-02 00:05:02  [ main:294 ] - [ DEBUG ]  Adding type registration int -> org.hibernate.type.IntegerType@679a7809
2016-08-02 00:05:02  [ main:294 ] - [ DEBUG ]  Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@679a7809
2016-08-02 00:05:02  [ main:296 ] - [ DEBUG ]  Adding type registration long -> org.hibernate.type.LongType@73c86820
2016-08-02 00:05:02  [ main:297 ] - [ DEBUG ]  Adding type registration long -> org.hibernate.type.LongType@73c86820
2016-08-02 00:05:02  [ main:297 ] - [ DEBUG ]  Adding type registration java.lang.Long -> org.hibernate.type.LongType@73c86820
2016-08-02 00:05:02  [ main:299 ] - [ DEBUG ]  Adding type registration float -> org.hibernate.type.FloatType@1b860bed
2016-08-02 00:05:02  [ main:299 ] - [ DEBUG ]  Adding type registration float -> org.hibernate.type.FloatType@1b860bed
2016-08-02 00:05:02  [ main:300 ] - [ DEBUG ]  Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1b860bed
2016-08-02 00:05:02  [ main:301 ] - [ DEBUG ]  Adding type registration double -> org.hibernate.type.DoubleType@34ebd0be
2016-08-02 00:05:02  [ main:301 ] - [ DEBUG ]  Adding type registration double -> org.hibernate.type.DoubleType@34ebd0be
2016-08-02 00:05:02  [ main:302 ] - [ DEBUG ]  Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@34ebd0be
2016-08-02 00:05:02  [ main:304 ] - [ DEBUG ]  Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5312d4fb
2016-08-02 00:05:02  [ main:304 ] - [ DEBUG ]  Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5312d4fb
2016-08-02 00:05:02  [ main:305 ] - [ DEBUG ]  Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740b96f8
2016-08-02 00:05:02  [ main:306 ] - [ DEBUG ]  Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740b96f8
2016-08-02 00:05:02  [ main:307 ] - [ DEBUG ]  Adding type registration string -> org.hibernate.type.StringType@7ebfed2a
2016-08-02 00:05:02  [ main:307 ] - [ DEBUG ]  Adding type registration java.lang.String -> org.hibernate.type.StringType@7ebfed2a
2016-08-02 00:05:02  [ main:308 ] - [ DEBUG ]  Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4537c12f
2016-08-02 00:05:02  [ main:309 ] - [ DEBUG ]  Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@c985e80
2016-08-02 00:05:02  [ main:309 ] - [ DEBUG ]  Adding type registration url -> org.hibernate.type.UrlType@c3598e1
2016-08-02 00:05:02  [ main:309 ] - [ DEBUG ]  Adding type registration java.net.URL -> org.hibernate.type.UrlType@c3598e1
2016-08-02 00:05:02  [ main:311 ] - [ DEBUG ]  Adding type registration date -> org.hibernate.type.DateType@7ff9662b
2016-08-02 00:05:02  [ main:311 ] - [ DEBUG ]  Adding type registration java.sql.Date -> org.hibernate.type.DateType@7ff9662b
2016-08-02 00:05:02  [ main:312 ] - [ DEBUG ]  Adding type registration time -> org.hibernate.type.TimeType@65d0e7e9
2016-08-02 00:05:02  [ main:313 ] - [ DEBUG ]  Adding type registration java.sql.Time -> org.hibernate.type.TimeType@65d0e7e9
2016-08-02 00:05:02  [ main:314 ] - [ DEBUG ]  Adding type registration timestamp -> org.hibernate.type.TimestampType@18782d55
2016-08-02 00:05:02  [ main:314 ] - [ DEBUG ]  Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@18782d55
2016-08-02 00:05:02  [ main:314 ] - [ DEBUG ]  Adding type registration java.util.Date -> org.hibernate.type.TimestampType@18782d55
2016-08-02 00:05:02  [ main:316 ] - [ DEBUG ]  Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1e14b3e3
2016-08-02 00:05:02  [ main:318 ] - [ DEBUG ]  Adding type registration calendar -> org.hibernate.type.CalendarType@e8b299c
2016-08-02 00:05:02  [ main:318 ] - [ DEBUG ]  Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@e8b299c
2016-08-02 00:05:02  [ main:318 ] - [ DEBUG ]  Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@e8b299c
2016-08-02 00:05:02  [ main:320 ] - [ DEBUG ]  Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@32bfc49d
2016-08-02 00:05:02  [ main:322 ] - [ DEBUG ]  Adding type registration locale -> org.hibernate.type.LocaleType@61693057
2016-08-02 00:05:02  [ main:323 ] - [ DEBUG ]  Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61693057
2016-08-02 00:05:02  [ main:324 ] - [ DEBUG ]  Adding type registration currency -> org.hibernate.type.CurrencyType@1f6f4b05
2016-08-02 00:05:02  [ main:324 ] - [ DEBUG ]  Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1f6f4b05
2016-08-02 00:05:02  [ main:325 ] - [ DEBUG ]  Adding type registration timezone -> org.hibernate.type.TimeZoneType@2d394db4
2016-08-02 00:05:02  [ main:326 ] - [ DEBUG ]  Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2d394db4
2016-08-02 00:05:02  [ main:327 ] - [ DEBUG ]  Adding type registration class -> org.hibernate.type.ClassType@47aeb8e6
2016-08-02 00:05:02  [ main:327 ] - [ DEBUG ]  Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47aeb8e6
2016-08-02 00:05:02  [ main:329 ] - [ DEBUG ]  Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4190cb05
2016-08-02 00:05:02  [ main:329 ] - [ DEBUG ]  Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4190cb05
2016-08-02 00:05:02  [ main:330 ] - [ DEBUG ]  Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3af6b48f
2016-08-02 00:05:02  [ main:332 ] - [ DEBUG ]  Adding type registration binary -> org.hibernate.type.BinaryType@3217a2f5
2016-08-02 00:05:02  [ main:333 ] - [ DEBUG ]  Adding type registration byte[] -> org.hibernate.type.BinaryType@3217a2f5
2016-08-02 00:05:02  [ main:333 ] - [ DEBUG ]  Adding type registration [B -> org.hibernate.type.BinaryType@3217a2f5
2016-08-02 00:05:02  [ main:335 ] - [ DEBUG ]  Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@25f1ce01
2016-08-02 00:05:02  [ main:336 ] - [ DEBUG ]  Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@25f1ce01
2016-08-02 00:05:02  [ main:336 ] - [ DEBUG ]  Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@25f1ce01
2016-08-02 00:05:02  [ main:337 ] - [ DEBUG ]  Adding type registration image -> org.hibernate.type.ImageType@440e66e8
2016-08-02 00:05:02  [ main:339 ] - [ DEBUG ]  Adding type registration characters -> org.hibernate.type.CharArrayType@4a21efa3
2016-08-02 00:05:02  [ main:339 ] - [ DEBUG ]  Adding type registration char[] -> org.hibernate.type.CharArrayType@4a21efa3
2016-08-02 00:05:02  [ main:339 ] - [ DEBUG ]  Adding type registration [C -> org.hibernate.type.CharArrayType@4a21efa3
2016-08-02 00:05:02  [ main:340 ] - [ DEBUG ]  Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@127fb654
2016-08-02 00:05:02  [ main:341 ] - [ DEBUG ]  Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@127fb654
2016-08-02 00:05:02  [ main:341 ] - [ DEBUG ]  Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@127fb654
2016-08-02 00:05:02  [ main:342 ] - [ DEBUG ]  Adding type registration text -> org.hibernate.type.TextType@7a5d9706
2016-08-02 00:05:02  [ main:343 ] - [ DEBUG ]  Adding type registration ntext -> org.hibernate.type.NTextType@40ba533c
2016-08-02 00:05:02  [ main:348 ] - [ DEBUG ]  Adding type registration blob -> org.hibernate.type.BlobType@113df6b
2016-08-02 00:05:02  [ main:349 ] - [ DEBUG ]  Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@113df6b
2016-08-02 00:05:02  [ main:350 ] - [ DEBUG ]  Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@70daeb2d
2016-08-02 00:05:02  [ main:360 ] - [ DEBUG ]  Adding type registration clob -> org.hibernate.type.ClobType@4043529b
2016-08-02 00:05:02  [ main:360 ] - [ DEBUG ]  Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4043529b
2016-08-02 00:05:02  [ main:366 ] - [ DEBUG ]  Adding type registration nclob -> org.hibernate.type.NClobType@67697fca
2016-08-02 00:05:02  [ main:366 ] - [ DEBUG ]  Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@67697fca
2016-08-02 00:05:02  [ main:367 ] - [ DEBUG ]  Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@42ae811c
2016-08-02 00:05:02  [ main:368 ] - [ DEBUG ]  Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@64cb2f35
2016-08-02 00:05:02  [ main:370 ] - [ DEBUG ]  Adding type registration serializable -> org.hibernate.type.SerializableType@3fdbd2d5
2016-08-02 00:05:02  [ main:375 ] - [ DEBUG ]  Adding type registration object -> org.hibernate.type.ObjectType@17c58ca5
2016-08-02 00:05:02  [ main:375 ] - [ DEBUG ]  Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@17c58ca5
2016-08-02 00:05:02  [ main:376 ] - [ DEBUG ]  Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1f8a004b
2016-08-02 00:05:02  [ main:376 ] - [ DEBUG ]  Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d194c1a
2016-08-02 00:05:02  [ main:376 ] - [ DEBUG ]  Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67d34de2
2016-08-02 00:05:02  [ main:376 ] - [ DEBUG ]  Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@619e65ae
2016-08-02 00:05:02  [ main:376 ] - [ DEBUG ]  Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6625b493
2016-08-02 00:05:02  [ main:376 ] - [ DEBUG ]  Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@35725349
2016-08-02 00:05:02  [ main:376 ] - [ DEBUG ]  Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@64b9f908
2016-08-02 00:05:02  [ main:376 ] - [ DEBUG ]  Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6d8cafe1
2016-08-02 00:05:02  [ main:408 ] - [ INFO ]  HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-08-02 00:05:02  [ main:431 ] - [ DEBUG ]  IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-08-02 00:05:02  [ main:438 ] - [ INFO ]  HHH000422: Disabling contextual LOB creation as connection was null
2016-08-02 00:05:02  [ main:475 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-08-02 00:05:02  [ main:476 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-08-02 00:05:02  [ main:476 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-08-02 00:05:02  [ main:477 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-08-02 00:05:02  [ main:477 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-08-02 00:05:02  [ main:478 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-08-02 00:05:02  [ main:479 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-08-02 00:05:02  [ main:480 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-08-02 00:05:02  [ main:481 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-08-02 00:05:02  [ main:481 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-08-02 00:05:02  [ main:482 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-08-02 00:05:02  [ main:484 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-08-02 00:05:02  [ main:484 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-08-02 00:05:02  [ main:485 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-08-02 00:05:02  [ main:517 ] - [ DEBUG ]  Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-08-02 00:05:02  [ main:545 ] - [ DEBUG ]  Binding entity from annotated class: com.qjk.data.User
2016-08-02 00:05:02  [ main:567 ] - [ DEBUG ]  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-08-02 00:05:02  [ main:573 ] - [ DEBUG ]  Import with entity name User
2016-08-02 00:05:02  [ main:580 ] - [ DEBUG ]  Bind entity com.qjk.data.User on table User
2016-08-02 00:05:03  [ main:619 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=uid, insertable=true, updatable=true, unique=false}
2016-08-02 00:05:03  [ main:623 ] - [ DEBUG ]  MetadataSourceProcessor property uid with lazy=false
2016-08-02 00:05:03  [ main:625 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:uid]
2016-08-02 00:05:03  [ main:626 ] - [ DEBUG ]  building SimpleValue for uid
2016-08-02 00:05:03  [ main:629 ] - [ DEBUG ]  Building property uid
2016-08-02 00:05:03  [ main:632 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=email, insertable=true, updatable=true, unique=false}
2016-08-02 00:05:03  [ main:632 ] - [ DEBUG ]  MetadataSourceProcessor property email with lazy=false
2016-08-02 00:05:03  [ main:632 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:email]
2016-08-02 00:05:03  [ main:633 ] - [ DEBUG ]  building SimpleValue for email
2016-08-02 00:05:03  [ main:633 ] - [ DEBUG ]  Building property email
2016-08-02 00:05:03  [ main:633 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=logo, insertable=true, updatable=true, unique=false}
2016-08-02 00:05:03  [ main:634 ] - [ DEBUG ]  MetadataSourceProcessor property logo with lazy=false
2016-08-02 00:05:03  [ main:634 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:logo]
2016-08-02 00:05:03  [ main:634 ] - [ DEBUG ]  building SimpleValue for logo
2016-08-02 00:05:03  [ main:635 ] - [ DEBUG ]  Building property logo
2016-08-02 00:05:03  [ main:636 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=nick, insertable=true, updatable=true, unique=false}
2016-08-02 00:05:03  [ main:636 ] - [ DEBUG ]  MetadataSourceProcessor property nick with lazy=false
2016-08-02 00:05:03  [ main:637 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:nick]
2016-08-02 00:05:03  [ main:637 ] - [ DEBUG ]  building SimpleValue for nick
2016-08-02 00:05:03  [ main:637 ] - [ DEBUG ]  Building property nick
2016-08-02 00:05:03  [ main:637 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=password, insertable=true, updatable=true, unique=false}
2016-08-02 00:05:03  [ main:638 ] - [ DEBUG ]  MetadataSourceProcessor property password with lazy=false
2016-08-02 00:05:03  [ main:638 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:password]
2016-08-02 00:05:03  [ main:639 ] - [ DEBUG ]  building SimpleValue for password
2016-08-02 00:05:03  [ main:639 ] - [ DEBUG ]  Building property password
2016-08-02 00:05:03  [ main:639 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2016-08-02 00:05:03  [ main:639 ] - [ DEBUG ]  MetadataSourceProcessor property phone with lazy=false
2016-08-02 00:05:03  [ main:639 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:phone]
2016-08-02 00:05:03  [ main:639 ] - [ DEBUG ]  building SimpleValue for phone
2016-08-02 00:05:03  [ main:640 ] - [ DEBUG ]  Building property phone
2016-08-02 00:05:03  [ main:641 ] - [ DEBUG ]  Starting fillSimpleValue for uid
2016-08-02 00:05:03  [ main:641 ] - [ DEBUG ]  Starting fillSimpleValue for email
2016-08-02 00:05:03  [ main:641 ] - [ DEBUG ]  Starting fillSimpleValue for logo
2016-08-02 00:05:03  [ main:641 ] - [ DEBUG ]  Starting fillSimpleValue for nick
2016-08-02 00:05:03  [ main:641 ] - [ DEBUG ]  Starting fillSimpleValue for password
2016-08-02 00:05:03  [ main:641 ] - [ DEBUG ]  Starting fillSimpleValue for phone
2016-08-02 00:05:03  [ main:643 ] - [ DEBUG ]  Forcing column [uid] to be non-null as it is part of the primary key for table [user]
2016-08-02 00:05:03  [ main:680 ] - [ DEBUG ]  Building session factory
2016-08-02 00:05:03  [ main:680 ] - [ DEBUG ]  SessionFactory name : null
2016-08-02 00:05:03  [ main:681 ] - [ DEBUG ]  Automatic flush during beforeCompletion(): disabled
2016-08-02 00:05:03  [ main:681 ] - [ DEBUG ]  Automatic session close at end of transaction: disabled
2016-08-02 00:05:03  [ main:681 ] - [ DEBUG ]  Statistics: disabled
2016-08-02 00:05:03  [ main:681 ] - [ DEBUG ]  Deleted entity synthetic identifier rollback: disabled
2016-08-02 00:05:03  [ main:681 ] - [ DEBUG ]  Default entity-mode: pojo
2016-08-02 00:05:03  [ main:681 ] - [ DEBUG ]  Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-08-02 00:05:03  [ main:681 ] - [ DEBUG ]  Allow initialization of lazy state outside session : disabled
2016-08-02 00:05:03  [ main:681 ] - [ DEBUG ]  Using BatchFetchStyle : LEGACY
2016-08-02 00:05:03  [ main:681 ] - [ DEBUG ]  Default batch fetch size: -1
2016-08-02 00:05:03  [ main:682 ] - [ DEBUG ]  Maximum outer join fetch depth: 2
2016-08-02 00:05:03  [ main:682 ] - [ DEBUG ]  Default null ordering: NONE
2016-08-02 00:05:03  [ main:682 ] - [ DEBUG ]  Order SQL updates by primary key: disabled
2016-08-02 00:05:03  [ main:682 ] - [ DEBUG ]  Order SQL inserts for batching: disabled
2016-08-02 00:05:03  [ main:682 ] - [ DEBUG ]  multi-tenancy strategy : NONE
2016-08-02 00:05:03  [ main:682 ] - [ DEBUG ]  JTA Track by Thread: enabled
2016-08-02 00:05:03  [ main:682 ] - [ DEBUG ]  Query language substitutions: {}
2016-08-02 00:05:03  [ main:682 ] - [ DEBUG ]  JPA query language strict compliance: disabled
2016-08-02 00:05:03  [ main:682 ] - [ DEBUG ]  Named query checking : enabled
2016-08-02 00:05:03  [ main:682 ] - [ DEBUG ]  Second-level cache: enabled
2016-08-02 00:05:03  [ main:683 ] - [ DEBUG ]  Second-level query cache: disabled
2016-08-02 00:05:03  [ main:683 ] - [ DEBUG ]  Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@70b4ba9a
2016-08-02 00:05:03  [ main:683 ] - [ DEBUG ]  Second-level cache region prefix: null
2016-08-02 00:05:03  [ main:683 ] - [ DEBUG ]  Optimize second-level cache for minimal puts: disabled
2016-08-02 00:05:03  [ main:683 ] - [ DEBUG ]  Structured second-level cache entries: disabled
2016-08-02 00:05:03  [ main:683 ] - [ DEBUG ]  Second-level cache direct-reference entries: disabled
2016-08-02 00:05:03  [ main:683 ] - [ DEBUG ]  Automatic eviction of collection cache: disabled
2016-08-02 00:05:03  [ main:683 ] - [ DEBUG ]  JDBC batch size: 0
2016-08-02 00:05:03  [ main:683 ] - [ DEBUG ]  JDBC batch updates for versioned data: enabled
2016-08-02 00:05:03  [ main:683 ] - [ DEBUG ]  Scrollable result sets: disabled
2016-08-02 00:05:03  [ main:683 ] - [ DEBUG ]  Wrap result sets: disabled
2016-08-02 00:05:03  [ main:684 ] - [ DEBUG ]  JDBC3 getGeneratedKeys(): disabled
2016-08-02 00:05:03  [ main:684 ] - [ DEBUG ]  JDBC result set fetch size: null
2016-08-02 00:05:03  [ main:684 ] - [ DEBUG ]  Connection release mode: ON_CLOSE
2016-08-02 00:05:03  [ main:684 ] - [ DEBUG ]  Generate SQL with comments: disabled
2016-08-02 00:05:03  [ main:731 ] - [ DEBUG ]  Session factory constructed with filter configurations : {}
2016-08-02 00:05:03  [ main:734 ] - [ DEBUG ]  Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib, java.vm.version=24.79-b02, gopherProxySet=false, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1b0c7c33, hibernate.temp.use_jdbc_metadata_defaults=false, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@36c51089], user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/Applications/ide/workspace/product, java.runtime.version=1.7.0_79-b15, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/endorsed, os.arch=x86_64, java.io.tmpdir=/var/folders/hm/gtyh2n810gb6wd9xk127pzt00000gn/T/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Mac OS X, sun.jnu.encoding=UTF-8, java.library.path=/Users/qiejinkai/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., hibernate.connection.datasource={
	CreateTime:"2016-08-02 00:05:01",
	ActiveCount:0,
	PoolingCount:10,
	CreateCount:10,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
		{ID:1353582116, ConnectTime:"2016-08-02 00:05:02", UseCount:0, LastActiveTime:"2016-08-02 00:05:02"},
		{ID:1360350941, ConnectTime:"2016-08-02 00:05:02", UseCount:0, LastActiveTime:"2016-08-02 00:05:02"},
		{ID:1307359425, ConnectTime:"2016-08-02 00:05:02", UseCount:0, LastActiveTime:"2016-08-02 00:05:02"},
		{ID:1884663518, ConnectTime:"2016-08-02 00:05:02", UseCount:0, LastActiveTime:"2016-08-02 00:05:02"},
		{ID:155953776, ConnectTime:"2016-08-02 00:05:02", UseCount:0, LastActiveTime:"2016-08-02 00:05:02"},
		{ID:1185063892, ConnectTime:"2016-08-02 00:05:02", UseCount:0, LastActiveTime:"2016-08-02 00:05:02"},
		{ID:1605490566, ConnectTime:"2016-08-02 00:05:02", UseCount:0, LastActiveTime:"2016-08-02 00:05:02"},
		{ID:347918207, ConnectTime:"2016-08-02 00:05:02", UseCount:0, LastActiveTime:"2016-08-02 00:05:02"},
		{ID:2010817915, ConnectTime:"2016-08-02 00:05:02", UseCount:0, LastActiveTime:"2016-08-02 00:05:02"},
		{ID:866544566, ConnectTime:"2016-08-02 00:05:02", UseCount:0, LastActiveTime:"2016-08-02 00:05:02"}
	]
}

[
	{
	ID:1353582116, 
	poolStatements:[
		]
	},
	{
	ID:1360350941, 
	poolStatements:[
		]
	},
	{
	ID:1307359425, 
	poolStatements:[
		]
	},
	{
	ID:1884663518, 
	poolStatements:[
		]
	},
	{
	ID:155953776, 
	poolStatements:[
		]
	},
	{
	ID:1185063892, 
	poolStatements:[
		]
	},
	{
	ID:1605490566, 
	poolStatements:[
		]
	},
	{
	ID:347918207, 
	poolStatements:[
		]
	},
	{
	ID:2010817915, 
	poolStatements:[
		]
	},
	{
	ID:866544566, 
	poolStatements:[
		]
	}
], java.class.version=51.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.10.5, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, user.home=/Users/qiejinkai, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=false, user.name=qiejinkai, java.class.path=/Applications/ide/workspace/product/target/test-classes:/Applications/ide/workspace/product/target/classes:/Applications/ide/apache-tomcat-7.0.61/lib/annotations-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina-ant.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina-ha.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina-tribes.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina.jar:/Applications/ide/apache-tomcat-7.0.61/lib/ecj-4.4.2.jar:/Applications/ide/apache-tomcat-7.0.61/lib/el-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/jasper-el.jar:/Applications/ide/apache-tomcat-7.0.61/lib/jasper.jar:/Applications/ide/apache-tomcat-7.0.61/lib/jsp-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/servlet-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-coyote.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-dbcp.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-i18n-es.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-i18n-fr.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-i18n-ja.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-jdbc.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-util.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat7-websocket.jar:/Applications/ide/apache-tomcat-7.0.61/lib/websocket-api.jar:/Applications/ide/eclipse/plugins/org.junit_4.11.0.v201303080030/junit.jar:/Applications/ide/eclipse/plugins/org.hamcrest.core_1.3.0.v201303031735.jar:/Users/qiejinkai/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-context/4.2.3.RELEASE/spring-context-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-aop/4.2.3.RELEASE/spring-aop-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-beans/4.2.3.RELEASE/spring-beans-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-core/4.2.3.RELEASE/spring-core-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-expression/4.2.3.RELEASE/spring-expression-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-web/4.2.3.RELEASE/spring-web-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-webmvc/4.2.3.RELEASE/spring-webmvc-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-jdbc/4.2.3.RELEASE/spring-jdbc-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-test/4.2.3.RELEASE/spring-test-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-tx/4.2.3.RELEASE/spring-tx-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-orm/4.2.3.RELEASE/spring-orm-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/aspectj/aspectjweaver/1.8.4/aspectjweaver-1.8.4.jar:/Users/qiejinkai/.m2/repository/org/springframework/data/spring-data-redis/1.4.1.RELEASE/spring-data-redis-1.4.1.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-context-support/4.0.7.RELEASE/spring-context-support-4.0.7.RELEASE.jar:/Users/qiejinkai/.m2/repository/redis/clients/jedis/2.6.1/jedis-2.6.1.jar:/Users/qiejinkai/.m2/repository/org/springframework/session/spring-session/1.2.1.RELEASE/spring-session-1.2.1.RELEASE.jar:/Users/qiejinkai/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/qiejinkai/.m2/repository/org/apache/commons/commons-pool2/2.4.2/commons-pool2-2.4.2.jar:/Users/qiejinkai/.m2/repository/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/Users/qiejinkai/.m2/repository/org/mybatis/mybatis/3.2.8/mybatis-3.2.8.jar:/Users/qiejinkai/.m2/repository/com/google/code/gson/gson/2.3.1/gson-2.3.1.jar:/Users/qiejinkai/.m2/repository/mysql/mysql-connector-java/5.1.34/mysql-connector-java-5.1.34.jar:/Users/qiejinkai/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/Users/qiejinkai/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/Users/qiejinkai/.m2/repository/com/alibaba/druid/1.0.11/druid-1.0.11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/lib/tools.jar:/Users/qiejinkai/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/qiejinkai/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/qiejinkai/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-validator/5.2.0.Alpha1/hibernate-validator-5.2.0.Alpha1.jar:/Users/qiejinkai/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar:/Users/qiejinkai/.m2/repository/com/sun/mail/mailapi/1.5.2/mailapi-1.5.2.jar:/Users/qiejinkai/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/qiejinkai/.m2/repository/com/sun/mail/smtp/1.5.2/smtp-1.5.2.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-core/5.1.0.Final/hibernate-core-5.1.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/qiejinkai/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/qiejinkai/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-entitymanager/5.1.0.Final/hibernate-entitymanager-5.1.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-annotations/3.5.6-Final/hibernate-annotations-3.5.6-Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-ehcache/5.1.0.Final/hibernate-ehcache-5.1.0.Final.jar:/Users/qiejinkai/.m2/repository/net/sf/ehcache/ehcache/2.10.1/ehcache-2.10.1.jar:/Users/qiejinkai/.m2/repository/org/slf4j/slf4j-api/1.7.21/slf4j-api-1.7.21.jar:/Users/qiejinkai/.m2/repository/org/slf4j/slf4j-log4j12/1.7.21/slf4j-log4j12-1.7.21.jar:/Users/qiejinkai/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/qiejinkai/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/qiejinkai/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/qiejinkai/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/Users/qiejinkai/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Applications/ide/eclipse/configuration/org.eclipse.osgi/360/0/.cp/:/Applications/ide/eclipse/configuration/org.eclipse.osgi/359/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 57881 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test dao.hibernate.TestHibernateDao:testAdd, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.vm.info=mixed mode, java.version=1.7.0_79, java.ext.dirs=/Users/qiejinkai/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/classes, java.vendor=Oracle Corporation, file.separator=/, hibernate.hbm2ddl.auto=update, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeBig, sun.cpu.endian=little, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, sun.cpu.isalist=}
2016-08-02 00:05:03  [ main:769 ] - [ INFO ]  HV000001: Hibernate Validator 5.2.0.Alpha1
2016-08-02 00:05:03  [ main:780 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2016-08-02 00:05:03  [ main:782 ] - [ DEBUG ]  Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2016-08-02 00:05:03  [ main:798 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2016-08-02 00:05:03  [ main:800 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2016-08-02 00:05:03  [ main:845 ] - [ DEBUG ]  Not known whether passed class name [com.qjk.data.User] is safe
2016-08-02 00:05:03  [ main:845 ] - [ DEBUG ]  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.qjk.data.User
2016-08-02 00:05:03  [ main:899 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@7c44c1ad, groups=[Ljava.lang.Class;@6078498}, constraintType=GENERIC}.
2016-08-02 00:05:03  [ main:899 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@57921a3f, max=2147483647, groups=[Ljava.lang.Class;@38f94b03}, constraintType=GENERIC}.
2016-08-02 00:05:03  [ main:906 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@31bd8aa6, groups=[Ljava.lang.Class;@12d9b1cd}, constraintType=GENERIC}.
2016-08-02 00:05:03  [ main:906 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@12281366, max=2147483647, groups=[Ljava.lang.Class;@51196da}, constraintType=GENERIC}.
2016-08-02 00:05:03  [ main:908 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Pattern, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Pattern.message}, payload=[Ljava.lang.Class;@7031c0d7, flags=[Ljavax.validation.constraints.Pattern$Flag;@526b9ccc, regexp=.*, groups=[Ljava.lang.Class;@17033f5a}, constraintType=GENERIC}.
2016-08-02 00:05:03  [ main:909 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@56343983, groups=[Ljava.lang.Class;@7eabf3ab}, constraintType=GENERIC}.
2016-08-02 00:05:03  [ main:909 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@4b0aa085, max=2147483647, groups=[Ljava.lang.Class;@26b0a240}, constraintType=GENERIC}.
2016-08-02 00:05:03  [ main:943 ] - [ DEBUG ]  Skipping JACC integration as it was not enabled
2016-08-02 00:05:03  [ main:976 ] - [ DEBUG ]  Not known whether passed class name [com.qjk.data.User] is safe
2016-08-02 00:05:03  [ main:976 ] - [ DEBUG ]  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.qjk.data.User
2016-08-02 00:05:03  [ main:996 ] - [ DEBUG ]  Not known whether passed class name [com.qjk.data.User] is safe
2016-08-02 00:05:03  [ main:996 ] - [ DEBUG ]  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.qjk.data.User
2016-08-02 00:05:03  [ main:1070 ] - [ DEBUG ]  Static SQL for entity: com.qjk.data.User
2016-08-02 00:05:03  [ main:1070 ] - [ DEBUG ]   Version select: select uid from User where uid =?
2016-08-02 00:05:03  [ main:1070 ] - [ DEBUG ]   Snapshot select: select user_.uid, user_.email as email2_0_, user_.logo as logo3_0_, user_.nick as nick4_0_, user_.password as password5_0_, user_.phone as phone6_0_ from User user_ where user_.uid=?
2016-08-02 00:05:03  [ main:1071 ] - [ DEBUG ]   Insert 0: insert into User (email, logo, nick, password, phone, uid) values (?, ?, ?, ?, ?, ?)
2016-08-02 00:05:03  [ main:1071 ] - [ DEBUG ]   Update 0: update User set email=?, logo=?, nick=?, password=?, phone=? where uid=?
2016-08-02 00:05:03  [ main:1071 ] - [ DEBUG ]   Delete 0: delete from User where uid=?
2016-08-02 00:05:03  [ main:1094 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@468036e3]
2016-08-02 00:05:03  [ main:1095 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:03  [ main:1095 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:03  [ main:1095 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:03  [ main:1095 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:03  [ main:1096 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:03  [ main:1096 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:03  [ main:1109 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:03  [ main:1113 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:03  [ main:1115 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [NONE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:05:03  [ main:1116 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21fd31fd]
2016-08-02 00:05:03  [ main:1116 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:03  [ main:1116 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:03  [ main:1116 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:03  [ main:1116 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:03  [ main:1116 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:03  [ main:1116 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:03  [ main:1116 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:03  [ main:1117 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:03  [ main:1117 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [READ]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:05:03  [ main:1117 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aa5ea62]
2016-08-02 00:05:03  [ main:1117 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:03  [ main:1117 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:03  [ main:1117 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:03  [ main:1117 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:03  [ main:1117 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:03  [ main:1117 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:03  [ main:1117 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:03  [ main:1118 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:03  [ main:1118 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [UPGRADE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:05:03  [ main:1118 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b59dd6c]
2016-08-02 00:05:03  [ main:1118 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:03  [ main:1118 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:03  [ main:1118 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:03  [ main:1118 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:03  [ main:1118 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:03  [ main:1118 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:03  [ main:1119 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:03  [ main:1119 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:03  [ main:1119 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [UPGRADE_NOWAIT]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:05:03  [ main:1119 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9bfb48e]
2016-08-02 00:05:03  [ main:1119 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:03  [ main:1119 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:03  [ main:1120 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:03  [ main:1120 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:03  [ main:1120 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:03  [ main:1120 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:03  [ main:1120 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:03  [ main:1120 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:03  [ main:1120 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [UPGRADE_SKIPLOCKED]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:05:03  [ main:1121 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c5d6d3e]
2016-08-02 00:05:03  [ main:1121 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:03  [ main:1121 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:03  [ main:1121 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:03  [ main:1121 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:03  [ main:1121 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:03  [ main:1121 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:03  [ main:1121 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:03  [ main:1122 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:03  [ main:1122 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [FORCE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:05:03  [ main:1122 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ec8ef1e]
2016-08-02 00:05:03  [ main:1122 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:03  [ main:1122 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:03  [ main:1123 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:03  [ main:1123 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:03  [ main:1123 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:03  [ main:1123 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:03  [ main:1123 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:03  [ main:1124 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:03  [ main:1124 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [PESSIMISTIC_READ]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? lock in share mode
2016-08-02 00:05:03  [ main:1124 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22fc7015]
2016-08-02 00:05:03  [ main:1124 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:03  [ main:1124 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:03  [ main:1124 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:03  [ main:1125 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:03  [ main:1125 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:03  [ main:1125 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:03  [ main:1125 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:03  [ main:1125 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:03  [ main:1126 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [PESSIMISTIC_WRITE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:05:03  [ main:1126 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@273261ef]
2016-08-02 00:05:03  [ main:1126 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:03  [ main:1126 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:03  [ main:1126 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:03  [ main:1126 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:03  [ main:1126 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:03  [ main:1126 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:03  [ main:1126 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:03  [ main:1127 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:03  [ main:1127 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:05:03  [ main:1127 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23903e85]
2016-08-02 00:05:03  [ main:1127 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:03  [ main:1127 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:03  [ main:1127 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:03  [ main:1127 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:03  [ main:1127 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:03  [ main:1127 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:03  [ main:1127 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:03  [ main:1128 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:03  [ main:1128 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [OPTIMISTIC]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:05:03  [ main:1128 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40d08a8e]
2016-08-02 00:05:03  [ main:1128 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:03  [ main:1128 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:03  [ main:1128 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:03  [ main:1128 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:03  [ main:1128 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:03  [ main:1129 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:03  [ main:1129 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:03  [ main:1129 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:03  [ main:1129 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:05:03  [ main:1144 ] - [ DEBUG ]  Static select for action ACTION_MERGE on entity com.qjk.data.User: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:05:03  [ main:1145 ] - [ DEBUG ]  Static select for action ACTION_REFRESH on entity com.qjk.data.User: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:05:03  [ main:1145 ] - [ DEBUG ]  Instantiated session factory
2016-08-02 00:05:03  [ main:1186 ] - [ DEBUG ]  No alter strings for table : hibernate_sequence
2016-08-02 00:05:03  [ main:1209 ] - [ DEBUG ]  No alter strings for table : User
2016-08-02 00:05:03  [ main:1214 ] - [ DEBUG ]  No JtaPlatform was specified, checking resolver
2016-08-02 00:05:03  [ main:1215 ] - [ DEBUG ]  No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-08-02 00:05:03  [ main:1218 ] - [ DEBUG ]  Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-08-02 00:05:03  [ main:1219 ] - [ DEBUG ]  Checking 0 named HQL queries
2016-08-02 00:05:03  [ main:1219 ] - [ DEBUG ]  Checking 0 named SQL queries
2016-08-02 00:05:03  [ main:1221 ] - [ DEBUG ]  Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1c2bfb13
2016-08-02 00:05:03  [ main:1221 ] - [ DEBUG ]  Registering SessionFactory: 30189420-5b49-424f-842a-fc6cd80581e5 (<unnamed>)
2016-08-02 00:05:03  [ main:1221 ] - [ DEBUG ]  Not binding SessionFactory to JNDI, no JNDI name configured
2016-08-02 00:05:04  [ main:1681 ] - [ DEBUG ]  Statistics initialized [enabled=false]
2016-08-02 00:05:04  [ main:1686 ] - [ DEBUG ]  begin
2016-08-02 00:05:04  [ main:1697 ] - [ DEBUG ]  select next_val as id_val from hibernate_sequence for update
2016-08-02 00:05:04  [ main:1725 ] - [ DEBUG ]  {conn-10009, pstmt-20000} enter cache
2016-08-02 00:05:04  [ main:1725 ] - [ DEBUG ]  update hibernate_sequence set next_val= ? where next_val=?
2016-08-02 00:05:04  [ main:1727 ] - [ DEBUG ]  {conn-10009, pstmt-20001} enter cache
2016-08-02 00:05:04  [ main:1729 ] - [ DEBUG ]  Generated identifier: 26, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2016-08-02 00:05:04  [ main:1746 ] - [ DEBUG ]  committing
2016-08-02 00:05:04  [ main:1746 ] - [ DEBUG ]  Processing flush-time cascades
2016-08-02 00:05:04  [ main:1748 ] - [ DEBUG ]  Dirty checking collections
2016-08-02 00:05:04  [ main:1752 ] - [ DEBUG ]  Flushed: 1 insertions, 1 updates, 0 deletions to 1 objects
2016-08-02 00:05:04  [ main:1752 ] - [ DEBUG ]  Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2016-08-02 00:05:04  [ main:1753 ] - [ DEBUG ]  Listing entities:
2016-08-02 00:05:04  [ main:1753 ] - [ DEBUG ]  com.qjk.data.User{uid=26, logo=null, phone=null, nick=qiejinkai, email=wangzhehaose@sina.com, password=f24f2258b9bd04e405b347a1c3064206}
2016-08-02 00:05:04  [ main:1775 ] - [ DEBUG ]  insert into User (email, logo, nick, password, phone, uid) values (?, ?, ?, ?, ?, ?)
2016-08-02 00:05:04  [ main:1781 ] - [ DEBUG ]  {conn-10010, pstmt-20002} enter cache
2016-08-02 00:05:04  [ main:1783 ] - [ DEBUG ]  update User set email=?, logo=?, nick=?, password=?, phone=? where uid=?
2016-08-02 00:05:04  [ main:1785 ] - [ DEBUG ]  {conn-10010, pstmt-20003} enter cache
2016-08-02 00:05:04  [ main:1788 ] - [ DEBUG ]  HHH000420: Closing un-released batch
2016-08-02 00:05:04  [ Thread-3:1803 ] - [ DEBUG ]  HHH000031: Closing
2016-08-02 00:05:04  [ Thread-3:1803 ] - [ DEBUG ]  Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2016-08-02 00:05:04  [ Thread-3:1803 ] - [ DEBUG ]  Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2016-08-02 00:05:04  [ Thread-3:1805 ] - [ DEBUG ]  {conn-10009, pstmt-20000} exit cache
2016-08-02 00:05:04  [ Thread-3:1806 ] - [ DEBUG ]  {conn-10009, pstmt-20001} exit cache
2016-08-02 00:05:04  [ Thread-3:1806 ] - [ DEBUG ]  {conn-10010, pstmt-20002} exit cache
2016-08-02 00:05:04  [ Thread-3:1806 ] - [ DEBUG ]  {conn-10010, pstmt-20003} exit cache
2016-08-02 00:05:04  [ Thread-3:1807 ] - [ INFO ]  {dataSource-1} closed
2016-08-02 00:05:51  [ main:0 ] - [ INFO ]  {dataSource-1} inited
2016-08-02 00:05:51  [ main:50 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-08-02 00:05:51  [ main:61 ] - [ DEBUG ]  Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-08-02 00:05:51  [ main:63 ] - [ DEBUG ]  Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-08-02 00:05:51  [ main:66 ] - [ DEBUG ]  Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-08-02 00:05:51  [ main:165 ] - [ INFO ]  HHH000412: Hibernate Core {5.1.0.Final}
2016-08-02 00:05:51  [ main:166 ] - [ INFO ]  HHH000206: hibernate.properties not found
2016-08-02 00:05:51  [ main:167 ] - [ INFO ]  HHH000021: Bytecode provider name : javassist
2016-08-02 00:05:51  [ main:186 ] - [ DEBUG ]  Building session factory using internal StandardServiceRegistryBuilder
2016-08-02 00:05:51  [ main:205 ] - [ DEBUG ]  Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-08-02 00:05:51  [ main:205 ] - [ DEBUG ]  Building session factory using provided StandardServiceRegistry
2016-08-02 00:05:51  [ main:237 ] - [ DEBUG ]  Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-08-02 00:05:51  [ main:251 ] - [ INFO ]  HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-08-02 00:05:51  [ main:275 ] - [ DEBUG ]  Adding type registration boolean -> org.hibernate.type.BooleanType@67ed45da
2016-08-02 00:05:51  [ main:275 ] - [ DEBUG ]  Adding type registration boolean -> org.hibernate.type.BooleanType@67ed45da
2016-08-02 00:05:51  [ main:275 ] - [ DEBUG ]  Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@67ed45da
2016-08-02 00:05:51  [ main:276 ] - [ DEBUG ]  Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f399684
2016-08-02 00:05:51  [ main:279 ] - [ DEBUG ]  Adding type registration true_false -> org.hibernate.type.TrueFalseType@3cf53cd0
2016-08-02 00:05:51  [ main:280 ] - [ DEBUG ]  Adding type registration yes_no -> org.hibernate.type.YesNoType@2f998b7d
2016-08-02 00:05:51  [ main:281 ] - [ DEBUG ]  Adding type registration byte -> org.hibernate.type.ByteType@7f08eeac
2016-08-02 00:05:51  [ main:282 ] - [ DEBUG ]  Adding type registration byte -> org.hibernate.type.ByteType@7f08eeac
2016-08-02 00:05:51  [ main:282 ] - [ DEBUG ]  Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f08eeac
2016-08-02 00:05:51  [ main:283 ] - [ DEBUG ]  Adding type registration character -> org.hibernate.type.CharacterType@6e3220a
2016-08-02 00:05:51  [ main:283 ] - [ DEBUG ]  Adding type registration char -> org.hibernate.type.CharacterType@6e3220a
2016-08-02 00:05:51  [ main:283 ] - [ DEBUG ]  Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e3220a
2016-08-02 00:05:51  [ main:287 ] - [ DEBUG ]  Adding type registration short -> org.hibernate.type.ShortType@756a69a3
2016-08-02 00:05:51  [ main:287 ] - [ DEBUG ]  Adding type registration short -> org.hibernate.type.ShortType@756a69a3
2016-08-02 00:05:51  [ main:287 ] - [ DEBUG ]  Adding type registration java.lang.Short -> org.hibernate.type.ShortType@756a69a3
2016-08-02 00:05:51  [ main:290 ] - [ DEBUG ]  Adding type registration integer -> org.hibernate.type.IntegerType@4e3ecc02
2016-08-02 00:05:51  [ main:290 ] - [ DEBUG ]  Adding type registration int -> org.hibernate.type.IntegerType@4e3ecc02
2016-08-02 00:05:51  [ main:290 ] - [ DEBUG ]  Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4e3ecc02
2016-08-02 00:05:51  [ main:293 ] - [ DEBUG ]  Adding type registration long -> org.hibernate.type.LongType@6a2c4842
2016-08-02 00:05:51  [ main:293 ] - [ DEBUG ]  Adding type registration long -> org.hibernate.type.LongType@6a2c4842
2016-08-02 00:05:51  [ main:293 ] - [ DEBUG ]  Adding type registration java.lang.Long -> org.hibernate.type.LongType@6a2c4842
2016-08-02 00:05:51  [ main:295 ] - [ DEBUG ]  Adding type registration float -> org.hibernate.type.FloatType@7d7902b8
2016-08-02 00:05:51  [ main:295 ] - [ DEBUG ]  Adding type registration float -> org.hibernate.type.FloatType@7d7902b8
2016-08-02 00:05:51  [ main:296 ] - [ DEBUG ]  Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d7902b8
2016-08-02 00:05:51  [ main:297 ] - [ DEBUG ]  Adding type registration double -> org.hibernate.type.DoubleType@65d58516
2016-08-02 00:05:51  [ main:297 ] - [ DEBUG ]  Adding type registration double -> org.hibernate.type.DoubleType@65d58516
2016-08-02 00:05:51  [ main:298 ] - [ DEBUG ]  Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@65d58516
2016-08-02 00:05:51  [ main:299 ] - [ DEBUG ]  Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@795cd558
2016-08-02 00:05:51  [ main:300 ] - [ DEBUG ]  Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@795cd558
2016-08-02 00:05:51  [ main:301 ] - [ DEBUG ]  Adding type registration big_integer -> org.hibernate.type.BigIntegerType@24e4af4d
2016-08-02 00:05:51  [ main:301 ] - [ DEBUG ]  Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@24e4af4d
2016-08-02 00:05:51  [ main:302 ] - [ DEBUG ]  Adding type registration string -> org.hibernate.type.StringType@6a6ba168
2016-08-02 00:05:51  [ main:302 ] - [ DEBUG ]  Adding type registration java.lang.String -> org.hibernate.type.StringType@6a6ba168
2016-08-02 00:05:51  [ main:303 ] - [ DEBUG ]  Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4f6c1829
2016-08-02 00:05:51  [ main:304 ] - [ DEBUG ]  Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@67642bf5
2016-08-02 00:05:51  [ main:305 ] - [ DEBUG ]  Adding type registration url -> org.hibernate.type.UrlType@12c7e20a
2016-08-02 00:05:51  [ main:306 ] - [ DEBUG ]  Adding type registration java.net.URL -> org.hibernate.type.UrlType@12c7e20a
2016-08-02 00:05:51  [ main:307 ] - [ DEBUG ]  Adding type registration date -> org.hibernate.type.DateType@4ea2d2b0
2016-08-02 00:05:51  [ main:307 ] - [ DEBUG ]  Adding type registration java.sql.Date -> org.hibernate.type.DateType@4ea2d2b0
2016-08-02 00:05:51  [ main:309 ] - [ DEBUG ]  Adding type registration time -> org.hibernate.type.TimeType@7629a637
2016-08-02 00:05:51  [ main:309 ] - [ DEBUG ]  Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7629a637
2016-08-02 00:05:51  [ main:311 ] - [ DEBUG ]  Adding type registration timestamp -> org.hibernate.type.TimestampType@79e833ff
2016-08-02 00:05:51  [ main:311 ] - [ DEBUG ]  Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@79e833ff
2016-08-02 00:05:51  [ main:311 ] - [ DEBUG ]  Adding type registration java.util.Date -> org.hibernate.type.TimestampType@79e833ff
2016-08-02 00:05:51  [ main:312 ] - [ DEBUG ]  Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@612e0b82
2016-08-02 00:05:51  [ main:313 ] - [ DEBUG ]  Adding type registration calendar -> org.hibernate.type.CalendarType@5258c839
2016-08-02 00:05:51  [ main:313 ] - [ DEBUG ]  Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5258c839
2016-08-02 00:05:51  [ main:313 ] - [ DEBUG ]  Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5258c839
2016-08-02 00:05:51  [ main:314 ] - [ DEBUG ]  Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4c053972
2016-08-02 00:05:51  [ main:315 ] - [ DEBUG ]  Adding type registration locale -> org.hibernate.type.LocaleType@40e4d1b7
2016-08-02 00:05:51  [ main:315 ] - [ DEBUG ]  Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40e4d1b7
2016-08-02 00:05:51  [ main:316 ] - [ DEBUG ]  Adding type registration currency -> org.hibernate.type.CurrencyType@43a64562
2016-08-02 00:05:51  [ main:316 ] - [ DEBUG ]  Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@43a64562
2016-08-02 00:05:51  [ main:317 ] - [ DEBUG ]  Adding type registration timezone -> org.hibernate.type.TimeZoneType@d1c7b9e
2016-08-02 00:05:51  [ main:317 ] - [ DEBUG ]  Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@d1c7b9e
2016-08-02 00:05:51  [ main:318 ] - [ DEBUG ]  Adding type registration class -> org.hibernate.type.ClassType@1fed28ce
2016-08-02 00:05:51  [ main:318 ] - [ DEBUG ]  Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1fed28ce
2016-08-02 00:05:51  [ main:320 ] - [ DEBUG ]  Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@900d6e4
2016-08-02 00:05:51  [ main:320 ] - [ DEBUG ]  Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@900d6e4
2016-08-02 00:05:51  [ main:320 ] - [ DEBUG ]  Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1ac83687
2016-08-02 00:05:51  [ main:321 ] - [ DEBUG ]  Adding type registration binary -> org.hibernate.type.BinaryType@2dcb9c84
2016-08-02 00:05:51  [ main:322 ] - [ DEBUG ]  Adding type registration byte[] -> org.hibernate.type.BinaryType@2dcb9c84
2016-08-02 00:05:51  [ main:322 ] - [ DEBUG ]  Adding type registration [B -> org.hibernate.type.BinaryType@2dcb9c84
2016-08-02 00:05:51  [ main:323 ] - [ DEBUG ]  Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@260bb71d
2016-08-02 00:05:51  [ main:323 ] - [ DEBUG ]  Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@260bb71d
2016-08-02 00:05:51  [ main:323 ] - [ DEBUG ]  Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@260bb71d
2016-08-02 00:05:51  [ main:324 ] - [ DEBUG ]  Adding type registration image -> org.hibernate.type.ImageType@d862c40
2016-08-02 00:05:51  [ main:325 ] - [ DEBUG ]  Adding type registration characters -> org.hibernate.type.CharArrayType@79fbdc5a
2016-08-02 00:05:51  [ main:326 ] - [ DEBUG ]  Adding type registration char[] -> org.hibernate.type.CharArrayType@79fbdc5a
2016-08-02 00:05:51  [ main:326 ] - [ DEBUG ]  Adding type registration [C -> org.hibernate.type.CharArrayType@79fbdc5a
2016-08-02 00:05:51  [ main:327 ] - [ DEBUG ]  Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7e9b4e48
2016-08-02 00:05:51  [ main:328 ] - [ DEBUG ]  Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7e9b4e48
2016-08-02 00:05:51  [ main:328 ] - [ DEBUG ]  Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7e9b4e48
2016-08-02 00:05:51  [ main:329 ] - [ DEBUG ]  Adding type registration text -> org.hibernate.type.TextType@166649ad
2016-08-02 00:05:51  [ main:330 ] - [ DEBUG ]  Adding type registration ntext -> org.hibernate.type.NTextType@8aea957
2016-08-02 00:05:51  [ main:339 ] - [ DEBUG ]  Adding type registration blob -> org.hibernate.type.BlobType@3fb0ea5a
2016-08-02 00:05:51  [ main:339 ] - [ DEBUG ]  Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3fb0ea5a
2016-08-02 00:05:51  [ main:340 ] - [ DEBUG ]  Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3486113d
2016-08-02 00:05:51  [ main:350 ] - [ DEBUG ]  Adding type registration clob -> org.hibernate.type.ClobType@3e45f13
2016-08-02 00:05:51  [ main:350 ] - [ DEBUG ]  Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e45f13
2016-08-02 00:05:51  [ main:356 ] - [ DEBUG ]  Adding type registration nclob -> org.hibernate.type.NClobType@3f44dbd0
2016-08-02 00:05:51  [ main:356 ] - [ DEBUG ]  Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3f44dbd0
2016-08-02 00:05:51  [ main:357 ] - [ DEBUG ]  Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4e9e7777
2016-08-02 00:05:51  [ main:357 ] - [ DEBUG ]  Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@57887445
2016-08-02 00:05:51  [ main:359 ] - [ DEBUG ]  Adding type registration serializable -> org.hibernate.type.SerializableType@78eebeb3
2016-08-02 00:05:51  [ main:365 ] - [ DEBUG ]  Adding type registration object -> org.hibernate.type.ObjectType@2a94b0d4
2016-08-02 00:05:51  [ main:365 ] - [ DEBUG ]  Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2a94b0d4
2016-08-02 00:05:51  [ main:366 ] - [ DEBUG ]  Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1d194c1a
2016-08-02 00:05:51  [ main:366 ] - [ DEBUG ]  Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@67d34de2
2016-08-02 00:05:51  [ main:366 ] - [ DEBUG ]  Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@619e65ae
2016-08-02 00:05:51  [ main:366 ] - [ DEBUG ]  Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6625b493
2016-08-02 00:05:51  [ main:366 ] - [ DEBUG ]  Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@35725349
2016-08-02 00:05:51  [ main:367 ] - [ DEBUG ]  Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@64b9f908
2016-08-02 00:05:51  [ main:367 ] - [ DEBUG ]  Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d8cafe1
2016-08-02 00:05:51  [ main:367 ] - [ DEBUG ]  Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2f6f14f7
2016-08-02 00:05:52  [ main:402 ] - [ INFO ]  HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-08-02 00:05:52  [ main:434 ] - [ DEBUG ]  IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-08-02 00:05:52  [ main:442 ] - [ INFO ]  HHH000422: Disabling contextual LOB creation as connection was null
2016-08-02 00:05:52  [ main:482 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-08-02 00:05:52  [ main:483 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-08-02 00:05:52  [ main:484 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-08-02 00:05:52  [ main:484 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-08-02 00:05:52  [ main:484 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-08-02 00:05:52  [ main:486 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-08-02 00:05:52  [ main:487 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-08-02 00:05:52  [ main:489 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-08-02 00:05:52  [ main:490 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-08-02 00:05:52  [ main:491 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-08-02 00:05:52  [ main:492 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-08-02 00:05:52  [ main:493 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-08-02 00:05:52  [ main:493 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-08-02 00:05:52  [ main:494 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-08-02 00:05:52  [ main:530 ] - [ DEBUG ]  Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-08-02 00:05:52  [ main:552 ] - [ DEBUG ]  Binding entity from annotated class: com.qjk.data.User
2016-08-02 00:05:52  [ main:574 ] - [ DEBUG ]  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-08-02 00:05:52  [ main:582 ] - [ DEBUG ]  Import with entity name User
2016-08-02 00:05:52  [ main:589 ] - [ DEBUG ]  Bind entity com.qjk.data.User on table User
2016-08-02 00:05:52  [ main:625 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=uid, insertable=true, updatable=true, unique=false}
2016-08-02 00:05:52  [ main:631 ] - [ DEBUG ]  MetadataSourceProcessor property uid with lazy=false
2016-08-02 00:05:52  [ main:633 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:uid]
2016-08-02 00:05:52  [ main:634 ] - [ DEBUG ]  building SimpleValue for uid
2016-08-02 00:05:52  [ main:636 ] - [ DEBUG ]  Building property uid
2016-08-02 00:05:52  [ main:640 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=email, insertable=true, updatable=true, unique=false}
2016-08-02 00:05:52  [ main:640 ] - [ DEBUG ]  MetadataSourceProcessor property email with lazy=false
2016-08-02 00:05:52  [ main:641 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:email]
2016-08-02 00:05:52  [ main:641 ] - [ DEBUG ]  building SimpleValue for email
2016-08-02 00:05:52  [ main:641 ] - [ DEBUG ]  Building property email
2016-08-02 00:05:52  [ main:641 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=logo, insertable=true, updatable=true, unique=false}
2016-08-02 00:05:52  [ main:641 ] - [ DEBUG ]  MetadataSourceProcessor property logo with lazy=false
2016-08-02 00:05:52  [ main:641 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:logo]
2016-08-02 00:05:52  [ main:642 ] - [ DEBUG ]  building SimpleValue for logo
2016-08-02 00:05:52  [ main:642 ] - [ DEBUG ]  Building property logo
2016-08-02 00:05:52  [ main:642 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=nick, insertable=true, updatable=true, unique=false}
2016-08-02 00:05:52  [ main:642 ] - [ DEBUG ]  MetadataSourceProcessor property nick with lazy=false
2016-08-02 00:05:52  [ main:642 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:nick]
2016-08-02 00:05:52  [ main:642 ] - [ DEBUG ]  building SimpleValue for nick
2016-08-02 00:05:52  [ main:643 ] - [ DEBUG ]  Building property nick
2016-08-02 00:05:52  [ main:643 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=password, insertable=true, updatable=true, unique=false}
2016-08-02 00:05:52  [ main:643 ] - [ DEBUG ]  MetadataSourceProcessor property password with lazy=false
2016-08-02 00:05:52  [ main:643 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:password]
2016-08-02 00:05:52  [ main:643 ] - [ DEBUG ]  building SimpleValue for password
2016-08-02 00:05:52  [ main:644 ] - [ DEBUG ]  Building property password
2016-08-02 00:05:52  [ main:644 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2016-08-02 00:05:52  [ main:644 ] - [ DEBUG ]  MetadataSourceProcessor property phone with lazy=false
2016-08-02 00:05:52  [ main:644 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:phone]
2016-08-02 00:05:52  [ main:644 ] - [ DEBUG ]  building SimpleValue for phone
2016-08-02 00:05:52  [ main:645 ] - [ DEBUG ]  Building property phone
2016-08-02 00:05:52  [ main:647 ] - [ DEBUG ]  Starting fillSimpleValue for uid
2016-08-02 00:05:52  [ main:648 ] - [ DEBUG ]  Starting fillSimpleValue for email
2016-08-02 00:05:52  [ main:648 ] - [ DEBUG ]  Starting fillSimpleValue for logo
2016-08-02 00:05:52  [ main:648 ] - [ DEBUG ]  Starting fillSimpleValue for nick
2016-08-02 00:05:52  [ main:648 ] - [ DEBUG ]  Starting fillSimpleValue for password
2016-08-02 00:05:52  [ main:648 ] - [ DEBUG ]  Starting fillSimpleValue for phone
2016-08-02 00:05:52  [ main:649 ] - [ DEBUG ]  Forcing column [uid] to be non-null as it is part of the primary key for table [user]
2016-08-02 00:05:52  [ main:685 ] - [ DEBUG ]  Building session factory
2016-08-02 00:05:52  [ main:686 ] - [ DEBUG ]  SessionFactory name : null
2016-08-02 00:05:52  [ main:686 ] - [ DEBUG ]  Automatic flush during beforeCompletion(): disabled
2016-08-02 00:05:52  [ main:686 ] - [ DEBUG ]  Automatic session close at end of transaction: disabled
2016-08-02 00:05:52  [ main:686 ] - [ DEBUG ]  Statistics: disabled
2016-08-02 00:05:52  [ main:686 ] - [ DEBUG ]  Deleted entity synthetic identifier rollback: disabled
2016-08-02 00:05:52  [ main:686 ] - [ DEBUG ]  Default entity-mode: pojo
2016-08-02 00:05:52  [ main:686 ] - [ DEBUG ]  Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-08-02 00:05:52  [ main:686 ] - [ DEBUG ]  Allow initialization of lazy state outside session : disabled
2016-08-02 00:05:52  [ main:687 ] - [ DEBUG ]  Using BatchFetchStyle : LEGACY
2016-08-02 00:05:52  [ main:687 ] - [ DEBUG ]  Default batch fetch size: -1
2016-08-02 00:05:52  [ main:687 ] - [ DEBUG ]  Maximum outer join fetch depth: 2
2016-08-02 00:05:52  [ main:687 ] - [ DEBUG ]  Default null ordering: NONE
2016-08-02 00:05:52  [ main:687 ] - [ DEBUG ]  Order SQL updates by primary key: disabled
2016-08-02 00:05:52  [ main:687 ] - [ DEBUG ]  Order SQL inserts for batching: disabled
2016-08-02 00:05:52  [ main:687 ] - [ DEBUG ]  multi-tenancy strategy : NONE
2016-08-02 00:05:52  [ main:687 ] - [ DEBUG ]  JTA Track by Thread: enabled
2016-08-02 00:05:52  [ main:688 ] - [ DEBUG ]  Query language substitutions: {}
2016-08-02 00:05:52  [ main:688 ] - [ DEBUG ]  JPA query language strict compliance: disabled
2016-08-02 00:05:52  [ main:688 ] - [ DEBUG ]  Named query checking : enabled
2016-08-02 00:05:52  [ main:688 ] - [ DEBUG ]  Second-level cache: enabled
2016-08-02 00:05:52  [ main:688 ] - [ DEBUG ]  Second-level query cache: disabled
2016-08-02 00:05:52  [ main:688 ] - [ DEBUG ]  Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@69470e44
2016-08-02 00:05:52  [ main:688 ] - [ DEBUG ]  Second-level cache region prefix: null
2016-08-02 00:05:52  [ main:688 ] - [ DEBUG ]  Optimize second-level cache for minimal puts: disabled
2016-08-02 00:05:52  [ main:688 ] - [ DEBUG ]  Structured second-level cache entries: disabled
2016-08-02 00:05:52  [ main:689 ] - [ DEBUG ]  Second-level cache direct-reference entries: disabled
2016-08-02 00:05:52  [ main:689 ] - [ DEBUG ]  Automatic eviction of collection cache: disabled
2016-08-02 00:05:52  [ main:689 ] - [ DEBUG ]  JDBC batch size: 0
2016-08-02 00:05:52  [ main:689 ] - [ DEBUG ]  JDBC batch updates for versioned data: enabled
2016-08-02 00:05:52  [ main:689 ] - [ DEBUG ]  Scrollable result sets: disabled
2016-08-02 00:05:52  [ main:689 ] - [ DEBUG ]  Wrap result sets: disabled
2016-08-02 00:05:52  [ main:689 ] - [ DEBUG ]  JDBC3 getGeneratedKeys(): disabled
2016-08-02 00:05:52  [ main:689 ] - [ DEBUG ]  JDBC result set fetch size: null
2016-08-02 00:05:52  [ main:689 ] - [ DEBUG ]  Connection release mode: ON_CLOSE
2016-08-02 00:05:52  [ main:689 ] - [ DEBUG ]  Generate SQL with comments: disabled
2016-08-02 00:05:52  [ main:741 ] - [ DEBUG ]  Session factory constructed with filter configurations : {}
2016-08-02 00:05:52  [ main:745 ] - [ DEBUG ]  Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib, java.vm.version=24.79-b02, gopherProxySet=false, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@50ae0624, hibernate.temp.use_jdbc_metadata_defaults=false, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@20e90906], user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/Applications/ide/workspace/product, java.runtime.version=1.7.0_79-b15, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/endorsed, os.arch=x86_64, java.io.tmpdir=/var/folders/hm/gtyh2n810gb6wd9xk127pzt00000gn/T/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Mac OS X, sun.jnu.encoding=UTF-8, java.library.path=/Users/qiejinkai/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., hibernate.connection.datasource={
	CreateTime:"2016-08-02 00:05:51",
	ActiveCount:0,
	PoolingCount:10,
	CreateCount:10,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
		{ID:1360350941, ConnectTime:"2016-08-02 00:05:51", UseCount:0, LastActiveTime:"2016-08-02 00:05:51"},
		{ID:1307359425, ConnectTime:"2016-08-02 00:05:51", UseCount:0, LastActiveTime:"2016-08-02 00:05:51"},
		{ID:1884663518, ConnectTime:"2016-08-02 00:05:51", UseCount:0, LastActiveTime:"2016-08-02 00:05:51"},
		{ID:155953776, ConnectTime:"2016-08-02 00:05:51", UseCount:0, LastActiveTime:"2016-08-02 00:05:51"},
		{ID:1185063892, ConnectTime:"2016-08-02 00:05:51", UseCount:0, LastActiveTime:"2016-08-02 00:05:51"},
		{ID:1605490566, ConnectTime:"2016-08-02 00:05:51", UseCount:0, LastActiveTime:"2016-08-02 00:05:51"},
		{ID:347918207, ConnectTime:"2016-08-02 00:05:51", UseCount:0, LastActiveTime:"2016-08-02 00:05:51"},
		{ID:2010817915, ConnectTime:"2016-08-02 00:05:51", UseCount:0, LastActiveTime:"2016-08-02 00:05:51"},
		{ID:866544566, ConnectTime:"2016-08-02 00:05:51", UseCount:0, LastActiveTime:"2016-08-02 00:05:51"},
		{ID:1927910455, ConnectTime:"2016-08-02 00:05:51", UseCount:0, LastActiveTime:"2016-08-02 00:05:51"}
	]
}

[
	{
	ID:1360350941, 
	poolStatements:[
		]
	},
	{
	ID:1307359425, 
	poolStatements:[
		]
	},
	{
	ID:1884663518, 
	poolStatements:[
		]
	},
	{
	ID:155953776, 
	poolStatements:[
		]
	},
	{
	ID:1185063892, 
	poolStatements:[
		]
	},
	{
	ID:1605490566, 
	poolStatements:[
		]
	},
	{
	ID:347918207, 
	poolStatements:[
		]
	},
	{
	ID:2010817915, 
	poolStatements:[
		]
	},
	{
	ID:866544566, 
	poolStatements:[
		]
	},
	{
	ID:1927910455, 
	poolStatements:[
		]
	}
], java.class.version=51.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.10.5, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, user.home=/Users/qiejinkai, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=false, user.name=qiejinkai, java.class.path=/Applications/ide/workspace/product/target/test-classes:/Applications/ide/workspace/product/target/classes:/Applications/ide/apache-tomcat-7.0.61/lib/annotations-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina-ant.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina-ha.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina-tribes.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina.jar:/Applications/ide/apache-tomcat-7.0.61/lib/ecj-4.4.2.jar:/Applications/ide/apache-tomcat-7.0.61/lib/el-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/jasper-el.jar:/Applications/ide/apache-tomcat-7.0.61/lib/jasper.jar:/Applications/ide/apache-tomcat-7.0.61/lib/jsp-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/servlet-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-coyote.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-dbcp.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-i18n-es.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-i18n-fr.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-i18n-ja.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-jdbc.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-util.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat7-websocket.jar:/Applications/ide/apache-tomcat-7.0.61/lib/websocket-api.jar:/Applications/ide/eclipse/plugins/org.junit_4.11.0.v201303080030/junit.jar:/Applications/ide/eclipse/plugins/org.hamcrest.core_1.3.0.v201303031735.jar:/Users/qiejinkai/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-context/4.2.3.RELEASE/spring-context-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-aop/4.2.3.RELEASE/spring-aop-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-beans/4.2.3.RELEASE/spring-beans-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-core/4.2.3.RELEASE/spring-core-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-expression/4.2.3.RELEASE/spring-expression-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-web/4.2.3.RELEASE/spring-web-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-webmvc/4.2.3.RELEASE/spring-webmvc-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-jdbc/4.2.3.RELEASE/spring-jdbc-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-test/4.2.3.RELEASE/spring-test-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-tx/4.2.3.RELEASE/spring-tx-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-orm/4.2.3.RELEASE/spring-orm-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/aspectj/aspectjweaver/1.8.4/aspectjweaver-1.8.4.jar:/Users/qiejinkai/.m2/repository/org/springframework/data/spring-data-redis/1.4.1.RELEASE/spring-data-redis-1.4.1.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-context-support/4.0.7.RELEASE/spring-context-support-4.0.7.RELEASE.jar:/Users/qiejinkai/.m2/repository/redis/clients/jedis/2.6.1/jedis-2.6.1.jar:/Users/qiejinkai/.m2/repository/org/springframework/session/spring-session/1.2.1.RELEASE/spring-session-1.2.1.RELEASE.jar:/Users/qiejinkai/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/qiejinkai/.m2/repository/org/apache/commons/commons-pool2/2.4.2/commons-pool2-2.4.2.jar:/Users/qiejinkai/.m2/repository/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/Users/qiejinkai/.m2/repository/org/mybatis/mybatis/3.2.8/mybatis-3.2.8.jar:/Users/qiejinkai/.m2/repository/com/google/code/gson/gson/2.3.1/gson-2.3.1.jar:/Users/qiejinkai/.m2/repository/mysql/mysql-connector-java/5.1.34/mysql-connector-java-5.1.34.jar:/Users/qiejinkai/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/Users/qiejinkai/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/Users/qiejinkai/.m2/repository/com/alibaba/druid/1.0.11/druid-1.0.11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/lib/tools.jar:/Users/qiejinkai/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/qiejinkai/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/qiejinkai/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-validator/5.2.0.Alpha1/hibernate-validator-5.2.0.Alpha1.jar:/Users/qiejinkai/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar:/Users/qiejinkai/.m2/repository/com/sun/mail/mailapi/1.5.2/mailapi-1.5.2.jar:/Users/qiejinkai/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/qiejinkai/.m2/repository/com/sun/mail/smtp/1.5.2/smtp-1.5.2.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-core/5.1.0.Final/hibernate-core-5.1.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/qiejinkai/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/qiejinkai/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-entitymanager/5.1.0.Final/hibernate-entitymanager-5.1.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-annotations/3.5.6-Final/hibernate-annotations-3.5.6-Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-ehcache/5.1.0.Final/hibernate-ehcache-5.1.0.Final.jar:/Users/qiejinkai/.m2/repository/net/sf/ehcache/ehcache/2.10.1/ehcache-2.10.1.jar:/Users/qiejinkai/.m2/repository/org/slf4j/slf4j-api/1.7.21/slf4j-api-1.7.21.jar:/Users/qiejinkai/.m2/repository/org/slf4j/slf4j-log4j12/1.7.21/slf4j-log4j12-1.7.21.jar:/Users/qiejinkai/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/qiejinkai/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/qiejinkai/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/qiejinkai/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/Users/qiejinkai/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Applications/ide/eclipse/configuration/org.eclipse.osgi/360/0/.cp/:/Applications/ide/eclipse/configuration/org.eclipse.osgi/359/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 57901 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test dao.hibernate.TestHibernateDao:testAdd, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.vm.info=mixed mode, java.version=1.7.0_79, java.ext.dirs=/Users/qiejinkai/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/classes, java.vendor=Oracle Corporation, file.separator=/, hibernate.hbm2ddl.auto=update, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeBig, sun.cpu.endian=little, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, sun.cpu.isalist=}
2016-08-02 00:05:52  [ main:780 ] - [ INFO ]  HV000001: Hibernate Validator 5.2.0.Alpha1
2016-08-02 00:05:52  [ main:792 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2016-08-02 00:05:52  [ main:794 ] - [ DEBUG ]  Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2016-08-02 00:05:52  [ main:807 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2016-08-02 00:05:52  [ main:809 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2016-08-02 00:05:52  [ main:860 ] - [ DEBUG ]  Not known whether passed class name [com.qjk.data.User] is safe
2016-08-02 00:05:52  [ main:860 ] - [ DEBUG ]  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.qjk.data.User
2016-08-02 00:05:52  [ main:912 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@7c44c1ad, groups=[Ljava.lang.Class;@6078498}, constraintType=GENERIC}.
2016-08-02 00:05:52  [ main:912 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@57921a3f, max=2147483647, groups=[Ljava.lang.Class;@38f94b03}, constraintType=GENERIC}.
2016-08-02 00:05:52  [ main:919 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@31bd8aa6, groups=[Ljava.lang.Class;@12d9b1cd}, constraintType=GENERIC}.
2016-08-02 00:05:52  [ main:920 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@12281366, max=2147483647, groups=[Ljava.lang.Class;@51196da}, constraintType=GENERIC}.
2016-08-02 00:05:52  [ main:923 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Pattern, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Pattern.message}, payload=[Ljava.lang.Class;@7031c0d7, flags=[Ljavax.validation.constraints.Pattern$Flag;@526b9ccc, regexp=.*, groups=[Ljava.lang.Class;@17033f5a}, constraintType=GENERIC}.
2016-08-02 00:05:52  [ main:923 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@56343983, groups=[Ljava.lang.Class;@7eabf3ab}, constraintType=GENERIC}.
2016-08-02 00:05:52  [ main:924 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@4b0aa085, max=2147483647, groups=[Ljava.lang.Class;@26b0a240}, constraintType=GENERIC}.
2016-08-02 00:05:52  [ main:957 ] - [ DEBUG ]  Skipping JACC integration as it was not enabled
2016-08-02 00:05:52  [ main:990 ] - [ DEBUG ]  Not known whether passed class name [com.qjk.data.User] is safe
2016-08-02 00:05:52  [ main:990 ] - [ DEBUG ]  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.qjk.data.User
2016-08-02 00:05:52  [ main:1009 ] - [ DEBUG ]  Not known whether passed class name [com.qjk.data.User] is safe
2016-08-02 00:05:52  [ main:1009 ] - [ DEBUG ]  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.qjk.data.User
2016-08-02 00:05:52  [ main:1078 ] - [ DEBUG ]  Static SQL for entity: com.qjk.data.User
2016-08-02 00:05:52  [ main:1078 ] - [ DEBUG ]   Version select: select uid from User where uid =?
2016-08-02 00:05:52  [ main:1078 ] - [ DEBUG ]   Snapshot select: select user_.uid, user_.email as email2_0_, user_.logo as logo3_0_, user_.nick as nick4_0_, user_.password as password5_0_, user_.phone as phone6_0_ from User user_ where user_.uid=?
2016-08-02 00:05:52  [ main:1078 ] - [ DEBUG ]   Insert 0: insert into User (email, logo, nick, password, phone, uid) values (?, ?, ?, ?, ?, ?)
2016-08-02 00:05:52  [ main:1078 ] - [ DEBUG ]   Update 0: update User set email=?, logo=?, nick=?, password=?, phone=? where uid=?
2016-08-02 00:05:52  [ main:1079 ] - [ DEBUG ]   Delete 0: delete from User where uid=?
2016-08-02 00:05:52  [ main:1108 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@468036e3]
2016-08-02 00:05:52  [ main:1110 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:52  [ main:1110 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:52  [ main:1110 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:52  [ main:1110 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:52  [ main:1110 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:52  [ main:1110 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:52  [ main:1125 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:52  [ main:1129 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:52  [ main:1131 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [NONE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:05:52  [ main:1131 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21fd31fd]
2016-08-02 00:05:52  [ main:1132 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:52  [ main:1132 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:52  [ main:1132 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:52  [ main:1132 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:52  [ main:1132 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:52  [ main:1132 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:52  [ main:1132 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:52  [ main:1132 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:52  [ main:1133 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [READ]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:05:52  [ main:1133 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aa5ea62]
2016-08-02 00:05:52  [ main:1133 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:52  [ main:1133 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:52  [ main:1133 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:52  [ main:1133 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:52  [ main:1133 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:52  [ main:1133 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:52  [ main:1133 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:52  [ main:1134 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:52  [ main:1134 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [UPGRADE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:05:52  [ main:1134 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b59dd6c]
2016-08-02 00:05:52  [ main:1134 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:52  [ main:1134 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:52  [ main:1134 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:52  [ main:1134 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:52  [ main:1134 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:52  [ main:1134 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:52  [ main:1135 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:52  [ main:1135 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:52  [ main:1135 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [UPGRADE_NOWAIT]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:05:52  [ main:1135 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9bfb48e]
2016-08-02 00:05:52  [ main:1135 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:52  [ main:1136 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:52  [ main:1136 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:52  [ main:1136 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:52  [ main:1136 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:52  [ main:1136 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:52  [ main:1136 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:52  [ main:1136 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:52  [ main:1136 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [UPGRADE_SKIPLOCKED]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:05:52  [ main:1137 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c5d6d3e]
2016-08-02 00:05:52  [ main:1137 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:52  [ main:1137 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:52  [ main:1137 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:52  [ main:1137 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:52  [ main:1137 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:52  [ main:1137 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:52  [ main:1137 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:52  [ main:1137 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:52  [ main:1138 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [FORCE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:05:52  [ main:1138 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ec8ef1e]
2016-08-02 00:05:52  [ main:1138 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:52  [ main:1138 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:52  [ main:1138 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:52  [ main:1138 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:52  [ main:1138 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:52  [ main:1138 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:52  [ main:1138 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:52  [ main:1139 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:52  [ main:1139 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [PESSIMISTIC_READ]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? lock in share mode
2016-08-02 00:05:52  [ main:1139 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22fc7015]
2016-08-02 00:05:52  [ main:1139 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:52  [ main:1139 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:52  [ main:1139 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:52  [ main:1139 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:52  [ main:1139 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:52  [ main:1139 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:52  [ main:1140 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:52  [ main:1140 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:52  [ main:1140 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [PESSIMISTIC_WRITE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:05:52  [ main:1140 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@273261ef]
2016-08-02 00:05:52  [ main:1140 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:52  [ main:1140 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:52  [ main:1140 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:52  [ main:1140 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:52  [ main:1140 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:52  [ main:1140 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:52  [ main:1141 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:52  [ main:1141 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:52  [ main:1141 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:05:52  [ main:1141 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23903e85]
2016-08-02 00:05:52  [ main:1141 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:52  [ main:1141 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:52  [ main:1141 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:52  [ main:1141 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:52  [ main:1141 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:52  [ main:1141 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:52  [ main:1142 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:52  [ main:1142 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:52  [ main:1142 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [OPTIMISTIC]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:05:52  [ main:1142 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40d08a8e]
2016-08-02 00:05:52  [ main:1142 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:05:52  [ main:1142 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:05:52  [ main:1142 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:05:52  [ main:1143 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:05:52  [ main:1143 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:05:52  [ main:1143 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:05:52  [ main:1143 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:05:52  [ main:1143 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:05:52  [ main:1143 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:05:52  [ main:1160 ] - [ DEBUG ]  Static select for action ACTION_MERGE on entity com.qjk.data.User: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:05:52  [ main:1160 ] - [ DEBUG ]  Static select for action ACTION_REFRESH on entity com.qjk.data.User: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:05:52  [ main:1160 ] - [ DEBUG ]  Instantiated session factory
2016-08-02 00:05:52  [ main:1207 ] - [ DEBUG ]  No alter strings for table : hibernate_sequence
2016-08-02 00:05:52  [ main:1226 ] - [ DEBUG ]  No alter strings for table : User
2016-08-02 00:05:52  [ main:1231 ] - [ DEBUG ]  No JtaPlatform was specified, checking resolver
2016-08-02 00:05:52  [ main:1231 ] - [ DEBUG ]  No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-08-02 00:05:52  [ main:1234 ] - [ DEBUG ]  Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-08-02 00:05:52  [ main:1236 ] - [ DEBUG ]  Checking 0 named HQL queries
2016-08-02 00:05:52  [ main:1236 ] - [ DEBUG ]  Checking 0 named SQL queries
2016-08-02 00:05:52  [ main:1238 ] - [ DEBUG ]  Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1c2bfb13
2016-08-02 00:05:52  [ main:1238 ] - [ DEBUG ]  Registering SessionFactory: beec32bb-87b5-4a0e-a8bd-2387dfeebe23 (<unnamed>)
2016-08-02 00:05:52  [ main:1238 ] - [ DEBUG ]  Not binding SessionFactory to JNDI, no JNDI name configured
2016-08-02 00:05:53  [ main:1685 ] - [ DEBUG ]  Statistics initialized [enabled=false]
2016-08-02 00:05:53  [ main:1689 ] - [ DEBUG ]  begin
2016-08-02 00:05:53  [ main:1702 ] - [ DEBUG ]  select next_val as id_val from hibernate_sequence for update
2016-08-02 00:05:53  [ main:1742 ] - [ DEBUG ]  {conn-10009, pstmt-20000} enter cache
2016-08-02 00:05:53  [ main:1742 ] - [ DEBUG ]  update hibernate_sequence set next_val= ? where next_val=?
2016-08-02 00:05:53  [ main:1744 ] - [ DEBUG ]  {conn-10009, pstmt-20001} enter cache
2016-08-02 00:05:53  [ main:1746 ] - [ DEBUG ]  Generated identifier: 27, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2016-08-02 00:05:53  [ main:1759 ] - [ DEBUG ]  rolling back
2016-08-02 00:05:53  [ Thread-3:1780 ] - [ DEBUG ]  HHH000031: Closing
2016-08-02 00:05:53  [ Thread-3:1780 ] - [ DEBUG ]  Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2016-08-02 00:05:53  [ Thread-3:1780 ] - [ DEBUG ]  Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2016-08-02 00:05:53  [ Thread-3:1783 ] - [ DEBUG ]  {conn-10009, pstmt-20000} exit cache
2016-08-02 00:05:53  [ Thread-3:1783 ] - [ DEBUG ]  {conn-10009, pstmt-20001} exit cache
2016-08-02 00:05:53  [ Thread-3:1784 ] - [ INFO ]  {dataSource-1} closed
2016-08-02 00:06:39  [ main:0 ] - [ INFO ]  {dataSource-1} inited
2016-08-02 00:06:39  [ main:54 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-08-02 00:06:39  [ main:66 ] - [ DEBUG ]  Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-08-02 00:06:39  [ main:69 ] - [ DEBUG ]  Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-08-02 00:06:39  [ main:74 ] - [ DEBUG ]  Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-08-02 00:06:39  [ main:193 ] - [ INFO ]  HHH000412: Hibernate Core {5.1.0.Final}
2016-08-02 00:06:39  [ main:204 ] - [ INFO ]  HHH000206: hibernate.properties not found
2016-08-02 00:06:39  [ main:205 ] - [ INFO ]  HHH000021: Bytecode provider name : javassist
2016-08-02 00:06:40  [ main:228 ] - [ DEBUG ]  Building session factory using internal StandardServiceRegistryBuilder
2016-08-02 00:06:40  [ main:236 ] - [ DEBUG ]  Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-08-02 00:06:40  [ main:236 ] - [ DEBUG ]  Building session factory using provided StandardServiceRegistry
2016-08-02 00:06:40  [ main:271 ] - [ DEBUG ]  Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-08-02 00:06:40  [ main:282 ] - [ INFO ]  HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-08-02 00:06:40  [ main:309 ] - [ DEBUG ]  Adding type registration boolean -> org.hibernate.type.BooleanType@39badcaa
2016-08-02 00:06:40  [ main:309 ] - [ DEBUG ]  Adding type registration boolean -> org.hibernate.type.BooleanType@39badcaa
2016-08-02 00:06:40  [ main:309 ] - [ DEBUG ]  Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39badcaa
2016-08-02 00:06:40  [ main:312 ] - [ DEBUG ]  Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@736f59d6
2016-08-02 00:06:40  [ main:315 ] - [ DEBUG ]  Adding type registration true_false -> org.hibernate.type.TrueFalseType@5fbfcb1c
2016-08-02 00:06:40  [ main:315 ] - [ DEBUG ]  Adding type registration yes_no -> org.hibernate.type.YesNoType@86b9af4
2016-08-02 00:06:40  [ main:317 ] - [ DEBUG ]  Adding type registration byte -> org.hibernate.type.ByteType@7898f56c
2016-08-02 00:06:40  [ main:317 ] - [ DEBUG ]  Adding type registration byte -> org.hibernate.type.ByteType@7898f56c
2016-08-02 00:06:40  [ main:318 ] - [ DEBUG ]  Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7898f56c
2016-08-02 00:06:40  [ main:319 ] - [ DEBUG ]  Adding type registration character -> org.hibernate.type.CharacterType@3a23f18d
2016-08-02 00:06:40  [ main:319 ] - [ DEBUG ]  Adding type registration char -> org.hibernate.type.CharacterType@3a23f18d
2016-08-02 00:06:40  [ main:319 ] - [ DEBUG ]  Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3a23f18d
2016-08-02 00:06:40  [ main:322 ] - [ DEBUG ]  Adding type registration short -> org.hibernate.type.ShortType@5f97cfcb
2016-08-02 00:06:40  [ main:323 ] - [ DEBUG ]  Adding type registration short -> org.hibernate.type.ShortType@5f97cfcb
2016-08-02 00:06:40  [ main:323 ] - [ DEBUG ]  Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5f97cfcb
2016-08-02 00:06:40  [ main:325 ] - [ DEBUG ]  Adding type registration integer -> org.hibernate.type.IntegerType@7167baf3
2016-08-02 00:06:40  [ main:325 ] - [ DEBUG ]  Adding type registration int -> org.hibernate.type.IntegerType@7167baf3
2016-08-02 00:06:40  [ main:325 ] - [ DEBUG ]  Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7167baf3
2016-08-02 00:06:40  [ main:327 ] - [ DEBUG ]  Adding type registration long -> org.hibernate.type.LongType@356eb442
2016-08-02 00:06:40  [ main:327 ] - [ DEBUG ]  Adding type registration long -> org.hibernate.type.LongType@356eb442
2016-08-02 00:06:40  [ main:327 ] - [ DEBUG ]  Adding type registration java.lang.Long -> org.hibernate.type.LongType@356eb442
2016-08-02 00:06:40  [ main:329 ] - [ DEBUG ]  Adding type registration float -> org.hibernate.type.FloatType@238ac8bf
2016-08-02 00:06:40  [ main:329 ] - [ DEBUG ]  Adding type registration float -> org.hibernate.type.FloatType@238ac8bf
2016-08-02 00:06:40  [ main:329 ] - [ DEBUG ]  Adding type registration java.lang.Float -> org.hibernate.type.FloatType@238ac8bf
2016-08-02 00:06:40  [ main:331 ] - [ DEBUG ]  Adding type registration double -> org.hibernate.type.DoubleType@48af77fc
2016-08-02 00:06:40  [ main:331 ] - [ DEBUG ]  Adding type registration double -> org.hibernate.type.DoubleType@48af77fc
2016-08-02 00:06:40  [ main:332 ] - [ DEBUG ]  Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@48af77fc
2016-08-02 00:06:40  [ main:333 ] - [ DEBUG ]  Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@655935b0
2016-08-02 00:06:40  [ main:334 ] - [ DEBUG ]  Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@655935b0
2016-08-02 00:06:40  [ main:335 ] - [ DEBUG ]  Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b95fbd6
2016-08-02 00:06:40  [ main:335 ] - [ DEBUG ]  Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b95fbd6
2016-08-02 00:06:40  [ main:336 ] - [ DEBUG ]  Adding type registration string -> org.hibernate.type.StringType@13c6e617
2016-08-02 00:06:40  [ main:336 ] - [ DEBUG ]  Adding type registration java.lang.String -> org.hibernate.type.StringType@13c6e617
2016-08-02 00:06:40  [ main:337 ] - [ DEBUG ]  Adding type registration nstring -> org.hibernate.type.StringNVarcharType@79bd8a7f
2016-08-02 00:06:40  [ main:338 ] - [ DEBUG ]  Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4852d9e6
2016-08-02 00:06:40  [ main:339 ] - [ DEBUG ]  Adding type registration url -> org.hibernate.type.UrlType@55ca6626
2016-08-02 00:06:40  [ main:339 ] - [ DEBUG ]  Adding type registration java.net.URL -> org.hibernate.type.UrlType@55ca6626
2016-08-02 00:06:40  [ main:341 ] - [ DEBUG ]  Adding type registration date -> org.hibernate.type.DateType@27c28e4e
2016-08-02 00:06:40  [ main:342 ] - [ DEBUG ]  Adding type registration java.sql.Date -> org.hibernate.type.DateType@27c28e4e
2016-08-02 00:06:40  [ main:344 ] - [ DEBUG ]  Adding type registration time -> org.hibernate.type.TimeType@1f239c6c
2016-08-02 00:06:40  [ main:344 ] - [ DEBUG ]  Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1f239c6c
2016-08-02 00:06:40  [ main:345 ] - [ DEBUG ]  Adding type registration timestamp -> org.hibernate.type.TimestampType@75e528fd
2016-08-02 00:06:40  [ main:345 ] - [ DEBUG ]  Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@75e528fd
2016-08-02 00:06:40  [ main:346 ] - [ DEBUG ]  Adding type registration java.util.Date -> org.hibernate.type.TimestampType@75e528fd
2016-08-02 00:06:40  [ main:347 ] - [ DEBUG ]  Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@23bd2155
2016-08-02 00:06:40  [ main:348 ] - [ DEBUG ]  Adding type registration calendar -> org.hibernate.type.CalendarType@79b249ae
2016-08-02 00:06:40  [ main:349 ] - [ DEBUG ]  Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@79b249ae
2016-08-02 00:06:40  [ main:349 ] - [ DEBUG ]  Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@79b249ae
2016-08-02 00:06:40  [ main:349 ] - [ DEBUG ]  Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@e8b299c
2016-08-02 00:06:40  [ main:351 ] - [ DEBUG ]  Adding type registration locale -> org.hibernate.type.LocaleType@335909e2
2016-08-02 00:06:40  [ main:351 ] - [ DEBUG ]  Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@335909e2
2016-08-02 00:06:40  [ main:352 ] - [ DEBUG ]  Adding type registration currency -> org.hibernate.type.CurrencyType@11797e27
2016-08-02 00:06:40  [ main:352 ] - [ DEBUG ]  Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@11797e27
2016-08-02 00:06:40  [ main:353 ] - [ DEBUG ]  Adding type registration timezone -> org.hibernate.type.TimeZoneType@5554ca01
2016-08-02 00:06:40  [ main:354 ] - [ DEBUG ]  Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5554ca01
2016-08-02 00:06:40  [ main:354 ] - [ DEBUG ]  Adding type registration class -> org.hibernate.type.ClassType@14ea6da9
2016-08-02 00:06:40  [ main:355 ] - [ DEBUG ]  Adding type registration java.lang.Class -> org.hibernate.type.ClassType@14ea6da9
2016-08-02 00:06:40  [ main:356 ] - [ DEBUG ]  Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3998b70
2016-08-02 00:06:40  [ main:356 ] - [ DEBUG ]  Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3998b70
2016-08-02 00:06:40  [ main:357 ] - [ DEBUG ]  Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@e41210d
2016-08-02 00:06:40  [ main:358 ] - [ DEBUG ]  Adding type registration binary -> org.hibernate.type.BinaryType@59eaac28
2016-08-02 00:06:40  [ main:358 ] - [ DEBUG ]  Adding type registration byte[] -> org.hibernate.type.BinaryType@59eaac28
2016-08-02 00:06:40  [ main:359 ] - [ DEBUG ]  Adding type registration [B -> org.hibernate.type.BinaryType@59eaac28
2016-08-02 00:06:40  [ main:361 ] - [ DEBUG ]  Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ab8a136
2016-08-02 00:06:40  [ main:362 ] - [ DEBUG ]  Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ab8a136
2016-08-02 00:06:40  [ main:362 ] - [ DEBUG ]  Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ab8a136
2016-08-02 00:06:40  [ main:363 ] - [ DEBUG ]  Adding type registration image -> org.hibernate.type.ImageType@6aab809
2016-08-02 00:06:40  [ main:365 ] - [ DEBUG ]  Adding type registration characters -> org.hibernate.type.CharArrayType@65f2006b
2016-08-02 00:06:40  [ main:366 ] - [ DEBUG ]  Adding type registration char[] -> org.hibernate.type.CharArrayType@65f2006b
2016-08-02 00:06:40  [ main:366 ] - [ DEBUG ]  Adding type registration [C -> org.hibernate.type.CharArrayType@65f2006b
2016-08-02 00:06:40  [ main:367 ] - [ DEBUG ]  Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a8d4e97
2016-08-02 00:06:40  [ main:368 ] - [ DEBUG ]  Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a8d4e97
2016-08-02 00:06:40  [ main:368 ] - [ DEBUG ]  Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a8d4e97
2016-08-02 00:06:40  [ main:368 ] - [ DEBUG ]  Adding type registration text -> org.hibernate.type.TextType@2f0ee71d
2016-08-02 00:06:40  [ main:369 ] - [ DEBUG ]  Adding type registration ntext -> org.hibernate.type.NTextType@18a81f43
2016-08-02 00:06:40  [ main:377 ] - [ DEBUG ]  Adding type registration blob -> org.hibernate.type.BlobType@4fddd0b
2016-08-02 00:06:40  [ main:378 ] - [ DEBUG ]  Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4fddd0b
2016-08-02 00:06:40  [ main:378 ] - [ DEBUG ]  Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3fb0ea5a
2016-08-02 00:06:40  [ main:382 ] - [ DEBUG ]  Adding type registration clob -> org.hibernate.type.ClobType@42e4527a
2016-08-02 00:06:40  [ main:382 ] - [ DEBUG ]  Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42e4527a
2016-08-02 00:06:40  [ main:387 ] - [ DEBUG ]  Adding type registration nclob -> org.hibernate.type.NClobType@34c0328
2016-08-02 00:06:40  [ main:387 ] - [ DEBUG ]  Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@34c0328
2016-08-02 00:06:40  [ main:388 ] - [ DEBUG ]  Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3f44dbd0
2016-08-02 00:06:40  [ main:389 ] - [ DEBUG ]  Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4e9e7777
2016-08-02 00:06:40  [ main:390 ] - [ DEBUG ]  Adding type registration serializable -> org.hibernate.type.SerializableType@17b56119
2016-08-02 00:06:40  [ main:397 ] - [ DEBUG ]  Adding type registration object -> org.hibernate.type.ObjectType@66b664d7
2016-08-02 00:06:40  [ main:397 ] - [ DEBUG ]  Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@66b664d7
2016-08-02 00:06:40  [ main:398 ] - [ DEBUG ]  Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@292cdf90
2016-08-02 00:06:40  [ main:398 ] - [ DEBUG ]  Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@41097c0e
2016-08-02 00:06:40  [ main:399 ] - [ DEBUG ]  Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@55af9c7d
2016-08-02 00:06:40  [ main:399 ] - [ DEBUG ]  Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7c4afe7d
2016-08-02 00:06:40  [ main:399 ] - [ DEBUG ]  Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1f8a004b
2016-08-02 00:06:40  [ main:399 ] - [ DEBUG ]  Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d194c1a
2016-08-02 00:06:40  [ main:399 ] - [ DEBUG ]  Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@67d34de2
2016-08-02 00:06:40  [ main:399 ] - [ DEBUG ]  Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@619e65ae
2016-08-02 00:06:40  [ main:437 ] - [ INFO ]  HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-08-02 00:06:40  [ main:455 ] - [ DEBUG ]  IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-08-02 00:06:40  [ main:464 ] - [ INFO ]  HHH000422: Disabling contextual LOB creation as connection was null
2016-08-02 00:06:40  [ main:502 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-08-02 00:06:40  [ main:503 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-08-02 00:06:40  [ main:504 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-08-02 00:06:40  [ main:504 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-08-02 00:06:40  [ main:505 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-08-02 00:06:40  [ main:506 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-08-02 00:06:40  [ main:506 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-08-02 00:06:40  [ main:507 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-08-02 00:06:40  [ main:508 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-08-02 00:06:40  [ main:509 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-08-02 00:06:40  [ main:511 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-08-02 00:06:40  [ main:512 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-08-02 00:06:40  [ main:512 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-08-02 00:06:40  [ main:513 ] - [ DEBUG ]  Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-08-02 00:06:40  [ main:543 ] - [ DEBUG ]  Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-08-02 00:06:40  [ main:567 ] - [ DEBUG ]  Binding entity from annotated class: com.qjk.data.User
2016-08-02 00:06:40  [ main:589 ] - [ DEBUG ]  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-08-02 00:06:40  [ main:597 ] - [ DEBUG ]  Import with entity name User
2016-08-02 00:06:40  [ main:603 ] - [ DEBUG ]  Bind entity com.qjk.data.User on table User
2016-08-02 00:06:40  [ main:633 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=uid, insertable=true, updatable=true, unique=false}
2016-08-02 00:06:40  [ main:636 ] - [ DEBUG ]  MetadataSourceProcessor property uid with lazy=false
2016-08-02 00:06:40  [ main:638 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:uid]
2016-08-02 00:06:40  [ main:640 ] - [ DEBUG ]  building SimpleValue for uid
2016-08-02 00:06:40  [ main:642 ] - [ DEBUG ]  Building property uid
2016-08-02 00:06:40  [ main:646 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=email, insertable=true, updatable=true, unique=false}
2016-08-02 00:06:40  [ main:646 ] - [ DEBUG ]  MetadataSourceProcessor property email with lazy=false
2016-08-02 00:06:40  [ main:646 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:email]
2016-08-02 00:06:40  [ main:646 ] - [ DEBUG ]  building SimpleValue for email
2016-08-02 00:06:40  [ main:646 ] - [ DEBUG ]  Building property email
2016-08-02 00:06:40  [ main:647 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=logo, insertable=true, updatable=true, unique=false}
2016-08-02 00:06:40  [ main:647 ] - [ DEBUG ]  MetadataSourceProcessor property logo with lazy=false
2016-08-02 00:06:40  [ main:647 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:logo]
2016-08-02 00:06:40  [ main:647 ] - [ DEBUG ]  building SimpleValue for logo
2016-08-02 00:06:40  [ main:647 ] - [ DEBUG ]  Building property logo
2016-08-02 00:06:40  [ main:648 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=nick, insertable=true, updatable=true, unique=false}
2016-08-02 00:06:40  [ main:648 ] - [ DEBUG ]  MetadataSourceProcessor property nick with lazy=false
2016-08-02 00:06:40  [ main:648 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:nick]
2016-08-02 00:06:40  [ main:648 ] - [ DEBUG ]  building SimpleValue for nick
2016-08-02 00:06:40  [ main:649 ] - [ DEBUG ]  Building property nick
2016-08-02 00:06:40  [ main:649 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=password, insertable=true, updatable=true, unique=false}
2016-08-02 00:06:40  [ main:649 ] - [ DEBUG ]  MetadataSourceProcessor property password with lazy=false
2016-08-02 00:06:40  [ main:649 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:password]
2016-08-02 00:06:40  [ main:650 ] - [ DEBUG ]  building SimpleValue for password
2016-08-02 00:06:40  [ main:650 ] - [ DEBUG ]  Building property password
2016-08-02 00:06:40  [ main:650 ] - [ DEBUG ]  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2016-08-02 00:06:40  [ main:650 ] - [ DEBUG ]  MetadataSourceProcessor property phone with lazy=false
2016-08-02 00:06:40  [ main:650 ] - [ DEBUG ]  Attempting to locate auto-apply AttributeConverter for property [com.qjk.data.User:phone]
2016-08-02 00:06:40  [ main:650 ] - [ DEBUG ]  building SimpleValue for phone
2016-08-02 00:06:40  [ main:651 ] - [ DEBUG ]  Building property phone
2016-08-02 00:06:40  [ main:652 ] - [ DEBUG ]  Starting fillSimpleValue for uid
2016-08-02 00:06:40  [ main:652 ] - [ DEBUG ]  Starting fillSimpleValue for email
2016-08-02 00:06:40  [ main:652 ] - [ DEBUG ]  Starting fillSimpleValue for logo
2016-08-02 00:06:40  [ main:652 ] - [ DEBUG ]  Starting fillSimpleValue for nick
2016-08-02 00:06:40  [ main:652 ] - [ DEBUG ]  Starting fillSimpleValue for password
2016-08-02 00:06:40  [ main:652 ] - [ DEBUG ]  Starting fillSimpleValue for phone
2016-08-02 00:06:40  [ main:653 ] - [ DEBUG ]  Forcing column [uid] to be non-null as it is part of the primary key for table [user]
2016-08-02 00:06:40  [ main:694 ] - [ DEBUG ]  Building session factory
2016-08-02 00:06:40  [ main:695 ] - [ DEBUG ]  SessionFactory name : null
2016-08-02 00:06:40  [ main:695 ] - [ DEBUG ]  Automatic flush during beforeCompletion(): disabled
2016-08-02 00:06:40  [ main:695 ] - [ DEBUG ]  Automatic session close at end of transaction: disabled
2016-08-02 00:06:40  [ main:695 ] - [ DEBUG ]  Statistics: disabled
2016-08-02 00:06:40  [ main:695 ] - [ DEBUG ]  Deleted entity synthetic identifier rollback: disabled
2016-08-02 00:06:40  [ main:695 ] - [ DEBUG ]  Default entity-mode: pojo
2016-08-02 00:06:40  [ main:695 ] - [ DEBUG ]  Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-08-02 00:06:40  [ main:695 ] - [ DEBUG ]  Allow initialization of lazy state outside session : disabled
2016-08-02 00:06:40  [ main:695 ] - [ DEBUG ]  Using BatchFetchStyle : LEGACY
2016-08-02 00:06:40  [ main:695 ] - [ DEBUG ]  Default batch fetch size: -1
2016-08-02 00:06:40  [ main:695 ] - [ DEBUG ]  Maximum outer join fetch depth: 2
2016-08-02 00:06:40  [ main:696 ] - [ DEBUG ]  Default null ordering: NONE
2016-08-02 00:06:40  [ main:696 ] - [ DEBUG ]  Order SQL updates by primary key: disabled
2016-08-02 00:06:40  [ main:696 ] - [ DEBUG ]  Order SQL inserts for batching: disabled
2016-08-02 00:06:40  [ main:696 ] - [ DEBUG ]  multi-tenancy strategy : NONE
2016-08-02 00:06:40  [ main:696 ] - [ DEBUG ]  JTA Track by Thread: enabled
2016-08-02 00:06:40  [ main:696 ] - [ DEBUG ]  Query language substitutions: {}
2016-08-02 00:06:40  [ main:696 ] - [ DEBUG ]  JPA query language strict compliance: disabled
2016-08-02 00:06:40  [ main:696 ] - [ DEBUG ]  Named query checking : enabled
2016-08-02 00:06:40  [ main:696 ] - [ DEBUG ]  Second-level cache: enabled
2016-08-02 00:06:40  [ main:696 ] - [ DEBUG ]  Second-level query cache: disabled
2016-08-02 00:06:40  [ main:696 ] - [ DEBUG ]  Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@27970e7e
2016-08-02 00:06:40  [ main:697 ] - [ DEBUG ]  Second-level cache region prefix: null
2016-08-02 00:06:40  [ main:697 ] - [ DEBUG ]  Optimize second-level cache for minimal puts: disabled
2016-08-02 00:06:40  [ main:697 ] - [ DEBUG ]  Structured second-level cache entries: disabled
2016-08-02 00:06:40  [ main:697 ] - [ DEBUG ]  Second-level cache direct-reference entries: disabled
2016-08-02 00:06:40  [ main:697 ] - [ DEBUG ]  Automatic eviction of collection cache: disabled
2016-08-02 00:06:40  [ main:697 ] - [ DEBUG ]  JDBC batch size: 0
2016-08-02 00:06:40  [ main:697 ] - [ DEBUG ]  JDBC batch updates for versioned data: enabled
2016-08-02 00:06:40  [ main:697 ] - [ DEBUG ]  Scrollable result sets: disabled
2016-08-02 00:06:40  [ main:697 ] - [ DEBUG ]  Wrap result sets: disabled
2016-08-02 00:06:40  [ main:697 ] - [ DEBUG ]  JDBC3 getGeneratedKeys(): disabled
2016-08-02 00:06:40  [ main:698 ] - [ DEBUG ]  JDBC result set fetch size: null
2016-08-02 00:06:40  [ main:698 ] - [ DEBUG ]  Connection release mode: ON_CLOSE
2016-08-02 00:06:40  [ main:698 ] - [ DEBUG ]  Generate SQL with comments: disabled
2016-08-02 00:06:40  [ main:750 ] - [ DEBUG ]  Session factory constructed with filter configurations : {}
2016-08-02 00:06:40  [ main:754 ] - [ DEBUG ]  Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib, java.vm.version=24.79-b02, gopherProxySet=false, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3d1bef58, hibernate.temp.use_jdbc_metadata_defaults=false, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@234f79cb], user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/Applications/ide/workspace/product, java.runtime.version=1.7.0_79-b15, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/endorsed, os.arch=x86_64, java.io.tmpdir=/var/folders/hm/gtyh2n810gb6wd9xk127pzt00000gn/T/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Mac OS X, sun.jnu.encoding=UTF-8, java.library.path=/Users/qiejinkai/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., hibernate.connection.datasource={
	CreateTime:"2016-08-02 00:06:39",
	ActiveCount:0,
	PoolingCount:10,
	CreateCount:10,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
		{ID:1962842559, ConnectTime:"2016-08-02 00:06:39", UseCount:0, LastActiveTime:"2016-08-02 00:06:39"},
		{ID:1998587546, ConnectTime:"2016-08-02 00:06:39", UseCount:0, LastActiveTime:"2016-08-02 00:06:39"},
		{ID:1469162895, ConnectTime:"2016-08-02 00:06:39", UseCount:0, LastActiveTime:"2016-08-02 00:06:39"},
		{ID:453803059, ConnectTime:"2016-08-02 00:06:39", UseCount:0, LastActiveTime:"2016-08-02 00:06:39"},
		{ID:1353582116, ConnectTime:"2016-08-02 00:06:39", UseCount:0, LastActiveTime:"2016-08-02 00:06:39"},
		{ID:1360350941, ConnectTime:"2016-08-02 00:06:39", UseCount:0, LastActiveTime:"2016-08-02 00:06:39"},
		{ID:1307359425, ConnectTime:"2016-08-02 00:06:39", UseCount:0, LastActiveTime:"2016-08-02 00:06:39"},
		{ID:1884663518, ConnectTime:"2016-08-02 00:06:39", UseCount:0, LastActiveTime:"2016-08-02 00:06:39"},
		{ID:155953776, ConnectTime:"2016-08-02 00:06:39", UseCount:0, LastActiveTime:"2016-08-02 00:06:39"},
		{ID:1185063892, ConnectTime:"2016-08-02 00:06:39", UseCount:0, LastActiveTime:"2016-08-02 00:06:39"}
	]
}

[
	{
	ID:1962842559, 
	poolStatements:[
		]
	},
	{
	ID:1998587546, 
	poolStatements:[
		]
	},
	{
	ID:1469162895, 
	poolStatements:[
		]
	},
	{
	ID:453803059, 
	poolStatements:[
		]
	},
	{
	ID:1353582116, 
	poolStatements:[
		]
	},
	{
	ID:1360350941, 
	poolStatements:[
		]
	},
	{
	ID:1307359425, 
	poolStatements:[
		]
	},
	{
	ID:1884663518, 
	poolStatements:[
		]
	},
	{
	ID:155953776, 
	poolStatements:[
		]
	},
	{
	ID:1185063892, 
	poolStatements:[
		]
	}
], java.class.version=51.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.10.5, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, user.home=/Users/qiejinkai, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=false, user.name=qiejinkai, java.class.path=/Applications/ide/workspace/product/target/test-classes:/Applications/ide/workspace/product/target/classes:/Applications/ide/apache-tomcat-7.0.61/lib/annotations-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina-ant.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina-ha.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina-tribes.jar:/Applications/ide/apache-tomcat-7.0.61/lib/catalina.jar:/Applications/ide/apache-tomcat-7.0.61/lib/ecj-4.4.2.jar:/Applications/ide/apache-tomcat-7.0.61/lib/el-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/jasper-el.jar:/Applications/ide/apache-tomcat-7.0.61/lib/jasper.jar:/Applications/ide/apache-tomcat-7.0.61/lib/jsp-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/servlet-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-api.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-coyote.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-dbcp.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-i18n-es.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-i18n-fr.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-i18n-ja.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-jdbc.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat-util.jar:/Applications/ide/apache-tomcat-7.0.61/lib/tomcat7-websocket.jar:/Applications/ide/apache-tomcat-7.0.61/lib/websocket-api.jar:/Applications/ide/eclipse/plugins/org.junit_4.11.0.v201303080030/junit.jar:/Applications/ide/eclipse/plugins/org.hamcrest.core_1.3.0.v201303031735.jar:/Users/qiejinkai/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-context/4.2.3.RELEASE/spring-context-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-aop/4.2.3.RELEASE/spring-aop-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-beans/4.2.3.RELEASE/spring-beans-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-core/4.2.3.RELEASE/spring-core-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-expression/4.2.3.RELEASE/spring-expression-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-web/4.2.3.RELEASE/spring-web-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-webmvc/4.2.3.RELEASE/spring-webmvc-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-jdbc/4.2.3.RELEASE/spring-jdbc-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-test/4.2.3.RELEASE/spring-test-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-tx/4.2.3.RELEASE/spring-tx-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-orm/4.2.3.RELEASE/spring-orm-4.2.3.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/aspectj/aspectjweaver/1.8.4/aspectjweaver-1.8.4.jar:/Users/qiejinkai/.m2/repository/org/springframework/data/spring-data-redis/1.4.1.RELEASE/spring-data-redis-1.4.1.RELEASE.jar:/Users/qiejinkai/.m2/repository/org/springframework/spring-context-support/4.0.7.RELEASE/spring-context-support-4.0.7.RELEASE.jar:/Users/qiejinkai/.m2/repository/redis/clients/jedis/2.6.1/jedis-2.6.1.jar:/Users/qiejinkai/.m2/repository/org/springframework/session/spring-session/1.2.1.RELEASE/spring-session-1.2.1.RELEASE.jar:/Users/qiejinkai/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/qiejinkai/.m2/repository/org/apache/commons/commons-pool2/2.4.2/commons-pool2-2.4.2.jar:/Users/qiejinkai/.m2/repository/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/Users/qiejinkai/.m2/repository/org/mybatis/mybatis/3.2.8/mybatis-3.2.8.jar:/Users/qiejinkai/.m2/repository/com/google/code/gson/gson/2.3.1/gson-2.3.1.jar:/Users/qiejinkai/.m2/repository/mysql/mysql-connector-java/5.1.34/mysql-connector-java-5.1.34.jar:/Users/qiejinkai/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/Users/qiejinkai/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/Users/qiejinkai/.m2/repository/com/alibaba/druid/1.0.11/druid-1.0.11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/lib/tools.jar:/Users/qiejinkai/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/qiejinkai/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/qiejinkai/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-validator/5.2.0.Alpha1/hibernate-validator-5.2.0.Alpha1.jar:/Users/qiejinkai/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar:/Users/qiejinkai/.m2/repository/com/sun/mail/mailapi/1.5.2/mailapi-1.5.2.jar:/Users/qiejinkai/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/qiejinkai/.m2/repository/com/sun/mail/smtp/1.5.2/smtp-1.5.2.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-core/5.1.0.Final/hibernate-core-5.1.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/qiejinkai/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/Users/qiejinkai/.m2/repository/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-entitymanager/5.1.0.Final/hibernate-entitymanager-5.1.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-annotations/3.5.6-Final/hibernate-annotations-3.5.6-Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/Users/qiejinkai/.m2/repository/org/hibernate/hibernate-ehcache/5.1.0.Final/hibernate-ehcache-5.1.0.Final.jar:/Users/qiejinkai/.m2/repository/net/sf/ehcache/ehcache/2.10.1/ehcache-2.10.1.jar:/Users/qiejinkai/.m2/repository/org/slf4j/slf4j-api/1.7.21/slf4j-api-1.7.21.jar:/Users/qiejinkai/.m2/repository/org/slf4j/slf4j-log4j12/1.7.21/slf4j-log4j12-1.7.21.jar:/Users/qiejinkai/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/qiejinkai/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/qiejinkai/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/qiejinkai/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/Users/qiejinkai/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Applications/ide/eclipse/configuration/org.eclipse.osgi/360/0/.cp/:/Applications/ide/eclipse/configuration/org.eclipse.osgi/359/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 57920 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test dao.hibernate.TestHibernateDao:testAdd, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.vm.info=mixed mode, java.version=1.7.0_79, java.ext.dirs=/Users/qiejinkai/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/classes, java.vendor=Oracle Corporation, file.separator=/, hibernate.hbm2ddl.auto=update, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeBig, sun.cpu.endian=little, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, sun.cpu.isalist=}
2016-08-02 00:06:40  [ main:782 ] - [ INFO ]  HV000001: Hibernate Validator 5.2.0.Alpha1
2016-08-02 00:06:40  [ main:792 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2016-08-02 00:06:40  [ main:793 ] - [ DEBUG ]  Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2016-08-02 00:06:40  [ main:808 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2016-08-02 00:06:40  [ main:811 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2016-08-02 00:06:40  [ main:855 ] - [ DEBUG ]  Not known whether passed class name [com.qjk.data.User] is safe
2016-08-02 00:06:40  [ main:856 ] - [ DEBUG ]  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.qjk.data.User
2016-08-02 00:06:40  [ main:915 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@4caab3ce, groups=[Ljava.lang.Class;@5b02c0b4}, constraintType=GENERIC}.
2016-08-02 00:06:40  [ main:916 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@11b9981a, max=2147483647, groups=[Ljava.lang.Class;@2fb0dc0d}, constraintType=GENERIC}.
2016-08-02 00:06:40  [ main:919 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@4b5574d, groups=[Ljava.lang.Class;@1d7682a5}, constraintType=GENERIC}.
2016-08-02 00:06:40  [ main:919 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@4f7b2dbf, max=2147483647, groups=[Ljava.lang.Class;@1ff87f5d}, constraintType=GENERIC}.
2016-08-02 00:06:40  [ main:922 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Pattern, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Pattern.message}, payload=[Ljava.lang.Class;@51196da, flags=[Ljavax.validation.constraints.Pattern$Flag;@45c6c4cf, regexp=.*, groups=[Ljava.lang.Class;@7ca315d2}, constraintType=GENERIC}.
2016-08-02 00:06:40  [ main:922 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@36edcdeb, groups=[Ljava.lang.Class;@366a1b79}, constraintType=GENERIC}.
2016-08-02 00:06:40  [ main:922 ] - [ DEBUG ]  Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface com.qjk.data.group.ValidateInPost], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@7031c0d7, max=2147483647, groups=[Ljava.lang.Class;@526b9ccc}, constraintType=GENERIC}.
2016-08-02 00:06:40  [ main:954 ] - [ DEBUG ]  Skipping JACC integration as it was not enabled
2016-08-02 00:06:40  [ main:988 ] - [ DEBUG ]  Not known whether passed class name [com.qjk.data.User] is safe
2016-08-02 00:06:40  [ main:988 ] - [ DEBUG ]  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.qjk.data.User
2016-08-02 00:06:40  [ main:1012 ] - [ DEBUG ]  Not known whether passed class name [com.qjk.data.User] is safe
2016-08-02 00:06:40  [ main:1012 ] - [ DEBUG ]  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.qjk.data.User
2016-08-02 00:06:40  [ main:1086 ] - [ DEBUG ]  Static SQL for entity: com.qjk.data.User
2016-08-02 00:06:40  [ main:1086 ] - [ DEBUG ]   Version select: select uid from User where uid =?
2016-08-02 00:06:40  [ main:1086 ] - [ DEBUG ]   Snapshot select: select user_.uid, user_.email as email2_0_, user_.logo as logo3_0_, user_.nick as nick4_0_, user_.password as password5_0_, user_.phone as phone6_0_ from User user_ where user_.uid=?
2016-08-02 00:06:40  [ main:1087 ] - [ DEBUG ]   Insert 0: insert into User (email, logo, nick, password, phone, uid) values (?, ?, ?, ?, ?, ?)
2016-08-02 00:06:40  [ main:1087 ] - [ DEBUG ]   Update 0: update User set email=?, logo=?, nick=?, password=?, phone=? where uid=?
2016-08-02 00:06:40  [ main:1087 ] - [ DEBUG ]   Delete 0: delete from User where uid=?
2016-08-02 00:06:40  [ main:1111 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1462722a]
2016-08-02 00:06:40  [ main:1112 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:06:40  [ main:1112 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:06:40  [ main:1112 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:06:40  [ main:1112 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:06:40  [ main:1112 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:06:40  [ main:1113 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:06:40  [ main:1126 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:06:40  [ main:1130 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:06:40  [ main:1132 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [NONE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:06:40  [ main:1132 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75843255]
2016-08-02 00:06:40  [ main:1132 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:06:40  [ main:1132 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:06:40  [ main:1133 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:06:40  [ main:1133 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:06:40  [ main:1133 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:06:40  [ main:1133 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:06:40  [ main:1133 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:06:40  [ main:1133 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:06:40  [ main:1133 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [READ]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:06:40  [ main:1134 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75dd971]
2016-08-02 00:06:40  [ main:1134 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:06:40  [ main:1134 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:06:40  [ main:1134 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:06:40  [ main:1134 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:06:40  [ main:1134 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:06:40  [ main:1134 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:06:40  [ main:1135 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:06:40  [ main:1135 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:06:40  [ main:1136 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [UPGRADE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:06:40  [ main:1136 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@80b5cdb]
2016-08-02 00:06:40  [ main:1136 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:06:40  [ main:1136 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:06:40  [ main:1136 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:06:40  [ main:1136 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:06:40  [ main:1137 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:06:40  [ main:1137 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:06:40  [ main:1137 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:06:40  [ main:1137 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:06:40  [ main:1138 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [UPGRADE_NOWAIT]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:06:40  [ main:1138 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75dcea79]
2016-08-02 00:06:40  [ main:1138 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:06:40  [ main:1138 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:06:40  [ main:1138 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:06:40  [ main:1138 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:06:40  [ main:1138 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:06:40  [ main:1138 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:06:40  [ main:1138 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:06:40  [ main:1139 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:06:40  [ main:1139 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [UPGRADE_SKIPLOCKED]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:06:40  [ main:1139 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22bf06d6]
2016-08-02 00:06:40  [ main:1139 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:06:40  [ main:1139 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:06:40  [ main:1140 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:06:40  [ main:1140 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:06:40  [ main:1140 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:06:40  [ main:1140 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:06:40  [ main:1140 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:06:40  [ main:1140 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:06:40  [ main:1140 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [FORCE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:06:40  [ main:1141 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18d7f3b0]
2016-08-02 00:06:40  [ main:1141 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:06:40  [ main:1141 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:06:40  [ main:1141 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:06:40  [ main:1141 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:06:40  [ main:1141 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:06:40  [ main:1141 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:06:40  [ main:1141 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:06:40  [ main:1141 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:06:40  [ main:1142 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [PESSIMISTIC_READ]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? lock in share mode
2016-08-02 00:06:40  [ main:1142 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8e6dba2]
2016-08-02 00:06:40  [ main:1142 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:06:40  [ main:1142 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:06:40  [ main:1142 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:06:40  [ main:1142 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:06:40  [ main:1142 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:06:40  [ main:1142 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:06:40  [ main:1142 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:06:40  [ main:1143 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:06:40  [ main:1143 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [PESSIMISTIC_WRITE]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:06:40  [ main:1144 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69af3906]
2016-08-02 00:06:40  [ main:1144 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:06:40  [ main:1144 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:06:40  [ main:1144 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:06:40  [ main:1144 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:06:40  [ main:1144 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:06:40  [ main:1144 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:06:40  [ main:1144 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:06:40  [ main:1145 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:06:40  [ main:1145 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=? for update
2016-08-02 00:06:40  [ main:1145 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49cad364]
2016-08-02 00:06:40  [ main:1145 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:06:40  [ main:1145 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:06:40  [ main:1146 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:06:40  [ main:1146 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:06:40  [ main:1146 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:06:40  [ main:1146 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:06:40  [ main:1146 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:06:40  [ main:1147 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:06:40  [ main:1147 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [OPTIMISTIC]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:06:40  [ main:1147 ] - [ DEBUG ]  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b2284a4]
2016-08-02 00:06:40  [ main:1147 ] - [ DEBUG ]  Visiting attribute path : email
2016-08-02 00:06:40  [ main:1147 ] - [ DEBUG ]  Visiting attribute path : logo
2016-08-02 00:06:40  [ main:1148 ] - [ DEBUG ]  Visiting attribute path : nick
2016-08-02 00:06:40  [ main:1148 ] - [ DEBUG ]  Visiting attribute path : password
2016-08-02 00:06:40  [ main:1148 ] - [ DEBUG ]  Visiting attribute path : phone
2016-08-02 00:06:40  [ main:1148 ] - [ DEBUG ]  Building LoadPlan...
2016-08-02 00:06:40  [ main:1148 ] - [ DEBUG ]  processing queryspace <gen:0>
2016-08-02 00:06:40  [ main:1148 ] - [ DEBUG ]  LoadPlan(entity=com.qjk.data.User)
    - Returns
       - EntityReturnImpl(entity=com.qjk.data.User, querySpaceUid=<gen:0>, path=com.qjk.data.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.qjk.data.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {uid1_0_0_}

2016-08-02 00:06:40  [ main:1149 ] - [ DEBUG ]  Static select for entity com.qjk.data.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:06:40  [ main:1165 ] - [ DEBUG ]  Static select for action ACTION_MERGE on entity com.qjk.data.User: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:06:40  [ main:1165 ] - [ DEBUG ]  Static select for action ACTION_REFRESH on entity com.qjk.data.User: select user0_.uid as uid1_0_0_, user0_.email as email2_0_0_, user0_.logo as logo3_0_0_, user0_.nick as nick4_0_0_, user0_.password as password5_0_0_, user0_.phone as phone6_0_0_ from User user0_ where user0_.uid=?
2016-08-02 00:06:40  [ main:1165 ] - [ DEBUG ]  Instantiated session factory
2016-08-02 00:06:40  [ main:1206 ] - [ DEBUG ]  No alter strings for table : hibernate_sequence
2016-08-02 00:06:41  [ main:1227 ] - [ DEBUG ]  No alter strings for table : User
2016-08-02 00:06:41  [ main:1233 ] - [ DEBUG ]  No JtaPlatform was specified, checking resolver
2016-08-02 00:06:41  [ main:1233 ] - [ DEBUG ]  No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-08-02 00:06:41  [ main:1236 ] - [ DEBUG ]  Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-08-02 00:06:41  [ main:1237 ] - [ DEBUG ]  Checking 0 named HQL queries
2016-08-02 00:06:41  [ main:1237 ] - [ DEBUG ]  Checking 0 named SQL queries
2016-08-02 00:06:41  [ main:1238 ] - [ DEBUG ]  Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@250cf84b
2016-08-02 00:06:41  [ main:1238 ] - [ DEBUG ]  Registering SessionFactory: cc8a7ebc-6f24-4b47-a797-a6d13fc07f38 (<unnamed>)
2016-08-02 00:06:41  [ main:1238 ] - [ DEBUG ]  Not binding SessionFactory to JNDI, no JNDI name configured
2016-08-02 00:06:41  [ Thread-3:1690 ] - [ DEBUG ]  HHH000031: Closing
2016-08-02 00:06:41  [ Thread-3:1690 ] - [ DEBUG ]  Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2016-08-02 00:06:41  [ Thread-3:1690 ] - [ DEBUG ]  Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2016-08-02 00:06:41  [ Thread-3:1693 ] - [ INFO ]  {dataSource-1} closed
